{"version":3,"sources":["webpack:///./node_modules/aws-sdk/lib/dynamodb/set.js","webpack:///./node_modules/aws-sdk/lib/protocol/json.js","webpack:///./node_modules/aws-sdk/lib/util.js","webpack:///./node_modules/aws-sdk/lib/signers/request_signer.js","webpack:///./node_modules/aws-sdk/clients/inspector.js","webpack:///./node_modules/aws-sdk/lib/xml/browser_parser.js","webpack:///./node_modules/aws-sdk/lib/model/resource_waiter.js","webpack:///./node_modules/aws-sdk/clients/directconnect.js","webpack:///./node_modules/aws-sdk/clients/translate.js","webpack:///./node_modules/aws-sdk/clients/iam.js","webpack:///./node_modules/aws-sdk/lib/signers/v2.js","webpack:///./node_modules/aws-sdk/clients/dynamodbstreams.js","webpack:///./node_modules/aws-sdk/clients/apigateway.js","webpack:///./node_modules/aws-sdk/vendor/endpoint-cache/index.js","webpack:///./node_modules/aws-sdk/lib/signers/v4_credentials.js","webpack:///./node_modules/aws-sdk/lib/services/iotdata.js","webpack:///./node_modules/aws-sdk/clients/iotanalytics.js","webpack:///./node_modules/aws-sdk/lib/signers/presign.js","webpack:///./node_modules/aws-sdk/clients/elb.js","webpack:///./node_modules/aws-sdk/lib/services/machinelearning.js","webpack:///./node_modules/aws-sdk/lib/dynamodb/converter.js","webpack:///./node_modules/aws-sdk/clients/browser_default.js","webpack:///./node_modules/aws-sdk/clients/codepipeline.js","webpack:///./node_modules/aws-sdk/clients/kinesis.js","webpack:///./node_modules/aws-sdk/lib/json/builder.js","webpack:///./node_modules/aws-sdk/clients/emr.js","webpack:///./node_modules/aws-sdk/lib/services/cognitoidentity.js","webpack:///./node_modules/aws-sdk/lib/protocol/rest.js","webpack:///./node_modules/aws-sdk/lib/signers/v4.js","webpack:///./node_modules/aws-sdk/clients/comprehend.js","webpack:///./node_modules/aws-sdk/clients/forecastservice.js","webpack:///./node_modules/aws-sdk/lib/dynamodb/numberValue.js","webpack:///./node_modules/aws-sdk/lib/services/ec2.js","webpack:///./node_modules/aws-sdk/lib/http/xhr.js","webpack:///./node_modules/aws-sdk/clients/codebuild.js","webpack:///./node_modules/aws-sdk/clients/lexruntime.js","webpack:///./node_modules/aws-sdk/lib/services/lambda.js","webpack:///./node_modules/aws-sdk/clients/firehose.js","webpack:///./node_modules/aws-sdk/node_modules/uuid/v1.js","webpack:///./node_modules/aws-sdk/clients/kinesisvideomedia.js","webpack:///./node_modules/aws-sdk/lib/event-stream/buffered-create-event-stream.js","webpack:///./node_modules/aws-sdk/lib/signers/v3.js","webpack:///./node_modules/aws-sdk/clients/resourcegroups.js","webpack:///./node_modules/aws-sdk/clients/cloudhsm.js","webpack:///./node_modules/aws-sdk/lib/services/apigateway.js","webpack:///./node_modules/aws-sdk/lib/http.js","webpack:///./node_modules/aws-sdk/clients/configservice.js","webpack:///./node_modules/aws-sdk/clients/cloudwatchlogs.js","webpack:///./node_modules/aws-sdk/lib/core.js","webpack:///./node_modules/aws-sdk/lib/xml/escape-element.js","webpack:///./node_modules/aws-sdk/lib/browser.js","webpack:///./node_modules/aws-sdk/lib/signers/s3.js","webpack:///./node_modules/aws-sdk/lib/credentials/temporary_credentials.js","webpack:///./node_modules/aws-sdk/clients/mediastoredata.js","webpack:///./node_modules/aws-sdk/clients/xray.js","webpack:///./node_modules/aws-sdk/lib/model/paginator.js","webpack:///./node_modules/aws-sdk/lib/model/collection.js","webpack:///./node_modules/aws-sdk/lib/param_validator.js","webpack:///./node_modules/aws-sdk/clients/personalize.js","webpack:///./node_modules/aws-sdk/lib/services/s3.js","webpack:///./node_modules/aws-sdk/clients/gamelift.js","webpack:///./node_modules/aws-sdk/lib/signers/v3https.js","webpack:///./node_modules/aws-sdk/lib/discover_endpoint.js","webpack:///./node_modules/aws-sdk/lib/services/route53.js","webpack:///./node_modules/aws-sdk/lib/dynamodb/translator.js","webpack:///./node_modules/aws-sdk/lib/credentials/web_identity_credentials.js","webpack:///./node_modules/aws-sdk/node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/aws-sdk/clients/devicefarm.js","webpack:///./node_modules/aws-sdk/lib/services/cloudfront.js","webpack:///./node_modules/aws-sdk/clients/waf.js","webpack:///./node_modules/aws-sdk/clients/connect.js","webpack:///./node_modules/aws-sdk/clients/efs.js","webpack:///./node_modules/aws-sdk/clients/cloudfront.js","webpack:///./node_modules/aws-sdk/lib/api_loader.js","webpack:///./node_modules/aws-sdk/lib/polly/presigner.js","webpack:///./node_modules/aws-sdk/clients/lexmodelbuildingservice.js","webpack:///./node_modules/aws-sdk/lib/config_regional_endpoint.js","webpack:///./node_modules/aws-sdk/lib/xml/xml-node.js","webpack:///./node_modules/aws-sdk/lib/response.js","webpack:///./node_modules/aws-sdk/node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/aws-sdk/clients/kinesisvideosignalingchannels.js","webpack:///./node_modules/aws-sdk/clients/route53domains.js","webpack:///./node_modules/aws-sdk/clients/mobileanalytics.js","webpack:///./node_modules/aws-sdk/clients/iotdata.js","webpack:///./node_modules/aws-sdk/lib/config.js","webpack:///./node_modules/aws-sdk/clients/ecr.js","webpack:///./node_modules/aws-sdk/lib/xml/xml-text.js","webpack:///./node_modules/aws-sdk/clients/rekognition.js","webpack:///./node_modules/aws-sdk/lib/event-stream/parse-event.js","webpack:///./node_modules/aws-sdk/clients/costexplorer.js","webpack:///./node_modules/aws-sdk/clients/route53.js","webpack:///./node_modules/aws-sdk/lib/protocol/rest_xml.js","webpack:///./node_modules/aws-sdk/lib/sequential_executor.js","webpack:///./node_modules/aws-sdk/lib/query/query_param_serializer.js","webpack:///./node_modules/aws-sdk/clients/opsworks.js","webpack:///./node_modules/aws-sdk/vendor/endpoint-cache/utils/LRU.js","webpack:///./node_modules/aws-sdk/lib/json/parser.js","webpack:///./node_modules/aws-sdk/clients/comprehendmedical.js","webpack:///./node_modules/aws-sdk/lib/request.js","webpack:///./node_modules/aws-sdk/clients/ecs.js","webpack:///./node_modules/aws-sdk/lib/credentials/cognito_identity_credentials.js","webpack:///./node_modules/aws-sdk/lib/service.js","webpack:///./node_modules/aws-sdk/clients/cognitoidentityserviceprovider.js","webpack:///./node_modules/aws-sdk/clients/rds.js","webpack:///./node_modules/aws-sdk/clients/cognitoidentity.js","webpack:///./node_modules/aws-sdk/lib/protocol/helpers.js","webpack:///./node_modules/aws-sdk/clients/redshift.js","webpack:///./node_modules/aws-sdk/clients/lambda.js","webpack:///./node_modules/aws-sdk/clients/secretsmanager.js","webpack:///./node_modules/aws-sdk/clients/ssm.js","webpack:///./node_modules/aws-sdk/clients/polly.js","webpack:///./node_modules/aws-sdk/lib/services/sqs.js","webpack:///./node_modules/aws-sdk/lib/browser_loader.js","webpack:///./node_modules/aws-sdk/lib/event-stream/split-message.js","webpack:///./node_modules/aws-sdk/lib/xml/escape-attribute.js","webpack:///./node_modules/aws-sdk/clients/servicecatalog.js","webpack:///./node_modules/aws-sdk/node_modules/uuid/index.js","webpack:///./node_modules/aws-sdk/clients/personalizeevents.js","webpack:///./node_modules/aws-sdk/clients/dynamodb.js","webpack:///./node_modules/aws-sdk/lib/model/shape.js","webpack:///./node_modules/aws-sdk/lib/event-stream/int64.js","webpack:///./node_modules/aws-sdk/lib/browserHashUtils.js","webpack:///./node_modules/aws-sdk/lib/services/polly.js","webpack:///./node_modules/aws-sdk/clients/machinelearning.js","webpack:///./node_modules/aws-sdk/clients/codecommit.js","webpack:///./node_modules/aws-sdk/clients/cloudtrail.js","webpack:///./node_modules/aws-sdk/lib/resource_waiter.js","webpack:///./node_modules/aws-sdk/clients/cognitosync.js","webpack:///./node_modules/aws-sdk/clients/autoscaling.js","webpack:///./node_modules/aws-sdk/node_modules/uuid/v4.js","webpack:///./node_modules/aws-sdk/lib/s3/managed_upload.js","webpack:///./node_modules/aws-sdk/lib/services/dynamodb.js","webpack:///./node_modules/aws-sdk/clients/storagegateway.js","webpack:///./node_modules/aws-sdk/lib/credentials/chainable_temporary_credentials.js","webpack:///./node_modules/aws-sdk/clients/personalizeruntime.js","webpack:///./node_modules/aws-sdk/clients/s3.js","webpack:///./node_modules/aws-sdk/clients/elbv2.js","webpack:///./node_modules/aws-sdk/lib/event_listeners.js","webpack:///./node_modules/aws-sdk/clients/cloudformation.js","webpack:///./node_modules/aws-sdk/lib/credentials/credential_provider_chain.js","webpack:///./node_modules/aws-sdk/clients/acm.js","webpack:///./node_modules/aws-sdk/lib/credentials/saml_credentials.js","webpack:///./node_modules/aws-sdk/clients/kinesisvideoarchivedmedia.js","webpack:///./node_modules/aws-sdk/clients/sns.js","webpack:///./node_modules/aws-sdk/clients/mturk.js","webpack:///./node_modules/aws-sdk/lib/rds/signer.js","webpack:///./node_modules/aws-sdk/lib/xml/builder.js","webpack:///./node_modules/aws-sdk/clients/cloudwatch.js","webpack:///./node_modules/aws-sdk/lib/browserSha1.js","webpack:///./node_modules/aws-sdk/clients/forecastqueryservice.js","webpack:///./node_modules/aws-sdk/lib/browserMd5.js","webpack:///./node_modules/aws-sdk/lib/services/sts.js","webpack:///./node_modules/aws-sdk/lib/browserSha256.js","webpack:///./node_modules/aws-sdk/lib/services/s3util.js","webpack:///./node_modules/aws-sdk/lib/protocol/query.js","webpack:///./node_modules/aws-sdk/clients/pricing.js","webpack:///./node_modules/aws-sdk/clients/workdocs.js","webpack:///./node_modules/aws-sdk/lib/cloudfront/signer.js","webpack:///./node_modules/aws-sdk/clients/cloudwatchevents.js","webpack:///./node_modules/aws-sdk/clients/kms.js","webpack:///./node_modules/aws-sdk/clients/kinesisvideo.js","webpack:///./node_modules/aws-sdk/lib/model/operation.js","webpack:///./node_modules/aws-sdk/lib/realclock/browserClock.js","webpack:///./node_modules/aws-sdk/clients/iot.js","webpack:///./node_modules/aws-sdk/clients/applicationautoscaling.js","webpack:///./node_modules/aws-sdk/lib/region_config.js","webpack:///./node_modules/aws-sdk/lib/dynamodb/document_client.js","webpack:///./node_modules/aws-sdk/lib/dynamodb/types.js","webpack:///./node_modules/aws-sdk/clients/ec2.js","webpack:///./node_modules/aws-sdk/lib/event-stream/parse-message.js","webpack:///./node_modules/aws-sdk/clients/elastictranscoder.js","webpack:///./node_modules/aws-sdk/clients/cur.js","webpack:///./node_modules/aws-sdk/lib/browserCryptoLib.js","webpack:///./node_modules/aws-sdk/clients/marketplacecommerceanalytics.js","webpack:///./node_modules/aws-sdk/lib/services/rds.js","webpack:///./node_modules/aws-sdk/lib/model/api.js","webpack:///./node_modules/aws-sdk/lib/event-stream/event-message-chunker.js","webpack:///./node_modules/aws-sdk/clients/codedeploy.js","webpack:///./node_modules/aws-sdk/clients/sts.js","webpack:///./node_modules/aws-sdk/lib/credentials.js","webpack:///./node_modules/aws-sdk/clients/sqs.js","webpack:///./node_modules/aws-sdk/lib/state_machine.js","webpack:///./node_modules/aws-sdk/lib/protocol/rest_json.js","webpack:///./node_modules/aws-sdk/clients/elasticache.js","webpack:///./node_modules/aws-sdk/clients/elasticbeanstalk.js","webpack:///./node_modules/aws-sdk/lib/browserHmac.js","webpack:///./node_modules/aws-sdk/clients/ses.js"],"names":["util","typeOf","memberTypeToSetType","DynamoDBSet","inherit","constructor","list","options","this","wrapperName","initialize","validate","values","concat","detectType","type","error","Error","code","message","length","i","toJSON","module","exports","JsonBuilder","JsonParser","populateHostPrefix","buildRequest","req","httpRequest","api","service","target","targetPrefix","operations","operation","name","version","jsonVersion","input","builder","body","build","params","headers","extractError","resp","httpResponse","split","e","JSON","parse","toString","__type","Code","pop","Message","statusCode","statusMessage","extractData","request","config","convertResponseTypes","data","shape","output","parser","AWS","environment","engine","isBrowser","navigator","userAgent","process","platform","AWS_EXECUTION_ENV","agent","VERSION","uriEscape","string","encodeURIComponent","replace","escape","ch","charCodeAt","toUpperCase","uriEscapePath","parts","arrayEach","part","push","join","urlParse","url","urlFormat","format","queryStringParse","qs","querystring","queryParamsToString","items","sortedKeys","Object","keys","sort","value","ename","result","Array","isArray","vals","item","readFileSync","path","base64","encode","buffer","toBuffer","decode","encoding","Buffer","from","Uint8Array","alloc","size","fill","buf","undefined","toStream","isBuffer","readable","stream","pos","_read","end","slice","buffers","offset","copy","byteLength","lstatSync","object","upperFirst","substr","lowerFirst","toLowerCase","ini","currentSection","map","line","section","match","fn","noop","callback","err","makeAsync","expectedArgs","args","prototype","call","arguments","apply","date","getDate","systemClockOffset","Date","getTime","iso8601","toISOString","rfc822","toUTCString","unixTimestamp","formatter","parseTimestamp","crypto","crc32Table","crc32","tbl","crc","readUInt8","hmac","key","digest","lib","createHmac","update","md5","hash","sha256","algorithm","createHash","sliceFn","arraySliceFn","ArrayBuffer","on","chunk","FileReader","out","index","reader","onerror","onload","_continueReading","back","readAsArrayBuffer","toHex","abort","each","iterFunction","hasOwnProperty","array","idx","parseInt","obj1","obj2","merge","dupe","isEmpty","obj","prop","webkitSlice","mozSlice","isType","typeName","str","originalError","stack","defineProperty","writable","enumerable","String","time","klass","features","newObject","ctor","__super__","mixin","hideProperties","props","configurable","property","isValue","opts","get","memoizedProperty","cachedValue","hoistPayloadMember","operationName","payload","hasEventOutput","payloadMember","members","responsePayload","computeSha256","done","isNode","Stream","fs","settings","start","createReadStream","sha","isClockSkewed","serverTime","Math","abs","applyClockOffset","extractRequestId","requestId","ResponseMetadata","RequestId","addPromises","constructors","PromiseDependency","deletePromises","getPromisesDependency","Promise","ind","deletePromisesFromClass","addPromisesToClass","promisifyMethod","methodName","self","resolve","reject","isDualstackAvailable","metadata","serviceIdentifier","dualstackAvailable","calculateRetryDelay","retryCount","retryDelayOptions","customBackoff","base","random","pow","handleRequestWithRetries","cb","http","HttpClient","getInstance","httpOptions","errCallback","maxRetries","retryable","delay","setTimeout","sendRequest","retryAfter","handleRequest","defer","uuid","v4","convertPayloadToString","rules","nextTick","setImmediate","getRequestPayloadShape","getProfilesFromSharedConfig","iniLoader","filename","profiles","profilesFromConfig","configOptInEnv","loadFrom","isConfig","sharedConfigFileEnv","profilesFromCreds","sharedCredentialsFileEnv","profileNames","objectAssign","source","ARN","indexOf","arn","matched","partition","region","accountId","resource","arnObject","defaultProfile","imdsDisabledEnv","Signers","RequestSigner","setServiceClientId","id","serviceClientId","getServiceClientId","getVersion","V2","V3","V4","S3","V3Https","Service","apiLoader","services","Inspector","defineService","model","paginators","pagination","Shape","DomXmlParser","getElementByTagName","xml","tag","elements","getElementsByTagName","iLen","parentNode","parseXml","parseStructure","xmlKey","xmlValue","tagName","flattened","child","firstElementChild","nodeName","textContent","nextElementSibling","parseMap","member","parseList","childNodes","parseUnknown","getAttribute","create","text","toType","parseScalar","memberName","memberShape","isXmlAttribute","attributes","xmlChild","xmlNoDefaultLists","defaultValue","window","DOMParser","parseFromString","syntaxError","documentElement","isError","errorElement","ActiveXObject","async","loadXML","waiter","forEach","DirectConnect","Translate","IAM","waiters","addAuthorization","credentials","r","Timestamp","SignatureVersion","SignatureMethod","AWSAccessKeyId","accessKeyId","sessionToken","SecurityToken","Signature","signature","secretAccessKey","stringToSign","method","endpoint","host","pathname","DynamoDBStreams","APIGateway","LRU_1","EndpointCache","maxSize","cache","LRUCache","put","keyString","getKeyString","endpointRecord","populateValue","now","records","Expire","remove","identifiers","identifierNames","identifierName","endpoints","Address","CachePeriodInMinutes","empty","cachedSecret","cacheQueue","v4Identifier","createScope","serviceName","getSigningKey","shouldCache","cacheKey","kDate","kRegion","kService","signingKey","shift","emptyCache","blobPayloadOutputOps","IotData","validateService","setupRequestListeners","addListener","validateResponseBody","bodyCheck","trim","charAt","IoTAnalytics","expiresHeader","signedUrlBuilder","expires","signerClass","getSignerClass","getSkewCorrectedDate","signedUrlSigner","parsedUrl","queryParams","search","auth","Presign","sign","expireTime","removeListener","EventListeners","Core","SET_CONTENT_LENGTH","COMPUTE_SHA256","emit","response","ELB","MachineLearning","buildEndpoint","PredictEndpoint","Endpoint","NumberValue","convertNumber","wrapNumbers","Number","formatMap","M","formatted","DynamoDB","Converter","convertInput","L","formatList","convertEmptyValues","set","nonEmptyValues","Binary","filterEmptySetValues","formatSet","S","N","B","BOOL","NULL","marshall","convertOutput","unmarshall","ACM","ApplicationAutoScaling","AutoScaling","CloudFormation","CloudFront","CloudHSM","CloudTrail","CloudWatch","CloudWatchEvents","CloudWatchLogs","CodeBuild","CodeCommit","CodeDeploy","CodePipeline","CognitoIdentity","CognitoIdentityServiceProvider","CognitoSync","ConfigService","CUR","DeviceFarm","EC2","ECR","ECS","EFS","ElastiCache","ElasticBeanstalk","ELBv2","EMR","ElasticTranscoder","Firehose","GameLift","Iot","Kinesis","KMS","Lambda","LexRuntime","MarketplaceCommerceAnalytics","MTurk","MobileAnalytics","OpsWorks","Polly","RDS","Redshift","Rekognition","Route53","Route53Domains","ServiceCatalog","SES","SNS","SQS","SSM","StorageGateway","STS","XRay","WAF","WorkDocs","LexModelBuildingService","Pricing","CostExplorer","MediaStoreData","Comprehend","KinesisVideoArchivedMedia","KinesisVideoMedia","KinesisVideo","ResourceGroups","Connect","SecretsManager","ComprehendMedical","Personalize","PersonalizeEvents","PersonalizeRuntime","ForecastService","ForecastQueryService","KinesisVideoSignalingChannels","translate","structure","struct","location","locationName","isLocationName","translateStructure","translateMap","translateList","toWireFormat","translateScalar","stringify","getOpenIdToken","makeUnauthenticatedRequest","getId","getCredentialsForIdentity","generateURI","endpointPath","operationPath","uri","queryString","queryStringSet","paramValue","regex","RegExp","_","plus","val","httpMethod","populateMethod","httpPath","populateURI","memberValue","isJsonValue","populateHeaders","k","v","header","pattern","v4Credentials","signatureCache","signatureVersion","datetime","isPresigned","updateForPresigned","addHeaders","authorization","credString","credentialString","signedHeaders","isSignableHeader","lowerKey","sep","hexEncodedHash","canonicalString","canonicalHeaders","hexEncodedBodyHash","a","b","canonicalHeaderValues","unsignableHeaders","DynamoDBNumberValue","toNumber","Query","EXTRACT_ERROR","onAsync","buildCopySnapshotPresignedUrl","PresignedUrl","_subRequest","DestinationRegion","SourceRegion","newReq","presign","XML","Parser","Errors","RequestID","EventEmitter","XHRClient","emitter","href","protocol","hostname","port","xhr","XMLHttpRequest","headersEmitted","addEventListener","status","readyState","HEADERS_RECEIVED","parseHeaders","getAllResponseHeaders","statusText","DONE","finishRequest","upload","evt","open","xhrAsync","setRequestHeader","timeout","xhrWithCredentials","withCredentials","responseType","send","rawHeaders","substring","ab","view","responseText","streamsApiVersion","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","node","clockseq","seedBytes","msecs","nsecs","dt","tl","tmh","n","eventMessageChunker","parseEvent","createEventStream","eventMessages","events","headersToSign","h","setAcceptHeader","Accept","exportType","sslEnabled","HttpRequest","_userAgent","setUserAgent","getUserAgentHeaderName","appendToUserAgent","agentPartial","getUserAgent","query","updateEndpoint","endpointStr","newEndpoint","HttpResponse","streaming","createUnbufferedStream","singleton","Protocol","Json","Rest","RestJson","RestXml","Builder","Model","Api","Operation","Paginator","ResourceWaiter","SequentialExecutor","endpointCacheSize","escapeElement","subResources","responseHeaders","canonicalizedAmzHeaders","canonicalizedResource","amzHeaders","virtualHostedBucket","resources","param","subresource","decodeURIComponent","res","secret","TemporaryCredentials","Credentials","masterCredentials","loadMasterCredentials","expired","RoleArn","RoleSessionName","refresh","coalesceRefresh","load","createClients","assumeRole","getSessionToken","credentialsFrom","paginator","input_token","limit_key","more_results","output_token","result_key","memoize","factory","nameTr","iterable","ParamValidator","validation","context","errors","validateMember","msg","fail","validateStructure","paramName","validateType","required","memberContext","validateList","validateMap","validateScalar","validateRange","mapCount","validateString","validatePayload","validateNumber","validTypes","validateEnum","validatePattern","validateUri","test","descriptor","acceptedTypes","foundInvalidType","acceptedType","vowel","castedValue","parseFloat","Blob","types","resolveRegionalEndpointsFlag","s3util","regionUtil","operationsWith200StatusCodeError","regionRedirectErrorCodes","getSignatureVersion","defaultApiVersion","userDefinedVersion","_originalConfig","regionDefinedVersion","getSigningName","_super","_parsedArn","messages","s3BucketEndpoint","shouldDisableBodySigning","s3DisableBodySigning","validateScheme","validateBucketName","optInUsEast1RegionalEndpoint","VALIDATE_REGION","addContentType","computeContentMd5","computeSseCustomerKeyMd5","addExpect100Continue","extractErrorFrom200Response","prepareSignedUrl","disableBodySigning","isArnInParam","Bucket","validateS3AccessPointArn","validateArnResourceType","validateOutpostsAccessPointArn","validateOutpostsArn","validateArnRegion","validateArnAccount","validateArnService","populateUriFromAccessPointArn","validatePopulateUriFromArn","validateBucketEndpoint","correctBucketRegionFromCache","requestBucketRegion","reqRegionForNetworkingError","scheme","SSECustomerKey","CopySourceSSECustomerKey","bucket","Key","slashIndex","prefix","isValidAccelerateOperation","s3UsEast1RegionalEndpoint","env","sharedConfig","clientConfig","insertPoint","regionalEndpoint","pathStyleBucketName","useAccelerateEndpoint","useDualstack","removeVirtualHostedBucketFromPath","encodedS3Key","accessPointArn","isOutpostArn","outpostsSuffix","outpostId","dualStackSuffix","dnsSuffix","getEndpointSuffix","useArnRegion","s3UseArnRegion","accessPoint","encodedArn","len","Body","contentType","charsetName","computableChecksumOperations","putBucketCors","putBucketLifecycle","putBucketLifecycleConfiguration","putBucketTagging","deleteObjects","putBucketReplication","putObjectLegalHold","putObjectRetention","putObjectLockConfiguration","willComputeChecksums","computeChecksums","ContentMD5","bucketName","s3ForcePathStyle","dnsCompatibleBucketName","retryableError","_requestRegionForBucket","bucketRegionCache","updateReqBucketRegion","s3Config","newConfig","Host","_asm","currentState","LocationConstraint","createBucketConfiguration","CreateBucketConfiguration","clearBucketRegionCache","extractRequestIds","cachedRegion","codes","304","403","400","404","Region","reqOperation","reqParams","MaxKeys","regionReq","getRegionReq","listObjects","buckets","requestRegion","extendedRequestId","cfId","getSignedUrl","Expires","makeRequest","createPresignedPost","boundParams","finalizePost","fields","preparePostFields","Fields","Conditions","getCredentials","conditions","expiresInSeconds","signingDate","shortDate","scope","credential","field","condition","Policy","preparePostPolicy","valueOf","expiration","noPresignedContentLength","ContentLength","createBucket","copiedParams","globalEndpoint","uploader","ManagedUpload","getSignedUrlPromise","endpointDiscoveryEnabledEnvs","getCacheKey","serviceId","marshallCustomIdentifiers","marshallCustomIdentifiersHelper","endpointDiscoveryId","optionalDiscoverEndpoint","operationModel","endpointCache","endpointRequest","endpointOperation","Identifiers","addApiVersionHeader","VALIDATE_PARAMETERS","RETRY_CHECK","Endpoints","requestQueue","requiredDiscoverEndpoint","inputShape","cacheKeyStr","pendingRequests","requestContext","apiVersion","invalidateCachedEndpoints","isFalsy","discoverEndpoint","client","endpointDiscoveryEnabled","svcConfig","Boolean","hasCustomEndpoint","isEndpointDiscoveryRequired","endpointDiscoveryRequired","isEnabled","configFile","sharedFileConfig","AWS_PROFILE","endpoint_discovery_enabled","resolveEndpointDiscoveryConfig","hasRequiredEndpointDiscovery","addNamedListener","className","invalidateCachedEndpoint","sanitizeUrl","convert","Translator","attrValue","translateInput","mode","translateOutput","WebIdentityCredentials","_clientConfig","assumeRoleWithWebIdentity","stsConfig","byteToHex","bth","svc","rest","Presigner","bindServiceObject","_operations","modifyInputMembers","modifiedInput","convertPostToGet","getSynthesizeSpeechUrl","removeAllListeners","validateRegionalEndpointsFlagValue","configValue","errorOptions","originalConfig","resolved","profile","escapeAttribute","XmlNode","children","addAttribute","addChildNode","removeAttribute","hasChildren","xmlText","attributeNames","attributeName","attribute","c","jmespath","Response","redirectCount","numRetries","maxRedirects","nextPage","paginationConfig","hasNextPage","nextPageTokens","inputTokens","inputToken","cacheNextPageTokens","moreResults","exprs","outputToken","expr","getRandomValues","bind","msCrypto","rnds8","rnds","PromisesDependency","Config","extractCredentials","finish","credError","credentialProvider","creds","allowUnknownKeys","hasService","loadFromPath","clear","fileSystemCreds","FileSystemCredentials","chain","CredentialProviderChain","providers","unshift","logger","apiVersions","paramValidation","correctClockSkew","customUserAgent","dynamoDbCrc32","clientSideMonitoring","hostPrefixEnabled","stsRegionalEndpoints","setPromisesDependency","dep","Request","XmlText","parseMessage","parsedMessage","messageType","errorCode","errorMessage","parseError","eventType","eventModel","eventPayloadMemberName","payloadShape","eventHeaderNames","eventHeaderMemberNames","rootElement","toXML","populateBody","isEventStream","isStreaming","_events","listeners","eventName","listener","toHead","_isAsync","position","splice","eventArgs","doneCallback","count","callListeners","prevError","callNextListener","_haltHandlersOnError","addListeners","event","callbacks","addNamedAsyncListener","addNamedListeners","QueryParamSerializer","ucfirst","isQueryName","serializeStructure","serializeMember","memberRules","suffix","serializeList","keyName","valueName","serializeMap","serialize","LinkedListNode","nodeMap","sizeLimit","prependToList","headerNode","prev","next","tailNode","removeFromTail","prevNode","detachFromList","key_1","newNode","shapeMembers","AcceptorStateMachine","domain","hardErrorStates","success","complete","fsm","setupStates","transition","machine","Domain","domainEmitter","domainThrown","addState","isGlobalEndpoint","signingRegion","active","startTime","states","emitEvent","runTo","state","didCallback","_abortCallback","eachPage","wrappedCallback","eachItem","resultKey","continueIteration","isPageable","streams","PassThrough","sent","HTTP_DATA","HTTP_ERROR","expectedLen","shouldCheckContentLength","isNaN","receivedLen","checkContentLengthAndEmit","httpStream","lengthAccumulator","_write","unpipe","pipe","arg","eventParameters","toGet","toUnauthenticated","_unAuthenticated","VALIDATE_CREDENTIALS","SIGN","buildAsGet","haltHandlersOnError","promise","CognitoIdentityCredentials","localStorageKey","_identityId","loadCachedId","IdentityId","identityId","clearIdOnNotAuthorized","getCredentialsFromSTS","clearCachedId","poolId","IdentityPoolId","loginId","LoginId","storage","cognito","loadCredentials","AccessKeyId","SecretKey","SessionToken","Expiration","cacheId","WebIdentityToken","Token","webIdentityCredentials","webErr","sts","getStorage","Logins","actualProviders","filter","cognitoConfig","setStorage","localStorage","regionConfig","clientCount","loadServiceClass","ServiceClass","_clientId","configureEndpoint","endpointFromTemplate","setEndpoint","addDefaultMonitoringListeners","_clientSideMonitoring","publisher","eventHandler","serviceConfig","apiConfig","defineServiceApi","getLatestServiceClass","getLatestServiceVersion","selectedVersion","defaultRetryCount","customizeRequests","customRequestHandler","addAllRequestListeners","attachMonitoringEmitter","waitFor","wait","serviceInterface","CorePost","Logger","apiCallEvent","monitoringEvent","Type","Version","endpointPrefix","MaxRetriesExceeded","UserAgent","FinalHttpStatusCode","FinalAwsException","FinalAwsExceptionMessage","FinalSdkException","FinalSdkExceptionMessage","apiAttemptEvent","Fqdn","HttpStatusCode","AccessKey","XAmznRequestId","XAmzRequestId","XAmzId2","attemptFailEvent","AwsException","AwsExceptionMessage","SdkException","SdkExceptionMessage","attemptTimestamp","attemptStartRealTime","attemptLatency","callStartRealTime","callTimestamp","attemptCount","realClock","round","AttemptLatency","AttemptCount","latency","Latency","signingName","authtype","successfulResponse","retryDelays","timeoutError","networkingError","expiredCredentialsError","throttledError","clockSkewError","newServerTime","throwException","defineMethods","versions","_serviceMap","addVersions","identifier","Publisher","publisherConfig","configProvider","enabled","superclass","setApi","isApi","attachOn","baseClass","getPrototypeOf","labels","hostPattern","isEndpointOperation","hasEndpointDiscover","hostPrefix","hostPrefixNotation","hostLabel","expandHostPrefix","prependEndpointPrefix","label","verifySendMessageChecksum","verifySendMessageBatchChecksum","verifyReceiveMessageChecksum","MD5OfMessageBody","MessageBody","calculatedMd5","calculateChecksum","throwInvalidChecksumError","MessageId","entries","messageIds","Successful","entry","Id","Entries","isChecksumValid","Messages","MD5OfBody","ids","checksum","QueueUrl","matches","browser","splitMessage","PRELUDE_LENGTH","readUInt32BE","expectedPreludeChecksum","PRELUDE_MEMBER_LENGTH","expectedMessageChecksum","headersEnd","v1","Collection","enum","min","max","xmlName","queryName","requiresLength","isComposite","idempotencyToken","jsonvalue","sensitive","eventstream","eventpayload","eventheader","timestampFormat","isTimestampFormatSet","endpointdiscoveryid","documentation","documentationUrl","xmlAttribute","CompositeShape","StructureShape","requiredMap","firstInit","isShape","xmlOrder","memberNames","isEventPayload","isEventHeader","resultWrapper","xmlNamespace","ListShape","oldName","MapShape","StringShape","nullLessProtocols","BinaryShape","isSensitive","secureBuf","Base64Shape","BooleanShape","normalizedTypes","character","double","long","short","biginteger","bigdecimal","blob","refShape","shapes","filteredKeys","InlineShape","origType","Int64","bytes","negate","fromNumber","number","remaining","negative","isView","viewStrings","isEmptyData","convertToBuffer","byteOffset","BYTES_PER_ELEMENT","CHECK_ACCEPTORS","_waiter","acceptors","acceptorMatched","acceptor","matcher","matchers","expected","argument","setSuccess","setError","loadWaiterConfig","strictDeepEqual","pathAll","results","numResults","pathAny","add","retryDelay","$waiter","maxAttempts","ii","completeInfo","fillQueue","configure","partSize","minPartSize","queueSize","leavePartsOnError","tags","validateBody","adjustTotalBytes","maxTotalParts","failed","runFill","fillBuffer","fillStream","partBuffers","cleanup","isDoneChunking","numParts","totalPartNumbers","doneParts","finishMultiPart","singlePart","totalBytes","newPartSize","ceil","partPos","totalChunkedBytes","totalUploadedBytes","activeParts","multipartReq","partBufferLength","bodyLen","nextChunk","endPos","read","pbuf","isDoneSending","partNumber","Tagging","getTaggingHeader","putObject","_managedUpload","progress","finishSinglePart","ETag","UploadId","uploadPart","queueChunks","createMultipartUpload","kvPairStrings","Value","partParams","PartNumber","partInfo","_lastUploadedBytes","resume","abortMultipartUpload","completeParams","MultipartUpload","Parts","completeMultipartUpload","Location","putObjectTagging","TagSet","d","httpReq","info","loaded","total","EXTRACT_DATA","checkCrc32","crc32IsValid","ChainableTemporaryCredentials","tokenCodeFn","SerialNumber","getTokenCode","tokenCode","TokenCode","token","DISCOVER_ENDPOINT","addAsync","dnsHostRegex","idempotentMembers","getOperationAuthtype","signer","signedAt","httpResp","errCode","executeSend","numBytes","dateHeader","redirect","willRetry","errno","getSystemErrorName","isDNSError","delta","ansi","isTTY","censoredParams","filterSensitiveLog","subShapeName","subShape","inspect","buildMessage","log","write","defaultProviders","resolveCallbacks","resolveNext","provider","getErr","resolvePromise","SAMLCredentials","assumeRoleWithSAML","requiredAuthTokenOptions","username","Signer","convertUrlToAuthToken","getAuthToken","hasCallback","optionsValidation","validateAuthTokenOptions","serviceOptions","modifyRequestForAuthToken","Action","DBUser","XmlBuilder","element","applyNamespaces","entryKey","entryValue","serializeScalar","isRoot","xmlNamespaceUri","xmlNamespacePrefix","noEmpty","hashUtils","Uint32Array","Sha1","h0","h1","h2","h3","h4","block","totalLength","BLOCK_SIZE","finished","byte","processBlock","s","outView","DataView","setUint32","w","f","temp","Md5","bufferLength","bytesHashed","cmn","q","x","t","ff","gg","hh","sourceData","setUint8","hashBuffer","undecoratedLength","bitsHashed","floor","buff","getUint32","SecretAccessKey","optInRegionalEndpoint","KEY","MAX_HASHABLE_LENGTH","Sha256","Int32Array","bufferView","state0","state1","state2","state3","state4","state5","state6","state7","u","t1_1","t2_1","t1","t2","inputMembers","parsedArn","exec","delimiter","accessPointPrefix","loadUseArnRegionConfig","regionFromArn","clientRegion","envName","configName","ipAddress","dots","origRules","tmp","_XAMZRequestId","requestIdShape","base64Encode","queryEncode","replacements","signPolicy","policy","privateKey","createSign","signWithCannedPolicy","keyPairId","Statement","Resource","Condition","DateLessThan","signWithCustomPolicy","determineScheme","getRtmpUrl","rtmpUrl","parsed","handleError","handleSuccess","getSignedCookie","signatureHash","cookieHash","getResource","signedUrl","requestUri","endpointdiscovery","isIdempotent","topLevelShape","hasEventStream","performance","applyConfig","regionPrefix","generateRegionPrefix","derivedKeys","patterns","regionRegexes","regexes","regionPattern","DocumentClient","putItem","Item","makeServiceRequest","setupRequest","setupResponse","serviceClientOperationsMap","batchGet","batchWrite","delete","scan","transactGet","transactWrite","createSet","getTranslator","translator","rawParams","outputShape","isBinary","nameLength","readInt8","readInt16BE","readInt32BE","binaryLength","readUInt16BE","stringLength","uuidChars","Hmac","alg","crossRegionOperations","PreSignedUrl","doesParamValidation","buildCrossRegionPresignedUrl","destinationRegion","serviceAbbreviation","serviceFullName","endpointoperation","refreshCallbacks","expiryWindow","needsRefresh","currentTime","adjustedTime","sync","getPromise","refreshPromise","finalState","bindObject","inputError","accept","acceptState","failState","applyContentTypeHeader","hashCtor","outer","inner","bufferHash","bufferFromSecret","toHash"],"mappings":"w6xBAAA,IAAIA,EAAO,EAAQ,QAAWA,KAC1BC,EAAS,EAAQ,QAAWA,OAK5BC,EAAsB,CACxB,OAAU,SACV,OAAU,SACV,YAAe,SACf,OAAU,UAMRC,EAAcH,EAAKI,QAAQ,CAE7BC,YAAa,SAAaC,EAAMC,GAC9BA,EAAUA,GAAW,GACrBC,KAAKC,YAAc,MACnBD,KAAKE,WAAWJ,EAAMC,EAAQI,WAGhCD,WAAY,SAASJ,EAAMK,GACdH,KACNI,OAAS,GAAGC,OAAOP,GADbE,KAENM,aACDH,GAHOH,KAIJG,YAITG,WAAY,WAEV,GADAN,KAAKO,KAAOb,EAAoBD,EAAOO,KAAKI,OAAO,MAC9CJ,KAAKO,KACR,MAAMf,EAAKgB,MAAM,IAAIC,MAAS,CAC5BC,KAAM,iBACNC,QAAS,uDAKfR,SAAU,WAIR,IAHA,IACIS,EADOZ,KACOI,OAAOQ,OACrBR,EAFOJ,KAEOI,OACTS,EAAI,EAAGA,EAAID,EAAQC,IAC1B,GAAInB,EAAoBD,EAAOW,EAAOS,OAJ7Bb,KAI2CO,KAClD,MAAMf,EAAKgB,MAAM,IAAIC,MAAS,CAC5BC,KAAM,cACNC,QAPKX,KAOSO,KAAO,iBAAmBd,EAAOW,EAAOS,IAAM,YASpEC,OAAQ,WAEN,OADWd,KACCI,UAQhBW,EAAOC,QAAUrB,G,uBCtEjB,IAAIH,EAAO,EAAQ,QACfyB,EAAc,EAAQ,QACtBC,EAAa,EAAQ,QACrBC,EAAqB,EAAQ,QAAaA,mBAkE9CJ,EAAOC,QAAU,CACfI,aAjEF,SAAsBC,GACpB,IAAIC,EAAcD,EAAIC,YAClBC,EAAMF,EAAIG,QAAQD,IAClBE,EAASF,EAAIG,aAAe,IAAMH,EAAII,WAAWN,EAAIO,WAAWC,KAChEC,EAAUP,EAAIQ,aAAe,MAC7BC,EAAQT,EAAII,WAAWN,EAAIO,WAAWI,MACtCC,EAAU,IAAIhB,EAEF,IAAZa,IAAeA,EAAU,OAC7BR,EAAYY,KAAOD,EAAQE,MAAMd,EAAIe,QAAU,GAAIJ,GACnDV,EAAYe,QAAQ,gBAAkB,0BAA4BP,EAClER,EAAYe,QAAQ,gBAAkBZ,EAEtCN,EAAmBE,IAqDnBiB,aAlDF,SAAsBC,GACpB,IAAI/B,EAAQ,GACRgC,EAAeD,EAAKC,aAOxB,GALAhC,EAAME,KAAO8B,EAAaH,QAAQ,qBAAuB,eAC/B,iBAAf7B,EAAME,OACfF,EAAME,KAAOF,EAAME,KAAK+B,MAAM,KAAK,IAGjCD,EAAaN,KAAKtB,OAAS,EAC7B,IACE,IAAI8B,EAAIC,KAAKC,MAAMJ,EAAaN,KAAKW,YACjCnC,EAAOgC,EAAEI,QAAUJ,EAAEhC,MAAQgC,EAAEK,KAC/BrC,IACFF,EAAME,KAAOA,EAAK+B,MAAM,KAAKO,OAEZ,0BAAfxC,EAAME,KACRF,EAAMG,QAAU,sCAEhBH,EAAMG,QAAW+B,EAAE/B,SAAW+B,EAAEO,SAAW,KAE7C,MAAOP,GACPlC,EAAM0C,WAAaV,EAAaU,WAChC1C,EAAMG,QAAU6B,EAAaW,mBAG/B3C,EAAM0C,WAAaV,EAAaU,WAChC1C,EAAMG,QAAU6B,EAAaU,WAAWL,WAG1CN,EAAK/B,MAAQhB,EAAKgB,MAAM,IAAIC,MAASD,IAqBrC4C,YAlBF,SAAqBb,GACnB,IAAIL,EAAOK,EAAKC,aAAaN,KAAKW,YAAc,KAChD,IAAyD,IAArDN,EAAKc,QAAQ7B,QAAQ8B,OAAOC,qBAC9BhB,EAAKiB,KAAOb,KAAKC,MAAMV,OAClB,CACL,IACIuB,EADYlB,EAAKc,QAAQ7B,QAAQD,IAAII,WAAWY,EAAKc,QAAQzB,WAC3C8B,QAAU,GAC5BC,EAAS,IAAIzC,EACjBqB,EAAKiB,KAAOG,EAAOf,MAAMV,EAAMuB,O,wBC9DnC,YACA,IAAIG,EAgBApE,EAAO,CACTqE,YAAa,SACbC,OAAQ,WACN,GAAItE,EAAKuE,aAAoC,oBAAdC,UAC7B,OAAOA,UAAUC,UAEjB,IAAIH,EAASI,EAAQC,SAAW,IAAMD,EAAQpC,QAI9C,OAHI,gGAAYsC,oBACdN,GAAU,aAAe,gGAAYM,mBAEhCN,GAIXG,UAAW,WACT,IAAIpC,EAAOrC,EAAKqE,YACZQ,EAAQ,WAAaxC,EAAO,IAAM,EAAQ,QAAUyC,QAExD,MADa,WAATzC,IAAmBwC,GAAS,IAAM7E,EAAKsE,UACpCO,GAGTE,UAAW,SAAmBC,GAC5B,IAAId,EAASe,mBAAmBD,GAQhC,OAJAd,GAHAA,EAASA,EAAOgB,QAAQ,uBAAwBC,SAGhCD,QAAQ,QAAQ,SAASE,GACvC,MAAO,IAAMA,EAAGC,WAAW,GAAGhC,SAAS,IAAIiC,kBAM/CC,cAAe,SAAuBP,GACpC,IAAIQ,EAAQ,GAIZ,OAHAxF,EAAKyF,UAAUT,EAAO/B,MAAM,MAAM,SAAUyC,GAC1CF,EAAMG,KAAK3F,EAAK+E,UAAUW,OAErBF,EAAMI,KAAK,MAGpBC,SAAU,SAAkBC,GAC1B,OAAO9F,EAAK8F,IAAI1C,MAAM0C,IAGxBC,UAAW,SAAmBD,GAC5B,OAAO9F,EAAK8F,IAAIE,OAAOF,IAGzBG,iBAAkB,SAA0BC,GAC1C,OAAOlG,EAAKmG,YAAY/C,MAAM8C,IAGhCE,oBAAqB,SAA6BxD,GAChD,IAAIyD,EAAQ,GACRlB,EAASnF,EAAK+E,UACduB,EAAaC,OAAOC,KAAK5D,GAAQ6D,OAgBrC,OAdAzG,EAAKyF,UAAUa,GAAY,SAASjE,GAClC,IAAIqE,EAAQ9D,EAAOP,GACfsE,EAAQxB,EAAO9C,GACfuE,EAASD,EAAQ,IACrB,GAAIE,MAAMC,QAAQJ,GAAQ,CACxB,IAAIK,EAAO,GACX/G,EAAKyF,UAAUiB,GAAO,SAASM,GAAQD,EAAKpB,KAAKR,EAAO6B,OACxDJ,EAASD,EAAQ,IAAMI,EAAKN,OAAOb,KAAK,IAAMe,EAAQ,UAC7CD,UACTE,EAASD,EAAQ,IAAMxB,EAAOuB,IAEhCL,EAAMV,KAAKiB,MAGNP,EAAMT,KAAK,MAGpBqB,aAAc,SAAsBC,GAClC,OAAIlH,EAAKuE,YAAoB,KACtB,EAAQ,GAAM0C,aAAaC,EAAM,UAG1CC,OAAQ,CACNC,OAAQ,SAAkBpC,GACxB,GAAsB,iBAAXA,EACT,MAAMhF,EAAKgB,MAAM,IAAIC,MAAM,+BAAiC+D,IAE9D,OAAIA,QACKA,EAEChF,EAAKqH,OAAOC,SAAStC,GACpB3B,SAAS,WAGtBkE,OAAQ,SAAkBvC,GACxB,GAAsB,iBAAXA,EACT,MAAMhF,EAAKgB,MAAM,IAAIC,MAAM,+BAAiC+D,IAE9D,OAAIA,QACKA,EAEFhF,EAAKqH,OAAOC,SAAStC,EAAQ,YAKxCqC,OAAQ,CAINC,SAAU,SAAStD,EAAMwD,GACvB,MAAoC,mBAArBxH,EAAKyH,OAAOC,MAAuB1H,EAAKyH,OAAOC,OAASC,WAAWD,KAChF1H,EAAKyH,OAAOC,KAAK1D,EAAMwD,GAAY,IAAIxH,EAAKyH,OAAOzD,EAAMwD,IAG7DI,MAAO,SAASC,EAAMC,EAAMN,GAC1B,GAAoB,iBAATK,EACT,MAAM,IAAI5G,MAAM,0CAElB,GAAiC,mBAAtBjB,EAAKyH,OAAOG,MACrB,OAAO5H,EAAKyH,OAAOG,MAAMC,EAAMC,EAAMN,GAErC,IAAIO,EAAM,IAAI/H,EAAKyH,OAAOI,GAI1B,YAHaG,IAATF,GAA0C,mBAAbC,EAAID,MACnCC,EAAID,KAAKA,OAAME,OAAWA,EAAWR,GAEhCO,GAIXE,SAAU,SAAkBZ,GACrBrH,EAAKyH,OAAOS,SAASb,KAASA,EAAUrH,EAAKqH,OAAOC,SAASD,IAElE,IAAIc,EAAW,IAAKnI,EAAKoI,OAAe,SACpCC,EAAM,EAUV,OATAF,EAASG,MAAQ,SAAST,GACxB,GAAIQ,GAAOhB,EAAOjG,OAAQ,OAAO+G,EAASxC,KAAK,MAE/C,IAAI4C,EAAMF,EAAMR,EACZU,EAAMlB,EAAOjG,SAAQmH,EAAMlB,EAAOjG,QACtC+G,EAASxC,KAAK0B,EAAOmB,MAAMH,EAAKE,IAChCF,EAAME,GAGDJ,GAMTtH,OAAQ,SAAS4H,GACf,IAEIpB,EAAehG,EAFfD,EAAS,EACTsH,EAAS,EAGb,IAAKrH,EAAI,EAAGA,EAAIoH,EAAQrH,OAAQC,IAC9BD,GAAUqH,EAAQpH,GAAGD,OAKvB,IAFAiG,EAASrH,EAAKqH,OAAOO,MAAMxG,GAEtBC,EAAI,EAAGA,EAAIoH,EAAQrH,OAAQC,IAC9BoH,EAAQpH,GAAGsH,KAAKtB,EAAQqB,GACxBA,GAAUD,EAAQpH,GAAGD,OAGvB,OAAOiG,IAIXrC,OAAQ,CACN4D,WAAY,SAAoB5D,GAC9B,GAAIA,QAAyC,OAAO,EAGpD,GAFsB,iBAAXA,IAAqBA,EAAShF,EAAKqH,OAAOC,SAAStC,IAE7B,iBAAtBA,EAAO4D,WAChB,OAAO5D,EAAO4D,WACT,GAA6B,iBAAlB5D,EAAO5D,OACvB,OAAO4D,EAAO5D,OACT,GAA2B,iBAAhB4D,EAAO6C,KACvB,OAAO7C,EAAO6C,KACT,GAA2B,iBAAhB7C,EAAOkC,KACvB,OAAO,EAAQ,GAAM2B,UAAU7D,EAAOkC,MAAMW,KAE5C,MAAM7H,EAAKgB,MAAM,IAAIC,MAAM,8BAAgC+D,GACzD,CAAE8D,OAAQ9D,KAIhB+D,WAAY,SAAoB/D,GAC9B,OAAOA,EAAO,GAAGM,cAAgBN,EAAOgE,OAAO,IAGjDC,WAAY,SAAoBjE,GAC9B,OAAOA,EAAO,GAAGkE,cAAgBlE,EAAOgE,OAAO,KAInDG,IAAK,CACH/F,MAAO,SAAgB+F,GACrB,IAAIC,EAAgBC,EAAM,GAe1B,OAdArJ,EAAKyF,UAAU0D,EAAIlG,MAAM,UAAU,SAASqG,GAE1C,IAAIC,GADJD,EAAOA,EAAKrG,MAAM,cAAc,IACbuG,MAAM,0BACzB,GAAID,EACFH,EAAiBG,EAAQ,QACpB,GAAIH,EAAgB,CACzB,IAAIpC,EAAOsC,EAAKE,MAAM,6BAClBxC,IACFqC,EAAID,GAAkBC,EAAID,IAAmB,GAC7CC,EAAID,GAAgBpC,EAAK,IAAMA,EAAK,QAKnCqC,IAIXI,GAAI,CACFC,KAAM,aACNC,SAAU,SAAUC,GAAO,GAAIA,EAAK,MAAMA,GAQ1CC,UAAW,SAAmBJ,EAAIK,GAChC,OAAIA,GAAgBA,GAAgBL,EAAGrI,OAC9BqI,EAGF,WACL,IAAIM,EAAOlD,MAAMmD,UAAUxB,MAAMyB,KAAKC,UAAW,GAC7CP,EAAWI,EAAKvG,MAChBoD,EAAS6C,EAAGU,MAAM,KAAMJ,GAC5BJ,EAAS/C,MAQfwD,KAAM,CAQJC,QAAS,WAEP,OADKjG,IAAKA,EAAM,EAAQ,SACpBA,EAAIN,OAAOwG,kBACN,IAAIC,MAAK,IAAIA,MAAOC,UAAYpG,EAAIN,OAAOwG,mBAE3C,IAAIC,MAOfE,QAAS,SAAiBL,GAExB,YADapC,IAAToC,IAAsBA,EAAOpK,EAAKoK,KAAKC,WACpCD,EAAKM,cAAcxF,QAAQ,YAAa,MAMjDyF,OAAQ,SAAgBP,GAEtB,YADapC,IAAToC,IAAsBA,EAAOpK,EAAKoK,KAAKC,WACpCD,EAAKQ,eAMdC,cAAe,SAAuBT,GAEpC,YADapC,IAAToC,IAAsBA,EAAOpK,EAAKoK,KAAKC,WACpCD,EAAKI,UAAY,KAO1B9C,KAAM,SAAgB0C,GACpB,MAAoB,iBAATA,EACF,IAAIG,KAAY,IAAPH,GAET,IAAIG,KAAKH,IAcpBpE,OAAQ,SAAgBoE,EAAMU,GAE5B,OADKA,IAAWA,EAAY,WACrB9K,EAAKoK,KAAKU,GAAW9K,EAAKoK,KAAK1C,KAAK0C,KAG7CW,eAAgB,SAAwBrE,GACtC,GAAqB,iBAAVA,EACT,OAAO,IAAI6D,KAAa,IAAR7D,GACX,GAAIA,EAAM8C,MAAM,SACrB,OAAO,IAAIe,KAAa,IAAR7D,GACX,GAAIA,EAAM8C,MAAM,UACrB,OAAO,IAAIe,KAAK7D,GACX,GAAIA,EAAM8C,MAAM,WACrB,OAAO,IAAIe,KAAK7D,GAEhB,MAAM1G,EAAKgB,MACT,IAAIC,MAAM,+BAAiCyF,GAC3C,CAACxF,KAAM,2BAMf8J,OAAQ,CACNC,WAAY,CACX,EAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,SAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,SAAY,WAAY,WAAY,WAAY,SAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,SAAY,WAAY,WAAY,WAAY,SAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,SAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAEDC,MAAO,SAAelH,GACpB,IAAImH,EAAMnL,EAAKgL,OAAOC,WAClBG,GAAM,EAEU,iBAATpH,IACTA,EAAOhE,EAAKqH,OAAOC,SAAStD,IAG9B,IAAK,IAAI3C,EAAI,EAAGA,EAAI2C,EAAK5C,OAAQC,IAAK,CAEpC+J,EAAOA,IAAQ,EAAKD,EAAmB,KAAdC,EADdpH,EAAKqH,UAAUhK,KAG5B,QAAe,EAAP+J,KAAc,GAGxBE,KAAM,SAAcC,EAAKvG,EAAQwG,EAAQ/B,GAKvC,OAJK+B,IAAQA,EAAS,UACP,WAAXA,IAAuBA,OAASxD,GAC/ByB,IAAIA,EAAK,UACQ,iBAAXzE,IAAqBA,EAAShF,EAAKqH,OAAOC,SAAStC,IACvDhF,EAAKgL,OAAOS,IAAIC,WAAWjC,EAAI8B,GAAKI,OAAO3G,GAAQwG,OAAOA,IAGnEI,IAAK,SAAa5H,EAAMwH,EAAQ7B,GAC9B,OAAO3J,EAAKgL,OAAOa,KAAK,MAAO7H,EAAMwH,EAAQ7B,IAG/CmC,OAAQ,SAAgB9H,EAAMwH,EAAQ7B,GACpC,OAAO3J,EAAKgL,OAAOa,KAAK,SAAU7H,EAAMwH,EAAQ7B,IAGlDkC,KAAM,SAASE,EAAW/H,EAAMwH,EAAQ7B,GACtC,IAAIkC,EAAO7L,EAAKgL,OAAOgB,WAAWD,GAC7BP,IAAUA,EAAS,UACT,WAAXA,IAAuBA,OAASxD,GAChB,iBAAThE,IAAmBA,EAAOhE,EAAKqH,OAAOC,SAAStD,IAC1D,IAAIiI,EAAUjM,EAAKkM,aAAalI,GAC5BkE,EAAWlI,EAAKyH,OAAOS,SAASlE,GAIpC,GAFIhE,EAAKuE,aAAsC,oBAAhB4H,aAA+BnI,GAAQA,EAAKqD,kBAAkB8E,cAAajE,GAAW,GAEjHyB,GAA4B,iBAAT3F,GACA,mBAAZA,EAAKoI,KAAsBlE,EACpClE,EAAKoI,GAAG,QAAQ,SAASC,GAASR,EAAKF,OAAOU,MAC9CrI,EAAKoI,GAAG,SAAS,SAASxC,GAAOD,EAASC,MAC1C5F,EAAKoI,GAAG,OAAO,WAAazC,EAAS,KAAMkC,EAAKL,OAAOA,WAClD,KAAI7B,IAAYsC,GAAY/D,GACF,oBAAfoE,WAyBX,CACDtM,EAAKuE,aAA+B,iBAATP,IAAsBkE,IACnDlE,EAAO,IAAIhE,EAAKyH,OAAO,IAAIE,WAAW3D,KAExC,IAAIuI,EAAMV,EAAKF,OAAO3H,GAAMwH,OAAOA,GAEnC,OADI7B,GAAUA,EAAS,KAAM4C,GACtBA,EA7BP,IAAIC,EAAQ,EACRC,EAAS,IAAIH,WACjBG,EAAOC,QAAU,WACf/C,EAAS,IAAI1I,MAAM,0BAErBwL,EAAOE,OAAS,WACd,IAAI5E,EAAM,IAAI/H,EAAKyH,OAAO,IAAIE,WAAW8E,EAAO7F,SAChDiF,EAAKF,OAAO5D,GACZyE,GAASzE,EAAI3G,OACbqL,EAAOG,oBAETH,EAAOG,iBAAmB,WACxB,GAAIJ,GAASxI,EAAK6D,KAChB8B,EAAS,KAAMkC,EAAKL,OAAOA,QAD7B,CAKA,IAAIqB,EAAOL,EAjBS,OAkBhBK,EAAO7I,EAAK6D,OAAMgF,EAAO7I,EAAK6D,MAClC4E,EAAOK,kBAAkBb,EAAQhC,KAAKjG,EAAMwI,EAAOK,MAGrDJ,EAAOG,qBAWXG,MAAO,SAAe/I,GAEpB,IADA,IAAIuI,EAAM,GACDlL,EAAI,EAAGA,EAAI2C,EAAK5C,OAAQC,IAC/BkL,EAAI5G,MAAM,IAAM3B,EAAKqB,WAAWhE,GAAGgC,SAAS,KAAK2F,QAAQ,EAAG,IAE9D,OAAOuD,EAAI3G,KAAK,KAGlBoG,WAAY,SAAoBD,GAC9B,OAAO/L,EAAKgL,OAAOS,IAAIO,WAAWD,KAQtCiB,MAAO,GAEPC,KAAM,SAAcnE,EAAQoE,GAC1B,IAAK,IAAI3B,KAAOzC,EAAQ,CACtB,GAAIvC,OAAOyD,UAAUmD,eAAelD,KAAKnB,EAAQyC,GAE/C,GADU2B,EAAajD,KAAKzJ,KAAM+K,EAAKzC,EAAOyC,MAClCvL,EAAKgN,MAAO,QAK9BvH,UAAW,SAAmB2H,EAAOF,GACnC,IAAK,IAAIG,KAAOD,EAAO,CACrB,GAAI7G,OAAOyD,UAAUmD,eAAelD,KAAKmD,EAAOC,GAE9C,GADUH,EAAajD,KAAKzJ,KAAM4M,EAAMC,GAAMC,SAASD,EAAK,OAChDrN,EAAKgN,MAAO,QAK9BrB,OAAQ,SAAgB4B,EAAMC,GAI5B,OAHAxN,EAAKiN,KAAKO,GAAM,SAAkBjC,EAAKvE,GACrCuG,EAAKhC,GAAOvE,KAEPuG,GAGTE,MAAO,SAAeF,EAAMC,GAC1B,OAAOxN,EAAK2L,OAAO3L,EAAK2I,KAAK4E,GAAOC,IAGtC7E,KAAM,SAAcG,GAClB,GAAIA,QAAyC,OAAOA,EACpD,IAAI4E,EAAO,GAEX,IAAK,IAAInC,KAAOzC,EACd4E,EAAKnC,GAAOzC,EAAOyC,GAErB,OAAOmC,GAGTC,QAAS,SAAiBC,GACxB,IAAK,IAAIC,KAAQD,EACf,GAAIrH,OAAOyD,UAAUmD,eAAelD,KAAK2D,EAAKC,GAC5C,OAAO,EAGX,OAAO,GAGT3B,aAAc,SAAsB0B,GAClC,IAAInE,EAAKmE,EAAIpF,OAASoF,EAAIE,aAAeF,EAAIG,SAC7C,MAAqB,mBAAPtE,EAAoBA,EAAK,MAGzCuE,OAAQ,SAAgBJ,EAAK7M,GAG3B,MADoB,mBAATA,IAAqBA,EAAOf,EAAKiO,SAASlN,IAC9CwF,OAAOyD,UAAU3G,SAAS4G,KAAK2D,KAAS,WAAa7M,EAAO,KAGrEkN,SAAU,SAAkBlN,GAC1B,GAAIwF,OAAOyD,UAAUmD,eAAelD,KAAKlJ,EAAM,QAAS,OAAOA,EAAKsB,KACpE,IAAI6L,EAAMnN,EAAKsC,WACXmG,EAAQ0E,EAAI1E,MAAM,uBACtB,OAAOA,EAAQA,EAAM,GAAK0E,GAG5BlN,MAAO,SAAe4I,EAAKrJ,GACzB,IAAI4N,EAAgB,KA+BpB,MA9B2B,iBAAhBvE,EAAIzI,SAAwC,KAAhByI,EAAIzI,UAClB,iBAAZZ,GAAyBA,GAAWA,EAAQY,YACrDgN,EAAgBnO,EAAK2I,KAAKiB,IACZzI,QAAUyI,EAAIzI,SAGhCyI,EAAIzI,QAAUyI,EAAIzI,SAAW,KAEN,iBAAZZ,EACTqJ,EAAIzI,QAAUZ,EACc,iBAAZA,GAAoC,OAAZA,IACxCP,EAAK2L,OAAO/B,EAAKrJ,GACbA,EAAQY,UACVyI,EAAIzI,QAAUZ,EAAQY,UACpBZ,EAAQW,MAAQX,EAAQ8B,QAC1BuH,EAAI1I,KAAOX,EAAQW,MAAQX,EAAQ8B,MACjC9B,EAAQ6N,QACVxE,EAAIwE,MAAQ7N,EAAQ6N,QAGa,mBAA1B7H,OAAO8H,iBAChB9H,OAAO8H,eAAezE,EAAK,OAAQ,CAAC0E,UAAU,EAAMC,YAAY,IAChEhI,OAAO8H,eAAezE,EAAK,UAAW,CAAC2E,YAAY,KAGrD3E,EAAIvH,KAAOmM,OAAOjO,GAAWA,EAAQ8B,MAAQuH,EAAIvH,MAAQuH,EAAI1I,MAAQ,SACrE0I,EAAI6E,KAAO,IAAIlE,KAEX4D,IAAevE,EAAIuE,cAAgBA,GAEhCvE,GAMTxJ,QAAS,SAAiBsO,EAAOC,GAC/B,IAAIC,EAAY,KAChB,QAAiB5G,IAAb2G,EACFA,EAAWD,EACXA,EAAQnI,OACRqI,EAAY,OACP,CACL,IAAIC,EAAO,aACXA,EAAK7E,UAAY0E,EAAM1E,UACvB4E,EAAY,IAAIC,EAelB,OAXIF,EAAStO,cAAgBkG,SAC3BoI,EAAStO,YAAc,WACrB,GAAIqO,IAAUnI,OACZ,OAAOmI,EAAMvE,MAAM3J,KAAM0J,aAK/ByE,EAAStO,YAAY2J,UAAY4E,EACjC5O,EAAK2L,OAAOgD,EAAStO,YAAY2J,UAAW2E,GAC5CA,EAAStO,YAAYyO,UAAYJ,EAC1BC,EAAStO,aAMlB0O,MAAO,WAEL,IADA,IAAIL,EAAQxE,UAAU,GACb7I,EAAI,EAAGA,EAAI6I,UAAU9I,OAAQC,IAEpC,IAAK,IAAIwM,KAAQ3D,UAAU7I,GAAG2I,UAAW,CACvC,IAAIP,EAAKS,UAAU7I,GAAG2I,UAAU6D,GACnB,gBAATA,IACFa,EAAM1E,UAAU6D,GAAQpE,GAI9B,OAAOiF,GAMTM,eAAgB,SAAwBpB,EAAKqB,GACN,mBAA1B1I,OAAO8H,gBAElBrO,EAAKyF,UAAUwJ,GAAO,SAAU1D,GAC9BhF,OAAO8H,eAAeT,EAAKrC,EAAK,CAC9BgD,YAAY,EAAOD,UAAU,EAAMY,cAAc,QAOvDC,SAAU,SAAkBvB,EAAKvL,EAAMqE,EAAO6H,EAAYa,GACxD,IAAIC,EAAO,CACTH,cAAc,EACdX,gBAA2BvG,IAAfuG,GAA2BA,GAEpB,mBAAV7H,GAAyB0I,GAIlCC,EAAK3I,MAAQA,EAAO2I,EAAKf,UAAW,GAHpCe,EAAKC,IAAM5I,EAMbH,OAAO8H,eAAeT,EAAKvL,EAAMgN,IAMnCE,iBAAkB,SAA0B3B,EAAKvL,EAAMiN,EAAKf,GAC1D,IAAIiB,EAAc,KAGlBxP,EAAKmP,SAASvB,EAAKvL,GAAM,WAIvB,OAHoB,OAAhBmN,IACFA,EAAcF,KAETE,IACNjB,IAULkB,mBAAoB,SAA4B1M,GAC9C,IAAIlB,EAAMkB,EAAKc,QACX6L,EAAgB7N,EAAIO,UACpBA,EAAYP,EAAIG,QAAQD,IAAII,WAAWuN,GACvCxL,EAAS9B,EAAU8B,OACvB,GAAIA,EAAOyL,UAAYvN,EAAUwN,eAAgB,CAC/C,IAAIC,EAAgB3L,EAAO4L,QAAQ5L,EAAOyL,SACtCI,EAAkBhN,EAAKiB,KAAKE,EAAOyL,SACZ,cAAvBE,EAAc9O,MAChBf,EAAKiN,KAAK8C,GAAiB,SAASxE,EAAK7E,GACvC1G,EAAKmP,SAASpM,EAAKiB,KAAMuH,EAAK7E,GAAO,QAW7CsJ,cAAe,SAAuBtN,EAAMuN,GAC1C,GAAIjQ,EAAKkQ,SAAU,CACjB,IAAIC,EAASnQ,EAAKoI,OAAO+H,OACrBC,EAAK,EAAQ,GACjB,GAAsB,mBAAXD,GAAyBzN,aAAgByN,EAAQ,CAC1D,GAAyB,iBAAdzN,EAAKwE,KAUd,OAAO+I,EAAK,IAAIhP,MAAM,yDATtB,IAAIoP,EAAW,GACW,iBAAf3N,EAAK4N,QACdD,EAASC,MAAQ5N,EAAK4N,OAEA,iBAAb5N,EAAK6F,MACd8H,EAAS9H,IAAM7F,EAAK6F,KAEtB7F,EAAO0N,EAAGG,iBAAiB7N,EAAKwE,KAAMmJ,IAQ5CrQ,EAAKgL,OAAOc,OAAOpJ,EAAM,OAAO,SAASkH,EAAK4G,GACxC5G,EAAKqG,EAAKrG,GACTqG,EAAK,KAAMO,OAOpBC,cAAe,SAAuBC,GACpC,GAAIA,EAGF,OAFA1Q,EAAKmP,SAAS/K,EAAIN,OAAQ,gBACxB6M,KAAKC,KAAI,IAAIrG,MAAOC,UAAYkG,IAAe,KAAQ,GAClDtM,EAAIN,OAAO2M,eAItBI,iBAAkB,SAA0BH,GACtCA,IACFtM,EAAIN,OAAOwG,kBAAoBoG,GAAa,IAAInG,MAAOC,YAM3DsG,iBAAkB,SAA0B/N,GAC1C,IAAIgO,EAAYhO,EAAKC,aAAaH,QAAQ,qBACzBE,EAAKC,aAAaH,QAAQ,qBAEtCkO,GAAahO,EAAKiB,MAAQjB,EAAKiB,KAAKgN,mBACvCD,EAAYhO,EAAKiB,KAAKgN,iBAAiBC,WAGrCF,IACFhO,EAAKgO,UAAYA,GAGfhO,EAAK/B,QACP+B,EAAK/B,MAAM+P,UAAYA,IAO3BG,YAAa,SAAqBC,EAAcC,GAC9C,IAAIC,GAAiB,OACKrJ,IAAtBoJ,GAAmChN,GAAOA,EAAIN,SAChDsN,EAAoBhN,EAAIN,OAAOwN,8BAEPtJ,IAAtBoJ,GAAsD,oBAAZG,UAC5CH,EAAoBG,SAEW,mBAAtBH,IAAkCC,GAAiB,GACzDxK,MAAMC,QAAQqK,KAAeA,EAAe,CAACA,IAElD,IAAK,IAAIK,EAAM,EAAGA,EAAML,EAAa/P,OAAQoQ,IAAO,CAClD,IAAInR,EAAc8Q,EAAaK,GAC3BH,EACEhR,EAAYoR,yBACdpR,EAAYoR,0BAELpR,EAAYqR,oBACrBrR,EAAYqR,mBAAmBN,KAarCO,gBAAiB,SAAyBC,EAAYR,GACpD,OAAO,WACL,IAAIS,EAAOrR,KACPuJ,EAAOlD,MAAMmD,UAAUxB,MAAMyB,KAAKC,WACtC,OAAO,IAAIkH,GAAkB,SAASU,EAASC,GAC7ChI,EAAKpE,MAAK,SAASiE,EAAK5F,GAClB4F,EACFmI,EAAOnI,GAEPkI,EAAQ9N,MAGZ6N,EAAKD,GAAYzH,MAAM0H,EAAM9H,QAQnCiI,qBAAsB,SAA8BhQ,GAClD,IAAKA,EAAS,OAAO,EACrB,IAAIiQ,EAAW,EAAQ,QAEvB,MADuB,iBAAZjQ,IAAsBA,EAAUA,EAAQkQ,qBAC5B,iBAAZlQ,IAAyBiQ,EAAS9E,eAAenL,OACnDiQ,EAASjQ,GAASmQ,oBAM7BC,oBAAqB,SAA6BC,EAAYC,EAAmB1I,GAC1E0I,IAAmBA,EAAoB,IAC5C,IAAIC,EAAgBD,EAAkBC,eAAiB,KACvD,GAA6B,mBAAlBA,EACT,OAAOA,EAAcF,EAAYzI,GAEnC,IAAI4I,EAAyC,iBAA3BF,EAAkBE,KAAoBF,EAAkBE,KAAO,IAEjF,OADY7B,KAAK8B,UAAY9B,KAAK+B,IAAI,EAAGL,GAAcG,IAOzDG,yBAA0B,SAAkC7Q,EAAavB,EAASqS,GAC3ErS,IAASA,EAAU,IACxB,IAAIsS,EAAOzO,EAAI0O,WAAWC,cACtBC,EAAczS,EAAQyS,aAAe,GACrCX,EAAa,EAEbY,EAAc,SAASrJ,GACzB,IAAIsJ,EAAa3S,EAAQ2S,YAAc,EAIvC,GAHItJ,GAAoB,iBAAbA,EAAI1I,OAAyB0I,EAAIuJ,WAAY,GAGpDvJ,GAAOA,EAAIuJ,WAAad,EAAaa,EAAY,CACnD,IAAIE,EAAQpT,EAAKoS,oBAAoBC,EAAY9R,EAAQ+R,kBAAmB1I,GAC5E,GAAIwJ,GAAS,EAGX,OAFAf,SACAgB,WAAWC,EAAaF,GAASxJ,EAAI2J,YAAc,IAIvDX,EAAGhJ,IAGD0J,EAAc,WAChB,IAAItP,EAAO,GACX6O,EAAKW,cAAc1R,EAAakR,GAAa,SAAShQ,GACpDA,EAAaoJ,GAAG,QAAQ,SAASC,GAASrI,GAAQqI,EAAMhJ,cACxDL,EAAaoJ,GAAG,OAAO,WACrB,IAAI1I,EAAaV,EAAaU,WAC9B,GAAIA,EAAa,IACfkP,EAAG,KAAM5O,OACJ,CACL,IAAIuP,EAAiE,IAApDjG,SAAStK,EAAaH,QAAQ,eAAgB,KAAc,EACzE+G,EAAM5J,EAAKgB,MAAM,IAAIC,MACvB,CACEyC,WAAYA,EACZyP,UAAWzP,GAAc,KAAsB,MAAfA,IAGhC6P,GAAc3J,EAAIuJ,YAAWvJ,EAAI2J,WAAaA,GAClDN,EAAYrJ,SAGfqJ,IAGL7O,EAAIpE,KAAKyT,MAAMH,IAMjBI,KAAM,CACJC,GAAI,WACF,OAAO,EAAQ,QAAQA,OAO3BC,uBAAwB,SAAgC7Q,GACtD,IAAIlB,EAAMkB,EAAKc,QACXzB,EAAYP,EAAIO,UAChByR,EAAQhS,EAAIG,QAAQD,IAAII,WAAWC,GAAW8B,QAAU,GACxD2P,EAAMlE,SAAW5M,EAAKiB,KAAK6P,EAAMlE,WACnC5M,EAAKiB,KAAK6P,EAAMlE,SAAW5M,EAAKiB,KAAK6P,EAAMlE,SAAStM,aAOxDoQ,MAAO,SAAe9J,GACG,iBAAZjF,GAAoD,mBAArBA,EAAQoP,SAChDpP,EAAQoP,SAASnK,GACgB,mBAAjBoK,aAChBA,aAAapK,GAEb0J,WAAW1J,EAAU,IAOzBqK,uBAAwB,SAAgCnS,GACtD,IAAIM,EAAaN,EAAIG,QAAQD,IAAII,WACjC,GAAKA,EAAL,CACA,IAAIC,GAAaD,GAAc,IAAIN,EAAIO,WACvC,GAAKA,GAAcA,EAAUI,OAAUJ,EAAUI,MAAMmN,QACvD,OAAOvN,EAAUI,MAAMsN,QAAQ1N,EAAUI,MAAMmN,WAGjDsE,4BAA6B,SAAqCC,EAAWC,GAC3E,IAAIC,EAAW,GACXC,EAAqB,GACzB,GAAI,gGAAYrU,EAAKsU,gBACfD,EAAqBH,EAAUK,SAAS,CAC1CC,UAAU,EACVL,SAAU,gGAAYnU,EAAKyU,uBAO/B,IAJA,IAAIC,EAAoBR,EAAUK,SAAS,CACzCJ,SAAUA,GACP,gGAAYnU,EAAKsU,iBAAmB,gGAAYtU,EAAK2U,4BAEjDtT,EAAI,EAAGuT,EAAerO,OAAOC,KAAK6N,GAAqBhT,EAAIuT,EAAaxT,OAAQC,IACvF+S,EAASQ,EAAavT,IAAMwT,EAAaT,EAASQ,EAAavT,KAAO,GAAIgT,EAAmBO,EAAavT,KAE5G,IAASA,EAAI,EAAGuT,EAAerO,OAAOC,KAAKkO,GAAoBrT,EAAIuT,EAAaxT,OAAQC,IACtF+S,EAASQ,EAAavT,IAAMwT,EAAaT,EAASQ,EAAavT,KAAO,GAAIqT,EAAkBE,EAAavT,KAE3G,OAAO+S,EAKP,SAASS,EAAa5S,EAAQ6S,GAC5B,IAAK,IAAIzT,EAAI,EAAGmF,EAAOD,OAAOC,KAAKsO,GAASzT,EAAImF,EAAKpF,OAAQC,IAC3DY,EAAOuE,EAAKnF,IAAMyT,EAAOtO,EAAKnF,IAEhC,OAAOY,IAOX8S,IAAK,CACHpU,SAAU,SAAqBuN,GAC7B,OAAOA,GAA+B,IAAxBA,EAAI8G,QAAQ,SAAiB9G,EAAIjL,MAAM,KAAK7B,QAAU,GAEtEgC,MAAO,SAAkB6R,GACvB,IAAIC,EAAUD,EAAIhS,MAAM,KACxB,MAAO,CACLkS,UAAWD,EAAQ,GACnBlT,QAASkT,EAAQ,GACjBE,OAAQF,EAAQ,GAChBG,UAAWH,EAAQ,GACnBI,SAAUJ,EAAQ1M,MAAM,GAAG5C,KAAK,OAGpCjD,MAAO,SAAkB4S,GACvB,QACwBvN,IAAtBuN,EAAUvT,cACWgG,IAArBuN,EAAUH,aACcpN,IAAxBuN,EAAUF,gBACarN,IAAvBuN,EAAUD,SACV,MAAMtV,EAAKgB,MAAM,IAAIC,MAAM,gCAC7B,MAAO,QAASsU,EAAUJ,WAAa,OAAS,IAAMI,EAAUvT,QAC9D,IAAMuT,EAAUH,OAAS,IAAMG,EAAUF,UAAY,IAAME,EAAUD,WAO3EE,eAAgB,UAKhBlB,eAAgB,sBAKhBK,yBAA0B,8BAK1BF,oBAAqB,kBAKrBgB,gBAAiB,6BAMnBlU,EAAOC,QAAUxB,I,0tHCzhCjB,IAAIoE,EAAM,EAAQ,QAEdhE,EAAUgE,EAAIpE,KAAKI,QAKvBgE,EAAIsR,QAAQC,cAAgBvV,EAAQ,CAClCC,YAAa,SAAuBwD,GAClCrD,KAAKqD,QAAUA,GAGjB+R,mBAAoB,SAA4BC,GAC9CrV,KAAKsV,gBAAkBD,GAGzBE,mBAAoB,WAClB,OAAOvV,KAAKsV,mBAIhB1R,EAAIsR,QAAQC,cAAcK,WAAa,SAAoB1T,GACzD,OAAQA,GACN,IAAK,KAAM,OAAO8B,EAAIsR,QAAQO,GAC9B,IAAK,KAAM,OAAO7R,EAAIsR,QAAQQ,GAC9B,IAAK,OACL,IAAK,KAAM,OAAO9R,EAAIsR,QAAQS,GAC9B,IAAK,KAAM,OAAO/R,EAAIsR,QAAQU,GAC9B,IAAK,UAAW,OAAOhS,EAAIsR,QAAQW,QAErC,MAAM,IAAIpV,MAAM,2BAA6BqB,IAG/C,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,S,uBCtCR,EAAQ,QACR,IAAI8B,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAoB,UAAI,GAClCpS,EAAIqS,UAAYH,EAAQI,cAAc,YAAa,CAAC,cAAe,eACnEnQ,OAAO8H,eAAekI,EAAUC,SAAoB,UAAG,aAAc,CACnElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAgDC,WACpEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIqS,W,qFCjBrB,IAAIzW,EAAO,EAAQ,QACf8W,EAAQ,EAAQ,QAEpB,SAASC,KAwET,SAASC,EAAoBC,EAAKC,GAEhC,IADA,IAAIC,EAAWF,EAAIG,qBAAqBF,GAC/B7V,EAAI,EAAGgW,EAAOF,EAAS/V,OAAQC,EAAIgW,EAAMhW,IAChD,GAAI8V,EAAS9V,GAAGiW,aAAeL,EAC7B,OAAOE,EAAS9V,GAKtB,SAASkW,EAASN,EAAKhT,GAErB,OADKA,IAAOA,EAAQ,IACZA,EAAMlD,MACZ,IAAK,YAAa,OAAOyW,EAAeP,EAAKhT,GAC7C,IAAK,MAAO,OAkChB,SAAkBgT,EAAKhT,GACrB,IAAID,EAAO,GACPyT,EAASxT,EAAMsH,IAAIlJ,MAAQ,MAC3BqV,EAAWzT,EAAMyC,MAAMrE,MAAQ,QAC/BsV,EAAU1T,EAAM2T,UAAY3T,EAAM5B,KAAO,QAEzCwV,EAAQZ,EAAIa,kBAChB,KAAOD,GAAO,CACZ,GAAIA,EAAME,WAAaJ,EAAS,CAC9B,IAAIpM,EAAMyL,EAAoBa,EAAOJ,GAAQO,YACzCtR,EAAQsQ,EAAoBa,EAAOH,GACvC1T,EAAKuH,GAAOgM,EAAS7Q,EAAOzC,EAAMyC,OAEpCmR,EAAQA,EAAMI,mBAEhB,OAAOjU,EAjDckU,CAASjB,EAAKhT,GACjC,IAAK,OAAQ,OAmDjB,SAAmBgT,EAAKhT,GACtB,IAAID,EAAO,GACP2T,EAAU1T,EAAM2T,UAAY3T,EAAM5B,KAAQ4B,EAAMkU,OAAO9V,MAAQ,SAE/DwV,EAAQZ,EAAIa,kBAChB,KAAOD,GACDA,EAAME,WAAaJ,GACrB3T,EAAK2B,KAAK4R,EAASM,EAAO5T,EAAMkU,SAElCN,EAAQA,EAAMI,mBAEhB,OAAOjU,EA9DeoU,CAAUnB,EAAKhT,GACnC,UAAK+D,EAAW,KAAK,KAAM,OAiF/B,SAAsBiP,GACpB,GAAIA,QAAmC,MAAO,GAG9C,IAAKA,EAAIa,kBACP,OAAkC,OAA9Bb,EAAIK,WAAWA,WAA4B,GACjB,IAA1BL,EAAIoB,WAAWjX,OAAqB,GAC5B6V,EAAIe,YAIlB,IAAI/T,EAAQ,CAAClD,KAAM,YAAa+O,QAAS,IACrC+H,EAAQZ,EAAIa,kBAChB,KAAOD,GAAO,CACZ,IAAIX,EAAMW,EAAME,SACZxR,OAAOyD,UAAUmD,eAAelD,KAAKhG,EAAM6L,QAASoH,GAEtDjT,EAAM6L,QAAQoH,GAAKnW,KAAO,OAE1BkD,EAAM6L,QAAQoH,GAAO,CAAC7U,KAAM6U,GAE9BW,EAAQA,EAAMI,mBAEhB,OAAOT,EAAeP,EAAKhT,GAxGSqU,CAAarB,GAC/C,QAAS,OA+Db,SAAqBA,EAAKhT,GACxB,GAAIgT,EAAIsB,aAAc,CACpB,IAAI/Q,EAAWyP,EAAIsB,aAAa,YACf,WAAb/Q,IACFvD,EAAQ,IAAI6S,EAAM0B,OAAO,CAACzX,KAAMyG,KAIpC,IAAIiR,EAAOxB,EAAIe,YACF,KAATS,IAAaA,EAAO,MACxB,MAA4B,mBAAjBxU,EAAMyU,OACRzU,EAAMyU,OAAOD,GAEbA,EA5ESE,CAAY1B,EAAKhT,IAIrC,SAASuT,EAAeP,EAAKhT,GAC3B,IAAID,EAAO,GACX,OAAY,OAARiT,GAEJjX,EAAKiN,KAAKhJ,EAAM6L,SAAS,SAAS8I,EAAYC,GAC5C,GAAIA,EAAYC,gBACd,GAAIvS,OAAOyD,UAAUmD,eAAelD,KAAKgN,EAAI8B,WAAYF,EAAYxW,MAAO,CAC1E,IAAIqE,EAAQuQ,EAAI8B,WAAWF,EAAYxW,MAAMqE,MAC7C1C,EAAK4U,GAAcrB,EAAS,CAACS,YAAatR,GAAQmS,QAE/C,CACL,IAAIG,EAAWH,EAAYjB,UAAYX,EACrCD,EAAoBC,EAAK4B,EAAYxW,MACnC2W,EACFhV,EAAK4U,GAAcrB,EAASyB,EAAUH,GAErCA,EAAYjB,WACQ,SAArBiB,EAAY9X,MACXkD,EAAMlC,IAAIkX,oBACXjV,EAAK4U,GAAcC,EAAYK,kBAjBZlV,EA5F3B+S,EAAa/M,UAAU5G,MAAQ,SAAS6T,EAAKhT,GAC3C,GAAgC,KAA5BgT,EAAI/R,QAAQ,OAAQ,IAAY,MAAO,GAE3C,IAAI0B,EAAQ5F,EACZ,IACE,GAAImY,OAAOC,UAAW,CACpB,IAEExS,GADa,IAAIwS,WACDC,gBAAgBpC,EAAK,YACrC,MAAOqC,GACP,MAAMtZ,EAAKgB,MAAM,IAAIC,MAAM,2BACzB,CACEkN,cAAemL,EACfpY,KAAM,iBACNiS,WAAW,IAIjB,GAA+B,OAA3BvM,EAAO2S,gBACT,MAAMvZ,EAAKgB,MAAM,IAAIC,MAAM,gCACzB,CACEC,KAAM,iBACNiS,WAAW,IAIjB,IAAIqG,EAAU5S,EAAOwQ,qBAAqB,eAAe,GACzD,GAAIoC,IAAYA,EAAQlC,aAAe1Q,GACH,SAAhC4S,EAAQlC,WAAWS,UACnByB,EAAQlC,WAAWA,aAAe1Q,GACS,SAA3C4S,EAAQlC,WAAWA,WAAWS,UAAsB,CACtD,IAAI0B,EAAeD,EAAQpC,qBAAqB,OAAO,IAAMoC,EAC7D,MAAMxZ,EAAKgB,MAAM,IAAIC,MAAMwY,EAAazB,aAAe,4BACrD,CACE9W,KAAM,iBACNiS,WAAW,SAGZ,KAAIgG,OAAOO,cAYhB,MAAM,IAAIzY,MAAM,0BARhB,IAHA2F,EAAS,IAAIuS,OAAOO,cAAc,qBAC3BC,OAAQ,GAEV/S,EAAOgT,QAAQ3C,GAClB,MAAMjX,EAAKgB,MAAM,IAAIC,MAAM,2BACzB,CACEC,KAAM,iBACNiS,WAAW,KAMnB,MAAOjQ,GACPlC,EAAQkC,EAGV,GAAI0D,GAAUA,EAAO2S,kBAAoBvY,EAAO,CAC9C,IAAIgD,EAAOuT,EAAS3Q,EAAO2S,gBAAiBtV,GACxCgO,EAAW+E,EAAoBpQ,EAAO2S,gBAAiB,oBAI3D,OAHItH,IACFjO,EAAKgN,iBAAmBuG,EAAStF,EAAU,KAEtCjO,EACF,GAAIhD,EACT,MAAMhB,EAAKgB,MAAMA,GAAS,IAAIC,MAAS,CAACC,KAAM,iBAAkBiS,WAAW,IAE3E,MAAO,IAiIX5R,EAAOC,QAAUuV,G,k7zFCxMjB,IAAI/W,EAAO,EAAQ,QACfmP,EAAWnP,EAAKmP,SA+BpB5N,EAAOC,QA7BP,SAAwBa,EAAMwX,EAAQtZ,GACpCA,EAAUA,GAAW,GACrB4O,EAAS3O,KAAM,OAAQ6B,GACvB8M,EAAS3O,KAAM,MAAOD,EAAQwB,KAAK,GAE/B8X,EAAOzX,WACT+M,EAAS3O,KAAM,YAAaR,EAAKgF,OAAOiE,WAAW4Q,EAAOzX,YAG5D,IAAIyP,EAAOrR,KACA,CACT,OACA,cACA,QACA,cACA,aAGGsZ,SAAQ,SAASvO,GACpB,IAAI7E,EAAQmT,EAAOtO,GACf7E,GACFyI,EAAS0C,EAAMtG,EAAK7E,Q,k8uBCxB1B,EAAQ,QACR,IAAItC,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAwB,cAAI,GACtCpS,EAAI2V,cAAgBzD,EAAQI,cAAc,gBAAiB,CAAC,eAC5DnQ,OAAO8H,eAAekI,EAAUC,SAAwB,cAAG,aAAc,CACvElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAoDC,WACxEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI2V,e,21BCjBrB,EAAQ,QACR,IAAI3V,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAoB,UAAI,GAClCpS,EAAI4V,UAAY1D,EAAQI,cAAc,YAAa,CAAC,eACpDnQ,OAAO8H,eAAekI,EAAUC,SAAoB,UAAG,aAAc,CACnElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAgDC,WACpEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI4V,W,gnBCjBrB,EAAQ,QACR,IAAI5V,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAI6V,IAAM3D,EAAQI,cAAc,MAAO,CAAC,eACxCnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA0CC,WACrEF,EAAMuD,QAAU,EAAQ,QAAwCA,QACzDvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI6V,K,uBClBrB,IAAI7V,EAAM,EAAQ,QACdhE,EAAUgE,EAAIpE,KAAKI,QAKvBgE,EAAIsR,QAAQO,GAAK7V,EAAQgE,EAAIsR,QAAQC,cAAe,CAClDwE,iBAAkB,SAA0BC,EAAahQ,GAElDA,IAAMA,EAAOhG,EAAIpE,KAAKoK,KAAKC,WAEhC,IAAIgQ,EAAI7Z,KAAKqD,QAEbwW,EAAEzX,OAAO0X,UAAYlW,EAAIpE,KAAKoK,KAAKK,QAAQL,GAC3CiQ,EAAEzX,OAAO2X,iBAAmB,IAC5BF,EAAEzX,OAAO4X,gBAAkB,aAC3BH,EAAEzX,OAAO6X,eAAiBL,EAAYM,YAElCN,EAAYO,eACdN,EAAEzX,OAAOgY,cAAgBR,EAAYO,qBAGhCN,EAAEzX,OAAOiY,UAChBR,EAAEzX,OAAOiY,UAAYra,KAAKsa,UAAUV,GAEpCC,EAAE3X,KAAO0B,EAAIpE,KAAKoG,oBAAoBiU,EAAEzX,QACxCyX,EAAExX,QAAQ,kBAAoBwX,EAAE3X,KAAKtB,QAGvC0Z,UAAW,SAAmBV,GAC5B,OAAOhW,EAAIpE,KAAKgL,OAAOM,KAAK8O,EAAYW,gBAAiBva,KAAKwa,eAAgB,WAGhFA,aAAc,WACZ,IAAIxV,EAAQ,GAKZ,OAJAA,EAAMG,KAAKnF,KAAKqD,QAAQoX,QACxBzV,EAAMG,KAAKnF,KAAKqD,QAAQqX,SAASC,KAAKjS,eACtC1D,EAAMG,KAAKnF,KAAKqD,QAAQuX,YACxB5V,EAAMG,KAAKvB,EAAIpE,KAAKoG,oBAAoB5F,KAAKqD,QAAQjB,SAC9C4C,EAAMI,KAAK,SAQtBrE,EAAOC,QAAU4C,EAAIsR,QAAQO,I,uBC/C7B,EAAQ,QACR,IAAI7R,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAA0B,gBAAI,GACxCpS,EAAIiX,gBAAkB/E,EAAQI,cAAc,kBAAmB,CAAC,eAChEnQ,OAAO8H,eAAekI,EAAUC,SAA0B,gBAAG,aAAc,CACzElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAuDC,WAC3EF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIiX,iB,miPCjBrB,EAAQ,QACR,IAAIjX,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAqB,WAAI,GACnCpS,EAAIkX,WAAahF,EAAQI,cAAc,aAAc,CAAC,eACtD,EAAQ,QACRnQ,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAiDC,WACrEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIkX,Y,2eCjBrB/U,OAAO8H,eAAe7M,EAAS,aAAc,CAAEkF,OAAO,IACtD,IAAI6U,EAAQ,EAAQ,QAKhBC,EAA+B,WAC/B,SAASA,EAAcC,QACH,IAAZA,IAAsBA,EANjB,KAOTjb,KAAKib,QAAUA,EACfjb,KAAKkb,MAAQ,IAAIH,EAAMI,SAASF,GAuDpC,OApDAlV,OAAO8H,eAAemN,EAAcxR,UAAW,OAAQ,CACnDsF,IAAK,WACD,OAAO9O,KAAKkb,MAAMta,QAEtBmN,YAAY,EACZW,cAAc,IAElBsM,EAAcxR,UAAU4R,IAAM,SAAUrQ,EAAK7E,GAC3C,IAAImV,EAA2B,iBAARtQ,EAAmBiQ,EAAcM,aAAavQ,GAAOA,EACtEwQ,EAAiBvb,KAAKwb,cAActV,GACxClG,KAAKkb,MAAME,IAAIC,EAAWE,IAE9BP,EAAcxR,UAAUsF,IAAM,SAAU/D,GACtC,IAAIsQ,EAA2B,iBAARtQ,EAAmBiQ,EAAcM,aAAavQ,GAAOA,EACtE0Q,EAAM1R,KAAK0R,MACXC,EAAU1b,KAAKkb,MAAMpM,IAAIuM,GAC7B,GAAIK,EACA,IAAK,IAAI7a,EAAI,EAAGA,EAAI6a,EAAQ9a,OAAQC,IAAK,CAErC,GADa6a,EAAQ7a,GACV8a,OAASF,EAEhB,YADAzb,KAAKkb,MAAMU,OAAOP,GAK9B,OAAOK,GAEXV,EAAcM,aAAe,SAAUvQ,GAGnC,IAFA,IAAI8Q,EAAc,GACdC,EAAkB/V,OAAOC,KAAK+E,GAAK9E,OAC9BpF,EAAI,EAAGA,EAAIib,EAAgBlb,OAAQC,IAAK,CAC7C,IAAIkb,EAAiBD,EAAgBjb,QACT2G,IAAxBuD,EAAIgR,IAERF,EAAY1W,KAAK4F,EAAIgR,IAEzB,OAAOF,EAAYzW,KAAK,MAE5B4V,EAAcxR,UAAUgS,cAAgB,SAAUQ,GAC9C,IAAIP,EAAM1R,KAAK0R,MACf,OAAOO,EAAUnT,KAAI,SAAU6R,GAAY,MAAO,CAC9CuB,QAASvB,EAASuB,SAAW,GAC7BN,OAAQF,EAA6C,IAAtCf,EAASwB,sBAAwB,GAAU,SAGlElB,EAAcxR,UAAU2S,MAAQ,WAC5Bnc,KAAKkb,MAAMiB,SAEfnB,EAAcxR,UAAUoS,OAAS,SAAU7Q,GACzC,IAAIsQ,EAA2B,iBAARtQ,EAAmBiQ,EAAcM,aAAavQ,GAAOA,EAC1E/K,KAAKkb,MAAMU,OAAOP,IAEfL,EA3DuB,GA6DlCha,EAAQga,cAAgBA,G,6sWCpExB,IAAIpX,EAAM,EAAQ,QAKdwY,EAAe,GAKfC,EAAa,GAUbC,EAAe,eAKnBvb,EAAOC,QAAU,CASfub,YAAa,SAAqB3S,EAAMgL,EAAQ4H,GAC9C,MAAO,CACL5S,EAAKpB,OAAO,EAAG,GACfoM,EACA4H,EACAF,GACAlX,KAAK,MAaTqX,cAAe,SACb7C,EACAhQ,EACAgL,EACApT,EACAkb,GAEA,IAEIC,EAAW,CAFO/Y,EAAIpE,KAAKgL,OAC5BM,KAAK8O,EAAYW,gBAAiBX,EAAYM,YAAa,UAC7BtQ,EAAMgL,EAAQpT,GAAS4D,KAAK,KAE7D,IADAsX,GAA8B,IAAhBA,IACMC,KAAYP,EAC9B,OAAOA,EAAaO,GAGtB,IAAIC,EAAQhZ,EAAIpE,KAAKgL,OAAOM,KAC1B,OAAS8O,EAAYW,gBACrB3Q,EACA,UAEEiT,EAAUjZ,EAAIpE,KAAKgL,OAAOM,KAAK8R,EAAOhI,EAAQ,UAC9CkI,EAAWlZ,EAAIpE,KAAKgL,OAAOM,KAAK+R,EAASrb,EAAS,UAElDub,EAAanZ,EAAIpE,KAAKgL,OAAOM,KAAKgS,EAAUR,EAAc,UAU9D,OATII,IACFN,EAAaO,GAAYI,EACzBV,EAAWlX,KAAKwX,GACZN,EAAWzb,OAjEC,WAmEPwb,EAAaC,EAAWW,UAI5BD,GASTE,WAAY,WACVb,EAAe,GACfC,EAAa,M,o2uBCjGjB,IAAIzY,EAAM,EAAQ,QAKdsZ,EAAuB,CACzB,oBACA,iBACA,qBAyDFtZ,EAAIpE,KAAK2L,OAAOvH,EAAIuZ,QAAQ3T,UAAW,CAInC4T,gBAAiB,WACb,IAAKpd,KAAKsD,OAAOoX,UAAY1a,KAAKsD,OAAOoX,SAASlG,QAAQ,MAAQ,EAAG,CAGjE,MAAM5Q,EAAIpE,KAAKgB,MAAM,IAAIC,MACrB,CAACoB,KAAM,kBAAmBlB,QAHpB,wEAUlB0c,sBAAuB,SAA+Bha,GAClDA,EAAQia,YAAY,mBAAoBtd,KAAKud,sBACzCL,EAAqB1I,QAAQnR,EAAQzB,YAAc,GACnDyB,EAAQia,YAAY,cAAe1Z,EAAIpE,KAAK4T,yBAOpDmK,qBAAsB,SAA8Bhb,GAChD,IACIib,GADOjb,EAAKC,aAAaN,KAAKW,YAAc,MAC3B4a,OAChBD,GAAqC,MAAxBA,EAAUE,OAAO,KAC/Bnb,EAAKC,aAAaN,KAAO,Q,qBC/FrC,EAAQ,QACR,IAAI0B,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAuB,aAAI,GACrCpS,EAAI+Z,aAAe7H,EAAQI,cAAc,eAAgB,CAAC,eAC1DnQ,OAAO8H,eAAekI,EAAUC,SAAuB,aAAG,aAAc,CACtElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAmDC,WACvEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI+Z,c,83uBCjBrB,IAAI/Z,EAAM,EAAQ,QACdhE,EAAUgE,EAAIpE,KAAKI,QAKnBge,EAAgB,oBAKpB,SAASC,EAAiBxa,GACxB,IAAIya,EAAUza,EAAQ/B,YAAYe,QAAQub,GACtCG,EAAc1a,EAAQ7B,QAAQwc,eAAe3a,GAKjD,UAHOA,EAAQ/B,YAAYe,QAAQ,qBAC5BgB,EAAQ/B,YAAYe,QAAQ,oBAE/B0b,IAAgBna,EAAIsR,QAAQS,GAAI,CAClC,GAAImI,EAAU,OAAQ,CAGpB,MAAMla,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,oBAAqBC,QAHf,kFAGiCgS,WAAW,IAG5DtP,EAAQ/B,YAAYe,QAAQub,GAAiBE,MACxC,IAAIC,IAAgBna,EAAIsR,QAAQU,GAKrC,MAAMhS,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCE,QAAS,gDACTD,KAAM,oBAAqBiS,WAAW,IANxC,IAAI8I,EAAMpY,EAAQ7B,QAAU6B,EAAQ7B,QAAQyc,uBAAyBra,EAAIpE,KAAKoK,KAAKC,UACnFxG,EAAQ/B,YAAYe,QAAQub,GAAiB9Q,SAC3ClJ,EAAIpE,KAAKoK,KAAKS,cAAcoR,GAAOqC,EAAS,IAAIjb,YAYtD,SAASqb,EAAgB7a,GACvB,IAAIqX,EAAWrX,EAAQ/B,YAAYoZ,SAC/ByD,EAAYva,EAAIpE,KAAK6F,SAAShC,EAAQ/B,YAAYoF,MAClD0X,EAAc,GAEdD,EAAUE,SACZD,EAAcxa,EAAIpE,KAAKiG,iBAAiB0Y,EAAUE,OAAO7V,OAAO,KAGlE,IAAI8V,EAAOjb,EAAQ/B,YAAYe,QAAuB,cAAEI,MAAM,KAC9D,GAAgB,QAAZ6b,EAAK,GACPA,EAAOA,EAAK,GAAG7b,MAAM,KACrB2b,EAAuB,UAAIE,EAAKtb,MAChCob,EAA4B,eAAIE,EAAKlZ,KAAK,KAE1CxB,EAAIpE,KAAKiN,KAAKpJ,EAAQ/B,YAAYe,SAAS,SAAU0I,EAAK7E,GACpD6E,IAAQ6S,IAAe7S,EAAM,WACE,IAA/BA,EAAIyJ,QAAQ,wBAEP4J,EAAYrT,GACnBA,EAAMA,EAAIrC,eAEZ0V,EAAYrT,GAAO7E,YAEd7C,EAAQ/B,YAAYe,QAAQub,UAC5BQ,EAA2B,qBAC3BA,EAAkB,UACpB,GAAgB,qBAAZE,EAAK,GAA2B,CACzCA,EAAKtB,QACL,IACI1C,EADOgE,EAAKlZ,KAAK,KACA4D,MAAM,mCAAmC,GAC9DoV,EAAY,mBAAqB9D,SAC1B8D,EAAqB,QAI9B1D,EAASE,SAAWuD,EAAUvD,SAC9BF,EAAS2D,OAASza,EAAIpE,KAAKoG,oBAAoBwY,GAMjDxa,EAAIsR,QAAQqJ,QAAU3e,EAAQ,CAI5B4e,KAAM,SAAcnb,EAASob,EAAYtV,GAWvC,GAVA9F,EAAQ/B,YAAYe,QAAQub,GAAiBa,GAAc,KAC3Dpb,EAAQuI,GAAG,QAASiS,GACpBxa,EAAQuI,GAAG,OAAQsS,GACnB7a,EAAQqb,eAAe,aACrB9a,EAAI+a,eAAeC,KAAKC,oBAC1Bxb,EAAQqb,eAAe,aACrB9a,EAAI+a,eAAeC,KAAKE,gBAE1Bzb,EAAQ0b,KAAK,gBAAiB,CAAC1b,KAE3B8F,EAOG,CAEL,GADA9F,EAAQlB,QACJkB,EAAQ2b,SAASxe,MAAO,MAAM6C,EAAQ2b,SAASxe,MACnD,OAAOoD,EAAIpE,KAAK+F,UAAUlC,EAAQ/B,YAAYoZ,UAT9CrX,EAAQlB,OAAM,WACRnC,KAAKgf,SAASxe,MAAO2I,EAASnJ,KAAKgf,SAASxe,OAE9C2I,EAAS,KAAMvF,EAAIpE,KAAK+F,UAAUlC,EAAQ/B,YAAYoZ,iBAchE3Z,EAAOC,QAAU4C,EAAIsR,QAAQqJ,S,qoMCtH7B,EAAQ,QACR,IAAI3a,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAIqb,IAAMnJ,EAAQI,cAAc,MAAO,CAAC,eACxCnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA2DC,WACtFF,EAAMuD,QAAU,EAAQ,QAAyDA,QAC1EvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIqb,K,qi0CClBrB,IAAIrb,EAAM,EAAQ,QAElBA,EAAIpE,KAAK2L,OAAOvH,EAAIsb,gBAAgB1V,UAAW,CAI7C6T,sBAAuB,SAA+Bha,GAC1B,YAAtBA,EAAQzB,WACVyB,EAAQia,YAAY,QAAStd,KAAKmf,gBAQtCA,cAAe,SAAuB9b,GACpC,IAAIiC,EAAMjC,EAAQjB,OAAOgd,gBACrB9Z,IACFjC,EAAQ/B,YAAYoZ,SAAW,IAAI9W,EAAIyb,SAAS/Z,Q,qBCnBtD,IAAI1B,EAAM,EAAQ,QACdpE,EAAOoE,EAAIpE,KACXC,EAAS,EAAQ,QAAWA,OAC5BE,EAAc,EAAQ,QACtB2f,EAAc,EAAQ,QA0N1B,SAASC,EAAcrZ,EAAOsZ,GAC5B,OAAOA,EAAc,IAAIF,EAAYpZ,GAASuZ,OAAOvZ,GAQvD,SAASwZ,EAAUlc,EAAMzD,GACvB,IAAI8I,EAAM,CAAC8W,EAAG,IACd,IAAK,IAAI5U,KAAOvH,EAAM,CACpB,IAAIoc,EAAYhc,EAAIic,SAASC,UAAU9d,MAAMwB,EAAKuH,GAAMhL,QACtC,IAAd6f,IACF/W,EAAO,EAAEkC,GAAO6U,GAGpB,OAAO/W,EAzOTjF,EAAIic,SAASC,UAAY,CAoBvB9d,MAAO,SAAS+d,EAAavc,EAAMzD,GACjCA,EAAUA,GAAW,GACrB,IAAIQ,EAAOd,EAAO+D,GAClB,MAAa,WAATjD,EACKmf,EAAUlc,EAAMzD,GACL,UAATQ,EAkLf,SAAoBiD,EAAMzD,GAExB,IADA,IAAID,EAAO,CAACkgB,EAAG,IACNnf,EAAI,EAAGA,EAAI2C,EAAK5C,OAAQC,IAC/Bf,EAAQ,EAAEqF,KAAKvB,EAAIic,SAASC,UAAU9d,MAAMwB,EAAK3C,GAAId,IAEvD,OAAOD,EAtLImgB,CAAWzc,EAAMzD,GACN,QAATQ,EAoNf,SAAmBiD,EAAMzD,GACvBA,EAAUA,GAAW,GACrB,IAAIK,EAASoD,EAAKpD,OAClB,GAAIL,EAAQmgB,oBAEY,KADtB9f,EAoBJ,SAA8B+f,GAC1B,IAAIC,EAAiB,GAMrB,GAL4B,CACxBpS,QAAQ,EACRqS,QAAQ,EACRZ,QAAQ,GAEcU,EAAI5f,MAAO,CACjC,IAAK,IAAIM,EAAI,EAAGA,EAAIsf,EAAI/f,OAAOQ,OAAQC,IACN,IAAzBsf,EAAI/f,OAAOS,GAAGD,QAGlBwf,EAAejb,KAAKgb,EAAI/f,OAAOS,IAGnC,OAAOuf,EAGX,OAAOD,EAAI/f,OAtCFkgB,CAAqB9c,IACnB5C,OACT,OAAOgD,EAAIic,SAASC,UAAU9d,MAAM,MAIxC,IAAI6G,EAAM,GACV,OAAQrF,EAAKjD,MACX,IAAK,SAAUsI,EAAQ,GAAIzI,EAAQ,MACnC,IAAK,SAAUyI,EAAQ,GAAIzI,EAAQ,MACnC,IAAK,SAAUyI,EAAQ,GAAIzI,EAAOyI,KAAI,SAAU3C,GAC9C,OAAOA,EAAMrD,cAGjB,OAAOgG,EArOI0X,CAAU/c,EAAMzD,GACL,WAATQ,EACW,IAAhBiD,EAAK5C,QAAgBb,EAAQmgB,mBACxBH,EAAa,MAEf,CAAES,EAAGhd,GACM,WAATjD,GAA8B,gBAATA,EACvB,CAAEkgB,EAAGjd,EAAKX,YACC,WAATtC,EACW,IAAhBiD,EAAK5C,QAAgBb,EAAQmgB,mBACxBH,EAAa,MAEf,CAAEW,EAAGld,GACM,YAATjD,EACF,CAAEogB,KAAMnd,GACG,SAATjD,EACF,CAAEqgB,MAAM,GACG,cAATrgB,GAAiC,aAATA,EAE1Bmf,EAAUlc,EAAMzD,QAFlB,GAsCT8gB,SAAU,SAAsBrd,EAAMzD,GACpC,OAAO6D,EAAIic,SAASC,UAAU9d,MAAMwB,EAAMzD,GAAS4f,GAuBrDjc,OAAQ,SAASod,EAActd,EAAMzD,GAEnC,IAAID,EAAM+I,EAAKhI,EACf,IAAK,IAAIN,KAFTR,EAAUA,GAAW,GAEJyD,EAAM,CACrB,IAAIpD,EAASoD,EAAKjD,GAClB,GAAa,MAATA,EAAc,CAEhB,IAAK,IAAIwK,KADTlC,EAAM,GACUzI,EACdyI,EAAIkC,GAAO+V,EAAc1gB,EAAO2K,GAAMhL,GAExC,OAAO8I,EACF,GAAa,MAATtI,EAAc,CAEvB,IADAT,EAAO,GACFe,EAAI,EAAGA,EAAIT,EAAOQ,OAAQC,IAC7Bf,EAAKqF,KAAK2b,EAAc1gB,EAAOS,GAAId,IAErC,OAAOD,EACF,GAAa,OAATS,EAAe,CAExB,IADAT,EAAO,GACFe,EAAI,EAAGA,EAAIT,EAAOQ,OAAQC,IAC7Bf,EAAKqF,KAAK/E,EAAOS,GAAK,IAExB,OAAO,IAAIlB,EAAYG,GAClB,GAAa,OAATS,EAAe,CAExB,IADAT,EAAO,GACFe,EAAI,EAAGA,EAAIT,EAAOQ,OAAQC,IAC7Bf,EAAKqF,KAAKoa,EAAcnf,EAAOS,GAAId,EAAQyf,cAE7C,OAAO,IAAI7f,EAAYG,GAClB,GAAa,OAATS,EAAe,CAExB,IADAT,EAAO,GACFe,EAAI,EAAGA,EAAIT,EAAOQ,OAAQC,IAC7Bf,EAAKqF,KAAKvB,EAAIpE,KAAKqH,OAAOC,SAAS1G,EAAOS,KAE5C,OAAO,IAAIlB,EAAYG,GAClB,GAAa,MAATS,EACT,OAAOH,EAAS,GACX,GAAa,MAATG,EACT,OAAOgf,EAAcnf,EAAQL,EAAQyf,aAChC,GAAa,MAATjf,EACT,OAAOf,EAAKqH,OAAOC,SAAS1G,GACvB,GAAa,SAATG,EACT,MAAmB,SAAXH,GAAgC,SAAXA,IAAgC,IAAXA,EAC7C,GAAa,SAATG,EACT,OAAO,OA0CbwgB,WAAY,SAAoBvd,EAAMzD,GACpC,OAAO6D,EAAIic,SAASC,UAAUpc,OAAO,CAACic,EAAGnc,GAAOzD,KA6FpDgB,EAAOC,QAAU4C,EAAIic,SAASC,W,qBCrS9B,EAAQ,QACR/e,EAAOC,QAAU,CACfggB,IAAK,EAAQ,QACblG,WAAY,EAAQ,QACpBmG,uBAAwB,EAAQ,QAChCC,YAAa,EAAQ,QACrBC,eAAgB,EAAQ,QACxBC,WAAY,EAAQ,QACpBC,SAAU,EAAQ,QAClBC,WAAY,EAAQ,QACpBC,WAAY,EAAQ,QACpBC,iBAAkB,EAAQ,QAC1BC,eAAgB,EAAQ,QACxBC,UAAW,EAAQ,QACnBC,WAAY,EAAQ,QACpBC,WAAY,EAAQ,QACpBC,aAAc,EAAQ,QACtBC,gBAAiB,EAAQ,QACzBC,+BAAgC,EAAQ,QACxCC,YAAa,EAAQ,QACrBC,cAAe,EAAQ,QACvBC,IAAK,EAAQ,QACbC,WAAY,EAAQ,QACpB5I,cAAe,EAAQ,QACvBsG,SAAU,EAAQ,QAClBhF,gBAAiB,EAAQ,QACzBuH,IAAK,EAAQ,QACbC,IAAK,EAAQ,QACbC,IAAK,EAAQ,QACbC,IAAK,EAAQ,QACbC,YAAa,EAAQ,QACrBC,iBAAkB,EAAQ,QAC1BxD,IAAK,EAAQ,QACbyD,MAAO,EAAQ,QACfC,IAAK,EAAQ,QACbC,kBAAmB,EAAQ,QAC3BC,SAAU,EAAQ,QAClBC,SAAU,EAAQ,QAClBrJ,IAAK,EAAQ,QACbxD,UAAW,EAAQ,QACnB8M,IAAK,EAAQ,QACb5F,QAAS,EAAQ,QACjB6F,QAAS,EAAQ,QACjBC,IAAK,EAAQ,QACbC,OAAQ,EAAQ,QAChBC,WAAY,EAAQ,QACpBjE,gBAAiB,EAAQ,QACzBkE,6BAA8B,EAAQ,QACtCC,MAAO,EAAQ,QACfC,gBAAiB,EAAQ,QACzBC,SAAU,EAAQ,QAClBC,MAAO,EAAQ,QACfC,IAAK,EAAQ,QACbC,SAAU,EAAQ,QAClBC,YAAa,EAAQ,QACrBC,QAAS,EAAQ,QACjBC,eAAgB,EAAQ,QACxBjO,GAAI,EAAQ,QACZkO,eAAgB,EAAQ,QACxBC,IAAK,EAAQ,QACbC,IAAK,EAAQ,SACbC,IAAK,EAAQ,QACbC,IAAK,EAAQ,QACbC,eAAgB,EAAQ,QACxBC,IAAK,EAAQ,QACbC,KAAM,EAAQ,QACdC,IAAK,EAAQ,QACbC,SAAU,EAAQ,QAClBC,wBAAyB,EAAQ,QACjCC,QAAS,EAAQ,QACjBC,aAAc,EAAQ,QACtBC,eAAgB,EAAQ,QACxBC,WAAY,EAAQ,QACpBC,0BAA2B,EAAQ,QACnCC,kBAAmB,EAAQ,QAC3BC,aAAc,EAAQ,QACtBvL,UAAW,EAAQ,QACnBwL,eAAgB,EAAQ,QACxBC,QAAS,EAAQ,QACjBC,eAAgB,EAAQ,QACxBvH,aAAc,EAAQ,QACtBwH,kBAAmB,EAAQ,QAC3BC,YAAa,EAAQ,QACrBC,kBAAmB,EAAQ,QAC3BC,mBAAoB,EAAQ,QAC5BC,gBAAiB,EAAQ,QACzBC,qBAAsB,EAAQ,QAC9BC,8BAA+B,EAAQ,U,qBCvFzC,EAAQ,QACR,IAAI7hB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAuB,aAAI,GACrCpS,EAAIie,aAAe/L,EAAQI,cAAc,eAAgB,CAAC,eAC1DnQ,OAAO8H,eAAekI,EAAUC,SAAuB,aAAG,aAAc,CACtElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAmDC,WACvEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIie,c,qBCjBrB,EAAQ,QACR,IAAIje,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAkB,QAAI,GAChCpS,EAAIof,QAAUlN,EAAQI,cAAc,UAAW,CAAC,eAChDnQ,OAAO8H,eAAekI,EAAUC,SAAkB,QAAG,aAAc,CACjElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA8CC,WACzEF,EAAMuD,QAAU,EAAQ,QAA4CA,QAC7DvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIof,S,qBClBrB,IAAIxjB,EAAO,EAAQ,QAEnB,SAASyB,KAMT,SAASykB,EAAUxf,EAAOzC,GACxB,GAAKA,GAAD,MAAUyC,EAEd,OAAQzC,EAAMlD,MACZ,IAAK,YAAa,OAOtB,SAA4BolB,EAAWliB,GACrC,IAAImiB,EAAS,GAUb,OATApmB,EAAKiN,KAAKkZ,GAAW,SAAS9jB,EAAMqE,GAClC,IAAImS,EAAc5U,EAAM6L,QAAQzN,GAChC,GAAIwW,EAAa,CACf,GAA6B,SAAzBA,EAAYwN,SAAqB,OACrC,IAAIC,EAAezN,EAAY0N,eAAiB1N,EAAYxW,KAAOA,EAC/DuE,EAASsf,EAAUxf,EAAOmS,QACf7Q,IAAXpB,IAAsBwf,EAAOE,GAAgB1f,OAG9Cwf,EAlBoBI,CAAmB9f,EAAOzC,GACnD,IAAK,MAAO,OA6BhB,SAAsBoF,EAAKpF,GACzB,IAAIsI,EAAM,GAKV,OAJAvM,EAAKiN,KAAK5D,GAAK,SAASkC,EAAK7E,GAC3B,IAAIE,EAASsf,EAAUxf,EAAOzC,EAAMyC,YACrBsB,IAAXpB,IAAsB2F,EAAIhB,GAAO3E,MAEhC2F,EAnCcka,CAAa/f,EAAOzC,GACvC,IAAK,OAAQ,OAmBjB,SAAuB3D,EAAM2D,GAC3B,IAAIsI,EAAM,GAKV,OAJAvM,EAAKyF,UAAUnF,GAAM,SAASoG,GAC5B,IAAIE,EAASsf,EAAUxf,EAAOzC,EAAMkU,aACrBnQ,IAAXpB,GAAsB2F,EAAI5G,KAAKiB,MAE9B2F,EAzBema,CAAchgB,EAAOzC,GACzC,QAAS,OAoCb,SAAyByC,EAAOzC,GAC9B,OAAOA,EAAM0iB,aAAajgB,GArCRkgB,CAAgBlgB,EAAOzC,IAX3CxC,EAAYuI,UAAUrH,MAAQ,SAAS+D,EAAOzC,GAC5C,OAAOd,KAAK0jB,UAAUX,EAAUxf,EAAOzC,KAqDzC1C,EAAOC,QAAUC,G,k5XC1DjB,EAAQ,QACR,IAAI2C,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAI+e,IAAM7M,EAAQI,cAAc,MAAO,CAAC,eACxCnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAuDC,WAClFF,EAAMuD,QAAU,EAAQ,QAAqDA,QACtEvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI+e,K,qBClBrB,IAAI/e,EAAM,EAAQ,QAElBA,EAAIpE,KAAK2L,OAAOvH,EAAIke,gBAAgBtY,UAAW,CAC7C8c,eAAgB,SAAwBlkB,EAAQ+G,GAC9C,OAAOnJ,KAAKumB,2BAA2B,iBAAkBnkB,EAAQ+G,IAGnEqd,MAAO,SAAepkB,EAAQ+G,GAC5B,OAAOnJ,KAAKumB,2BAA2B,QAASnkB,EAAQ+G,IAG1Dsd,0BAA2B,SAAmCrkB,EAAQ+G,GACpE,OAAOnJ,KAAKumB,2BAA2B,4BAA6BnkB,EAAQ+G,O,2TCZhF,IAAI3J,EAAO,EAAQ,QACf2B,EAAqB,EAAQ,QAAaA,mBAM9C,SAASulB,EAAYC,EAAcC,EAAe5kB,EAAOI,GACvD,IAAIykB,EAAM,CAACF,EAAcC,GAAexhB,KAAK,KAC7CyhB,EAAMA,EAAIniB,QAAQ,OAAQ,KAE1B,IAAIoiB,EAAc,GAAIC,GAAiB,EAiCvC,GAhCAvnB,EAAKiN,KAAKzK,EAAMsN,SAAS,SAAUzN,EAAM8V,GACvC,IAAIqP,EAAa5kB,EAAOP,GACxB,GAAImlB,QACJ,GAAwB,QAApBrP,EAAOkO,SAAoB,CAC7B,IAAIoB,EAAQ,IAAIC,OAAO,MAAQvP,EAAO9V,KAAO,aAC7CglB,EAAMA,EAAIniB,QAAQuiB,GAAO,SAASE,EAAGC,GAEnC,OADSA,EAAO5nB,EAAKuF,cAAgBvF,EAAK+E,WAChCyJ,OAAOgZ,WAEU,gBAApBrP,EAAOkO,WAChBkB,GAAiB,EAEG,SAAhBpP,EAAOpX,KACTumB,EAAYnP,EAAO9V,MAAQmlB,EAAWne,KAAI,SAASwe,GACjD,OAAO7nB,EAAK+E,UAAUoT,EAAOA,OAAOwO,aAAakB,GAAKxkB,eAE/B,QAAhB8U,EAAOpX,KAChBf,EAAKiN,KAAKua,GAAY,SAASjc,EAAK7E,GAC9BG,MAAMC,QAAQJ,GAChB4gB,EAAY/b,GAAO7E,EAAM2C,KAAI,SAASwe,GACpC,OAAO7nB,EAAK+E,UAAUyJ,OAAOqZ,OAG/BP,EAAY/b,GAAOvL,EAAK+E,UAAUyJ,OAAO9H,OAI7C4gB,EAAYnP,EAAO9V,MAAQrC,EAAK+E,UAAUoT,EAAOwO,aAAaa,GAAYnkB,gBAK5EkkB,EAAgB,CAClBF,GAAQA,EAAIrS,QAAQ,MAAQ,EAAI,IAAM,IACtC,IAAIxP,EAAQ,GACZxF,EAAKyF,UAAUc,OAAOC,KAAK8gB,GAAa7gB,QAAQ,SAAS8E,GAClD1E,MAAMC,QAAQwgB,EAAY/b,MAC7B+b,EAAY/b,GAAO,CAAC+b,EAAY/b,KAElC,IAAK,IAAIlK,EAAI,EAAGA,EAAIimB,EAAY/b,GAAKnK,OAAQC,IAC3CmE,EAAMG,KAAK3F,EAAK+E,UAAUyJ,OAAOjD,IAAQ,IAAM+b,EAAY/b,GAAKlK,OAGpEgmB,GAAO7hB,EAAMI,KAAK,KAGpB,OAAOyhB,EAoFT9lB,EAAOC,QAAU,CACfI,aAtDF,SAAsBC,IAtFtB,SAAwBA,GACtBA,EAAIC,YAAYmZ,OAASpZ,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAAW0lB,WAsFnEC,CAAelmB,GA7BjB,SAAqBA,GACnB,IAAIO,EAAYP,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAC3CI,EAAQJ,EAAUI,MAElB6kB,EAAMH,EAAYrlB,EAAIC,YAAYoZ,SAAShU,KAAM9E,EAAU4lB,SAAUxlB,EAAOX,EAAIe,QACpFf,EAAIC,YAAYoF,KAAOmgB,EAyBvBY,CAAYpmB,GAtBd,SAAyBA,GACvB,IAAIO,EAAYP,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAC/CpC,EAAKiN,KAAK7K,EAAUI,MAAMsN,SAAS,SAAUzN,EAAM8V,GACjD,IAAIzR,EAAQ7E,EAAIe,OAAOP,GACnBqE,UAEoB,YAApByR,EAAOkO,UAA0C,QAAhBlO,EAAOpX,KAC1Cf,EAAKiN,KAAKvG,GAAO,SAAS6E,EAAK2c,GAC7BrmB,EAAIC,YAAYe,QAAQsV,EAAO9V,KAAOkJ,GAAO2c,KAElB,WAApB/P,EAAOkO,WAChB3f,EAAQyR,EAAOwO,aAAajgB,GAAOrD,WAC/B8U,EAAOgQ,cACTzhB,EAAQ1G,EAAKmH,OAAOC,OAAOV,IAE7B7E,EAAIC,YAAYe,QAAQsV,EAAO9V,MAAQqE,OAQ3C0hB,CAAgBvmB,GAChBF,EAAmBE,IAmDnBiB,aAhDF,aAiDEc,YA9CF,SAAqBb,GACnB,IAAIlB,EAAMkB,EAAKc,QACXG,EAAO,GACPqW,EAAItX,EAAKC,aAETkB,EADYrC,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WACxB8B,OAGnBrB,EAAU,GACd7C,EAAKiN,KAAKoN,EAAExX,SAAS,SAAUwlB,EAAGC,GAChCzlB,EAAQwlB,EAAEnf,eAAiBof,KAG7BtoB,EAAKiN,KAAK/I,EAAO4L,SAAS,SAASzN,EAAM8V,GACvC,IAAIoQ,GAAUpQ,EAAO9V,MAAQA,GAAM6G,cACnC,GAAwB,YAApBiP,EAAOkO,UAA0C,QAAhBlO,EAAOpX,KAAgB,CAC1DiD,EAAK3B,GAAQ,GACb,IAAIgkB,EAAWlO,EAAOoO,eAAiBpO,EAAO9V,KAAO,GACjDmmB,EAAU,IAAId,OAAO,IAAMrB,EAAW,OAAQ,KAClDrmB,EAAKiN,KAAKoN,EAAExX,SAAS,SAAUwlB,EAAGC,GAChC,IAAI1hB,EAASyhB,EAAE7e,MAAMgf,GACN,OAAX5hB,IACF5C,EAAK3B,GAAMuE,EAAO,IAAM0hB,WAGvB,GAAwB,WAApBnQ,EAAOkO,UAChB,QAAwBre,IAApBnF,EAAQ0lB,GAAuB,CACjC,IAAI7hB,EAAQyR,EAAOgQ,YACjBnoB,EAAKmH,OAAOI,OAAO1E,EAAQ0lB,IAC3B1lB,EAAQ0lB,GACVvkB,EAAK3B,GAAQ8V,EAAOO,OAAOhS,QAEA,eAApByR,EAAOkO,WAChBriB,EAAK3B,GAAQiL,SAAS+M,EAAE3W,WAAY,QAIxCX,EAAKiB,KAAOA,GAUZkjB,YAAaA,I,qBClJf,IAAI9iB,EAAM,EAAQ,QACdqkB,EAAgB,EAAQ,QACxBroB,EAAUgE,EAAIpE,KAAKI,QAUvBgE,EAAIsR,QAAQS,GAAK/V,EAAQgE,EAAIsR,QAAQC,cAAe,CAClDtV,YAAa,SAAYwD,EAASmZ,EAAazc,GAC7C6D,EAAIsR,QAAQC,cAAc1L,KAAKzJ,KAAMqD,GACrCrD,KAAKwc,YAAcA,EACnBzc,EAAUA,GAAW,GACrBC,KAAKkoB,eAAmD,kBAA3BnoB,EAAQmoB,gBAA+BnoB,EAAQmoB,eAC5EloB,KAAK4B,UAAY7B,EAAQ6B,UACzB5B,KAAKmoB,iBAAmBpoB,EAAQooB,kBAGlC5c,UAAW,mBAEXoO,iBAAkB,SAA0BC,EAAahQ,GACvD,IAAIwe,EAAWxkB,EAAIpE,KAAKoK,KAAKK,QAAQL,GAAMlF,QAAQ,iBAAkB,IAEjE1E,KAAKqoB,cACProB,KAAKsoB,mBAAmB1O,EAAawO,GAErCpoB,KAAKuoB,WAAW3O,EAAawO,GAG/BpoB,KAAKqD,QAAQhB,QAAuB,cAClCrC,KAAKwoB,cAAc5O,EAAawO,IAGpCG,WAAY,SAAoB3O,EAAawO,GAC3CpoB,KAAKqD,QAAQhB,QAAQ,cAAgB+lB,EACjCxO,EAAYO,eACdna,KAAKqD,QAAQhB,QAAQ,wBAA0BuX,EAAYO,eAI/DmO,mBAAoB,SAA4B1O,EAAawO,GAC3D,IAAIK,EAAazoB,KAAK0oB,iBAAiBN,GACnC1iB,EAAK,CACP,aAAc0iB,EACd,kBAAmBpoB,KAAKuL,UACxB,mBAAoBqO,EAAYM,YAAc,IAAMuO,EACpD,gBAAiBzoB,KAAKqD,QAAQhB,QA3ChB,qBA4Cd,sBAAuBrC,KAAK2oB,iBAG1B/O,EAAYO,eACdzU,EAAG,wBAA0BkU,EAAYO,cAGvCna,KAAKqD,QAAQhB,QAAQ,kBACvBqD,EAAG,gBAAkB1F,KAAKqD,QAAQhB,QAAQ,iBAExCrC,KAAKqD,QAAQhB,QAAQ,iBACvBqD,EAAG,eAAiB1F,KAAKqD,QAAQhB,QAAQ,gBAEvCrC,KAAKqD,QAAQhB,QAAQ,mBACvBqD,EAAG,iBAAmB1F,KAAKqD,QAAQhB,QAAQ,kBAI7CuB,EAAIpE,KAAKiN,KAAKhD,KAAKzJ,KAAMA,KAAKqD,QAAQhB,SAAS,SAAS0I,EAAK7E,GAC3D,GA/Dc,sBA+DV6E,GACA/K,KAAK4oB,iBAAiB7d,GAAM,CAC9B,IAAI8d,EAAW9d,EAAIrC,cAEqB,IAApCmgB,EAASrU,QAAQ,eACnB9O,EAAGmjB,GAAY3iB,EACyB,IAA/B2iB,EAASrU,QAAQ,YAC1B9O,EAAGqF,GAAO7E,OAKhB,IAAI4iB,EAAM9oB,KAAKqD,QAAQqD,KAAK8N,QAAQ,MAAQ,EAAI,IAAM,IACtDxU,KAAKqD,QAAQqD,MAAQoiB,EAAMllB,EAAIpE,KAAKoG,oBAAoBF,IAG1D8iB,cAAe,SAAuB5O,EAAawO,GACjD,IAAIpjB,EAAQ,GACRyjB,EAAazoB,KAAK0oB,iBAAiBN,GAKvC,OAJApjB,EAAMG,KAAKnF,KAAKuL,UAAY,eAC1BqO,EAAYM,YAAc,IAAMuO,GAClCzjB,EAAMG,KAAK,iBAAmBnF,KAAK2oB,iBACnC3jB,EAAMG,KAAK,aAAenF,KAAKsa,UAAUV,EAAawO,IAC/CpjB,EAAMI,KAAK,OAGpBkV,UAAW,SAAmBV,EAAawO,GACzC,IAAIrL,EAAakL,EAAcxL,cAC7B7C,EACAwO,EAAS5f,OAAO,EAAG,GACnBxI,KAAKqD,QAAQuR,OACb5U,KAAKwc,YACLxc,KAAKkoB,gBAEP,OAAOtkB,EAAIpE,KAAKgL,OAAOM,KAAKiS,EAAY/c,KAAKwa,aAAa4N,GAAW,QAGvE5N,aAAc,SAAsB4N,GAClC,IAAIpjB,EAAQ,GAKZ,OAJAA,EAAMG,KAAK,oBACXH,EAAMG,KAAKijB,GACXpjB,EAAMG,KAAKnF,KAAK0oB,iBAAiBN,IACjCpjB,EAAMG,KAAKnF,KAAK+oB,eAAe/oB,KAAKgpB,oBAC7BhkB,EAAMI,KAAK,OAGpB4jB,gBAAiB,WACf,IAAIhkB,EAAQ,GAAI4V,EAAW5a,KAAKqD,QAAQuX,WASxC,MARyB,OAArB5a,KAAKwc,aAAkD,SAA1Bxc,KAAKmoB,mBAA6BvN,EAAWhX,EAAIpE,KAAKuF,cAAc6V,IAErG5V,EAAMG,KAAKnF,KAAKqD,QAAQoX,QACxBzV,EAAMG,KAAKyV,GACX5V,EAAMG,KAAKnF,KAAKqD,QAAQgb,UACxBrZ,EAAMG,KAAKnF,KAAKipB,mBAAqB,MACrCjkB,EAAMG,KAAKnF,KAAK2oB,iBAChB3jB,EAAMG,KAAKnF,KAAKkpB,sBACTlkB,EAAMI,KAAK,OAGpB6jB,iBAAkB,WAChB,IAAI5mB,EAAU,GACduB,EAAIpE,KAAKiN,KAAKhD,KAAKzJ,KAAMA,KAAKqD,QAAQhB,SAAS,SAAU0I,EAAKvE,GAC5DnE,EAAQ8C,KAAK,CAAC4F,EAAKvE,OAErBnE,EAAQ4D,MAAK,SAAUkjB,EAAGC,GACxB,OAAOD,EAAE,GAAGzgB,cAAgB0gB,EAAE,GAAG1gB,eAAiB,EAAI,KAExD,IAAI1D,EAAQ,GAcZ,OAbApB,EAAIpE,KAAKyF,UAAUwE,KAAKzJ,KAAMqC,GAAS,SAAUmE,GAC/C,IAAIuE,EAAMvE,EAAK,GAAGkC,cAClB,GAAI1I,KAAK4oB,iBAAiB7d,GAAM,CAC9B,IAAI7E,EAAQM,EAAK,GACjB,GAAI,MAAON,GAAqE,mBAAnBA,EAAMrD,SACjE,MAAMe,EAAIpE,KAAKgB,MAAM,IAAIC,MAAM,UAAYsK,EAAM,2BAA4B,CAC3ErK,KAAM,kBAGVsE,EAAMG,KAAK4F,EAAM,IACf/K,KAAKqpB,sBAAsBnjB,EAAMrD,iBAGhCmC,EAAMI,KAAK,OAGpBikB,sBAAuB,SAA+BjpB,GACpD,OAAOA,EAAOsE,QAAQ,OAAQ,KAAKA,QAAQ,aAAc,KAG3DikB,cAAe,WACb,IAAI3iB,EAAO,GAKX,OAJApC,EAAIpE,KAAKiN,KAAKhD,KAAKzJ,KAAMA,KAAKqD,QAAQhB,SAAS,SAAU0I,GACvDA,EAAMA,EAAIrC,cACN1I,KAAK4oB,iBAAiB7d,IAAM/E,EAAKb,KAAK4F,MAErC/E,EAAKC,OAAOb,KAAK,MAG1BsjB,iBAAkB,SAA0BN,GAC1C,OAAOH,EAAc1L,YACnB6L,EAAS5f,OAAO,EAAG,GACnBxI,KAAKqD,QAAQuR,OACb5U,KAAKwc,cAITuM,eAAgB,SAAcvkB,GAC5B,OAAOZ,EAAIpE,KAAKgL,OAAOc,OAAO9G,EAAQ,QAGxC0kB,mBAAoB,WAClB,IAAI7lB,EAAUrD,KAAKqD,QACnB,OAAIrD,KAAKqoB,eAAsC,OAArBroB,KAAKwc,cAAyBnZ,EAAQnB,KACvD,mBACEmB,EAAQhB,QAAQ,wBAClBgB,EAAQhB,QAAQ,wBAEhBrC,KAAK+oB,eAAe/oB,KAAKqD,QAAQnB,MAAQ,KAIpDonB,kBAAmB,CACjB,gBACA,eACA,iBACA,aA3LgB,oBA6LhB,SACA,mBAGFV,iBAAkB,SAA0B7d,GAC1C,OAA4C,IAAxCA,EAAIrC,cAAc8L,QAAQ,WACvBxU,KAAKspB,kBAAkB9U,QAAQzJ,GAAO,GAG/Csd,YAAa,WACX,QAAOroB,KAAKqD,QAAQhB,QAvMJ,wBA+MpBtB,EAAOC,QAAU4C,EAAIsR,QAAQS,I,ilPCtN7B,EAAQ,QACR,IAAI/R,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAqB,WAAI,GACnCpS,EAAIghB,WAAa9O,EAAQI,cAAc,aAAc,CAAC,eACtDnQ,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAiDC,WACrEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIghB,Y,uBCjBrB,EAAQ,QACR,IAAIhhB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAA0B,gBAAI,GACxCpS,EAAI2hB,gBAAkBzP,EAAQI,cAAc,kBAAmB,CAAC,eAChEnQ,OAAO8H,eAAekI,EAAUC,SAA0B,gBAAG,aAAc,CACzElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA+CC,WACnEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI2hB,iB,uBCjBrB,IAUIgE,EAVO,EAAQ,QAAW/pB,KAUCI,QAAQ,CACrCC,YAAa,SAAqBqG,GAChClG,KAAKC,YAAc,cACnBD,KAAKkG,MAAQA,EAAMrD,YAMrB/B,OAAQ,WACN,OAAOd,KAAKwpB,YAMdA,SAAU,WACR,OAAO/J,OAAOzf,KAAKkG,QAOrBrD,SAAU,WACR,OAAO7C,KAAKkG,SAOhBnF,EAAOC,QAAUuoB,G,uBC1CjB,IAAI3lB,EAAM,EAAQ,QAElBA,EAAIpE,KAAK2L,OAAOvH,EAAIwe,IAAI5Y,UAAW,CAIjC6T,sBAAuB,SAA+Bha,GACpDA,EAAQqb,eAAe,eAAgB9a,EAAI+a,eAAe8K,MAAMC,eAChErmB,EAAQia,YAAY,eAAgBtd,KAAKsC,cAEf,iBAAtBe,EAAQzB,WACVyB,EAAQsmB,QAAQ,WAAY3pB,KAAK4pB,gCAOrCA,8BAA+B,SAAuCvoB,EAAKoO,GACzE,GAAIpO,EAAIe,OAAOynB,cAAgBxoB,EAAIyoB,YACjC,OAAOra,IAGTpO,EAAIe,OAASwB,EAAIpE,KAAK2I,KAAK9G,EAAIe,QAC/Bf,EAAIe,OAAO2nB,kBAAoB1oB,EAAIG,QAAQ8B,OAAOsR,OAElD,IAAItR,EAASM,EAAIpE,KAAK2I,KAAK9G,EAAIG,QAAQ8B,eAChCA,EAAOoX,SACdpX,EAAOsR,OAASvT,EAAIe,OAAO4nB,aAC3B,IACIC,EADM,IAAI5oB,EAAIG,QAAQ3B,YAAYyD,GACrBjC,EAAIO,WAAWP,EAAIe,QACpC6nB,EAAOH,aAAc,EACrBG,EAAOC,SAAQ,SAAS9gB,EAAK9D,GACvB8D,EAAKqG,EAAKrG,IAEZ/H,EAAIe,OAAOynB,aAAevkB,EAC1BmK,SAQNnN,aAAc,SAAsBC,GAElC,IAAIC,EAAeD,EAAKC,aACpBgB,GAAO,IAAII,EAAIumB,IAAIC,QAASxnB,MAAMJ,EAAaN,KAAKW,YAAc,IAClEW,EAAK6mB,OACP9nB,EAAK/B,MAAQoD,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CACvCC,KAAM8C,EAAK6mB,OAAO5pB,MAAMsC,KACxBpC,QAAS6C,EAAK6mB,OAAO5pB,MAAMwC,UAG7BV,EAAK/B,MAAQoD,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CACvCC,KAAM8B,EAAaU,WACnBvC,QAAS,OAGb4B,EAAK/B,MAAM+P,UAAY/M,EAAK8mB,WAAa,S,yjHC3D7C,IAAI1mB,EAAM,EAAQ,QACd2mB,EAAe,EAAQ,QAAUA,aACrC,EAAQ,QAKR3mB,EAAI4mB,UAAY5mB,EAAIpE,KAAKI,QAAQ,CAC/BoT,cAAe,SAAuB1R,EAAakR,EAAarJ,EAAUsJ,GACxE,IAAIpB,EAAOrR,KACP0a,EAAWpZ,EAAYoZ,SACvB+P,EAAU,IAAIF,EACdG,EAAOhQ,EAASiQ,SAAW,KAAOjQ,EAASkQ,SACzB,KAAlBlQ,EAASmQ,MAAiC,MAAlBnQ,EAASmQ,OACnCH,GAAQ,IAAMhQ,EAASmQ,MAEzBH,GAAQppB,EAAYoF,KAEpB,IAAIokB,EAAM,IAAIC,eAAkBC,GAAiB,EACjD1pB,EAAYsG,OAASkjB,EAErBA,EAAIG,iBAAiB,oBAAoB,WACvC,IACE,GAAmB,IAAfH,EAAII,OAAc,OACtB,MAAOxoB,GAAK,OAEV1C,KAAKmrB,YAAcnrB,KAAKorB,mBAAqBJ,IAC/CP,EAAQvnB,WAAa4nB,EAAII,OACzBT,EAAQpoB,QAAUgP,EAAKga,aAAaP,EAAIQ,yBACxCb,EAAQ1L,KACN,UACA0L,EAAQvnB,WACRunB,EAAQpoB,QACRyoB,EAAIS,YAENP,GAAiB,GAEfhrB,KAAKmrB,aAAenrB,KAAKwrB,MAC3Bna,EAAKoa,cAAcX,EAAKL,MAEzB,GACHK,EAAIY,OAAOT,iBAAiB,YAAY,SAAUU,GAChDlB,EAAQ1L,KAAK,eAAgB4M,MAE/Bb,EAAIG,iBAAiB,YAAY,SAAUU,GACzClB,EAAQ1L,KAAK,kBAAmB4M,MAC/B,GACHb,EAAIG,iBAAiB,WAAW,WAC9BxY,EAAY7O,EAAIpE,KAAKgB,MAAM,IAAIC,MAAM,WAAY,CAACC,KAAM,qBACvD,GACHoqB,EAAIG,iBAAiB,SAAS,WAC5BxY,EAAY7O,EAAIpE,KAAKgB,MAAM,IAAIC,MAAM,mBAAoB,CACvDC,KAAM,wBAEP,GACHoqB,EAAIG,iBAAiB,SAAS,WAC5BxY,EAAY7O,EAAIpE,KAAKgB,MAAM,IAAIC,MAAM,mBAAoB,CACvDC,KAAM,4BAEP,GAEHyI,EAASshB,GACTK,EAAIc,KAAKtqB,EAAYmZ,OAAQiQ,GAA+B,IAAzBlY,EAAYqZ,UAC/CjoB,EAAIpE,KAAKiN,KAAKnL,EAAYe,SAAS,SAAU0I,EAAK7E,GACpC,mBAAR6E,GAAoC,eAARA,GAAgC,SAARA,GACtD+f,EAAIgB,iBAAiB/gB,EAAK7E,MAI1BsM,EAAYuZ,UAAoC,IAAzBvZ,EAAYqZ,WACrCf,EAAIiB,QAAUvZ,EAAYuZ,SAGxBvZ,EAAYwZ,qBACdlB,EAAImB,iBAAkB,GAExB,IAAMnB,EAAIoB,aAAe,cAAiB,MAAOxpB,IAEjD,IACMpB,EAAYY,KACd4oB,EAAIqB,KAAK7qB,EAAYY,MAErB4oB,EAAIqB,OAEN,MAAO/iB,GACP,IAAI9H,EAAYY,MAA2C,iBAA5BZ,EAAYY,KAAK2E,OAG9C,MAAMuC,EAFN0hB,EAAIqB,KAAK7qB,EAAYY,KAAK2E,QAM9B,OAAO4jB,GAGTY,aAAc,SAAsBe,GAClC,IAAI/pB,EAAU,GAMd,OALAuB,EAAIpE,KAAKyF,UAAUmnB,EAAW3pB,MAAM,UAAU,SAAUqG,GACtD,IAAIiC,EAAMjC,EAAKrG,MAAM,IAAK,GAAG,GACzByD,EAAQ4C,EAAKujB,UAAUthB,EAAInK,OAAS,GACpCmK,EAAInK,OAAS,IAAGyB,EAAQ0I,EAAIrC,eAAiBxC,MAE5C7D,GAGTopB,cAAe,SAAuBX,EAAKL,GACzC,IAAI5jB,EACJ,GAAyB,gBAArBikB,EAAIoB,cAAkCpB,EAAI9L,SAAU,CACtD,IAAIsN,EAAKxB,EAAI9L,SACbnY,EAAS,IAAIjD,EAAIpE,KAAKyH,OAAOqlB,EAAGlkB,YAEhC,IADA,IAAImkB,EAAO,IAAIplB,WAAWmlB,GACjBzrB,EAAI,EAAGA,EAAIgG,EAAOjG,SAAUC,EACnCgG,EAAOhG,GAAK0rB,EAAK1rB,GAIrB,IACOgG,GAAsC,iBAArBikB,EAAI0B,eACxB3lB,EAAS,IAAIjD,EAAIpE,KAAKyH,OAAO6jB,EAAI0B,eAEnC,MAAO9pB,IAELmE,GAAQ4jB,EAAQ1L,KAAK,OAAQlY,GACjC4jB,EAAQ1L,KAAK,UAOjBnb,EAAI0O,WAAW9I,UAAY5F,EAAI4mB,UAAUhhB,UAKzC5F,EAAI0O,WAAWma,kBAAoB,G,mo9ICvInC,EAAQ,QACR,IAAI7oB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAoB,UAAI,GAClCpS,EAAI8d,UAAY5L,EAAQI,cAAc,YAAa,CAAC,eACpDnQ,OAAO8H,eAAekI,EAAUC,SAAoB,UAAG,aAAc,CACnElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAgDC,WACpEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI8d,W,uBCjBrB,EAAQ,QACR,IAAI9d,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAqB,WAAI,GACnCpS,EAAIuf,WAAarN,EAAQI,cAAc,aAAc,CAAC,eACtDnQ,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAkDC,WACtEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIuf,Y,osSCjBrB,IAAIvf,EAAM,EAAQ,QAElBA,EAAIpE,KAAK2L,OAAOvH,EAAIsf,OAAO1Z,UAAW,CAIpC6T,sBAAuB,SAA+Bha,GAC1B,WAAtBA,EAAQzB,WACVyB,EAAQia,YAAY,cAAe1Z,EAAIpE,KAAK4T,4B,g59ECRlD,EAAQ,QACR,IAAIxP,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAmB,SAAI,GACjCpS,EAAIif,SAAW/M,EAAQI,cAAc,WAAY,CAAC,eAClDnQ,OAAO8H,eAAekI,EAAUC,SAAmB,SAAG,aAAc,CAClElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA+CC,WACnEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIif,U,uBCjBrB,IAQI6J,EACAC,EATAC,EAAM,EAAQ,QACdC,EAAc,EAAQ,QAWtBC,EAAa,EACbC,EAAa,EA+FjBhsB,EAAOC,QA5FP,SAAYjB,EAASwH,EAAKW,GACxB,IAAIrH,EAAI0G,GAAOW,GAAU,EACrBkhB,EAAI7hB,GAAO,GAGXylB,GADJjtB,EAAUA,GAAW,IACFitB,MAAQN,EACvBO,OAAgCzlB,IAArBzH,EAAQktB,SAAyBltB,EAAQktB,SAAWN,EAKnE,GAAY,MAARK,GAA4B,MAAZC,EAAkB,CACpC,IAAIC,EAAYN,IACJ,MAARI,IAEFA,EAAON,EAAU,CACA,EAAfQ,EAAU,GACVA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,KAGtD,MAAZD,IAEFA,EAAWN,EAAiD,OAApCO,EAAU,IAAM,EAAIA,EAAU,KAQ1D,IAAIC,OAA0B3lB,IAAlBzH,EAAQotB,MAAsBptB,EAAQotB,OAAQ,IAAIpjB,MAAOC,UAIjEojB,OAA0B5lB,IAAlBzH,EAAQqtB,MAAsBrtB,EAAQqtB,MAAQL,EAAa,EAGnEM,EAAMF,EAAQL,GAAeM,EAAQL,GAAY,IAcrD,GAXIM,EAAK,QAA0B7lB,IAArBzH,EAAQktB,WACpBA,EAAWA,EAAW,EAAI,QAKvBI,EAAK,GAAKF,EAAQL,SAAiCtlB,IAAlBzH,EAAQqtB,QAC5CA,EAAQ,GAINA,GAAS,IACX,MAAM,IAAI3sB,MAAM,mDAGlBqsB,EAAaK,EACbJ,EAAaK,EACbT,EAAYM,EAMZ,IAAIK,GAA4B,KAAb,WAHnBH,GAAS,cAG+BC,GAAS,WACjDhE,EAAEvoB,KAAOysB,IAAO,GAAK,IACrBlE,EAAEvoB,KAAOysB,IAAO,GAAK,IACrBlE,EAAEvoB,KAAOysB,IAAO,EAAI,IACpBlE,EAAEvoB,KAAY,IAALysB,EAGT,IAAIC,EAAOJ,EAAQ,WAAc,IAAS,UAC1C/D,EAAEvoB,KAAO0sB,IAAQ,EAAI,IACrBnE,EAAEvoB,KAAa,IAAN0sB,EAGTnE,EAAEvoB,KAAO0sB,IAAQ,GAAK,GAAM,GAC5BnE,EAAEvoB,KAAO0sB,IAAQ,GAAK,IAGtBnE,EAAEvoB,KAAOosB,IAAa,EAAI,IAG1B7D,EAAEvoB,KAAkB,IAAXosB,EAGT,IAAK,IAAIO,EAAI,EAAGA,EAAI,IAAKA,EACvBpE,EAAEvoB,EAAI2sB,GAAKR,EAAKQ,GAGlB,OAAOjmB,GAAYslB,EAAYzD,K,uBCzGjC,EAAQ,QACR,IAAIxlB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAA4B,kBAAI,GAC1CpS,EAAIkhB,kBAAoBhP,EAAQI,cAAc,oBAAqB,CAAC,eACpEnQ,OAAO8H,eAAekI,EAAUC,SAA4B,kBAAG,aAAc,CAC3ElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA0DC,WAC9EF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIkhB,mB,qmCCjBrB,IAAI2I,EAAsB,EAAQ,QAAyCA,oBACvEC,EAAa,EAAQ,QAAiBA,WAiB1C3sB,EAAOC,QAAU,CACb2sB,kBAhBJ,SAA2BzrB,EAAMyB,EAAQwS,GAKrC,IAJA,IAAIyX,EAAgBH,EAAoBvrB,GAEpC2rB,EAAS,GAEJhtB,EAAI,EAAGA,EAAI+sB,EAAchtB,OAAQC,IACtCgtB,EAAO1oB,KAAKuoB,EAAW/pB,EAAQiqB,EAAc/sB,GAAIsV,IAGrD,OAAO0X,K,ukICZX,IAAIjqB,EAAM,EAAQ,QACdhE,EAAUgE,EAAIpE,KAAKI,QAKvBgE,EAAIsR,QAAQQ,GAAK9V,EAAQgE,EAAIsR,QAAQC,cAAe,CAClDwE,iBAAkB,SAA0BC,EAAahQ,GAEvD,IAAIwe,EAAWxkB,EAAIpE,KAAKoK,KAAKO,OAAOP,GAEpC5J,KAAKqD,QAAQhB,QAAQ,cAAgB+lB,EAEjCxO,EAAYO,eACdna,KAAKqD,QAAQhB,QAAQ,wBAA0BuX,EAAYO,cAG7Dna,KAAKqD,QAAQhB,QAAQ,wBACnBrC,KAAKwoB,cAAc5O,EAAawO,IAIpCI,cAAe,SAAuB5O,GACpC,MAAO,uBACeA,EAAYM,YAD3B,uCAGcla,KAAK2oB,gBAHnB,cAIU3oB,KAAKsa,UAAUV,IAGlC+O,cAAe,WACb,IAAItmB,EAAU,GAId,OAHAuB,EAAIpE,KAAKyF,UAAUjF,KAAK8tB,iBAAiB,SAAkBC,GACzD1rB,EAAQ8C,KAAK4oB,EAAErlB,kBAEVrG,EAAQ4D,OAAOb,KAAK,MAG7B6jB,iBAAkB,WAChB,IAAI5mB,EAAUrC,KAAKqD,QAAQhB,QACvB2C,EAAQ,GAIZ,OAHApB,EAAIpE,KAAKyF,UAAUjF,KAAK8tB,iBAAiB,SAAkBC,GACzD/oB,EAAMG,KAAK4oB,EAAErlB,cAAc+U,OAAS,IAAMzP,OAAO3L,EAAQ0rB,IAAItQ,WAExDzY,EAAMiB,OAAOb,KAAK,MAAQ,MAGnC0oB,cAAe,WACb,IAAIzrB,EAAU,GAMd,OALAuB,EAAIpE,KAAKiN,KAAKzM,KAAKqD,QAAQhB,SAAS,SAAkBwlB,IAC1C,SAANA,GAAsB,qBAANA,GAA4BA,EAAE7e,MAAM,aACtD3G,EAAQ8C,KAAK0iB,MAGVxlB,GAGTiY,UAAW,SAAmBV,GAC5B,OAAOhW,EAAIpE,KAAKgL,OAAOM,KAAK8O,EAAYW,gBAAiBva,KAAKwa,eAAgB,WAGhFA,aAAc,WACZ,IAAIxV,EAAQ,GAMZ,OALAA,EAAMG,KAAKnF,KAAKqD,QAAQoX,QACxBzV,EAAMG,KAAK,KACXH,EAAMG,KAAK,IACXH,EAAMG,KAAKnF,KAAKipB,oBAChBjkB,EAAMG,KAAKnF,KAAKqD,QAAQnB,MACjB0B,EAAIpE,KAAKgL,OAAOc,OAAOtG,EAAMI,KAAK,UAQ7CrE,EAAOC,QAAU4C,EAAIsR,QAAQQ,I,uBC5E7B,EAAQ,QACR,IAAI9R,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAyB,eAAI,GACvCpS,EAAIohB,eAAiBlP,EAAQI,cAAc,iBAAkB,CAAC,eAC9DnQ,OAAO8H,eAAekI,EAAUC,SAAyB,eAAG,aAAc,CACxElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAsDC,WAC1EF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIohB,gB,qweCjBrB,EAAQ,QACR,IAAIphB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAmB,SAAI,GACjCpS,EAAIyd,SAAWvL,EAAQI,cAAc,WAAY,CAAC,eAClDnQ,OAAO8H,eAAekI,EAAUC,SAAmB,SAAG,aAAc,CAClElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA+CC,WACnEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIyd,U,khdCjBrB,IAAIzd,EAAM,EAAQ,QAElBA,EAAIpE,KAAK2L,OAAOvH,EAAIkX,WAAWtR,UAAW,CAMxCwkB,gBAAiB,SAAyB3sB,GACxC,IAAIC,EAAcD,EAAIC,YACjBA,EAAYe,QAAQ4rB,SACvB3sB,EAAYe,QAAgB,OAAI,qBAOpCgb,sBAAuB,SAA+Bha,IACpDA,EAAQia,YAAY,QAAStd,KAAKguB,iBACR,cAAtB3qB,EAAQzB,aAEgB,aADbyB,EAAQjB,QAAU,IACpB8rB,YACT7qB,EAAQia,YAAY,cAAe1Z,EAAIpE,KAAK4T,6B,2ptCCvBpD,IAAIxP,EAAM,EAAQ,QACdhE,EAAUgE,EAAIpE,KAAKI,QAgCvBgE,EAAIyb,SAAWzf,EAAQ,CASrBC,YAAa,SAAkB6a,EAAUpX,GAGvC,GAFAM,EAAIpE,KAAKgP,eAAexO,KAAM,CAAC,UAAW,OAAQ,OAAQ,SAAU,UAEhE,MAAO0a,EACT,MAAM,IAAIja,MAAM,qBAAuBia,GAClC,GAAwB,iBAAbA,EAChB,OAAO9W,EAAIpE,KAAK2I,KAAKuS,GAGlBA,EAAS1R,MAAM,WAGlB0R,IAFapX,QAAgCkE,IAAtBlE,EAAO6qB,WAC5B7qB,EAAO6qB,WAAavqB,EAAIN,OAAO6qB,YACZ,QAAU,QAAU,MAAQzT,GAGnD9W,EAAIpE,KAAK2L,OAAOnL,KAAM4D,EAAIpE,KAAK6F,SAASqV,IAGpC1a,KAAK6qB,KACP7qB,KAAK6qB,KAAO/d,SAAS9M,KAAK6qB,KAAM,IAEhC7qB,KAAK6qB,KAAyB,WAAlB7qB,KAAK2qB,SAAwB,IAAM,MA0BrD/mB,EAAIwqB,YAAcxuB,EAAQ,CAKxBC,YAAa,SAAqB6a,EAAU9F,GAC1C8F,EAAW,IAAI9W,EAAIyb,SAAS3E,GAC5B1a,KAAKya,OAAS,OACdza,KAAK0G,KAAOgU,EAAShU,MAAQ,IAC7B1G,KAAKqC,QAAU,GACfrC,KAAKkC,KAAO,GACZlC,KAAK0a,SAAWA,EAChB1a,KAAK4U,OAASA,EACd5U,KAAKquB,WAAa,GAClBruB,KAAKsuB,gBAMPA,aAAc,WACZtuB,KAAKquB,WAAaruB,KAAKqC,QAAQrC,KAAKuuB,0BAA4B3qB,EAAIpE,KAAKyE,aAG3EsqB,uBAAwB,WAEtB,OADa3qB,EAAIpE,KAAKuE,YAAc,SAAW,IAC/B,cAMlByqB,kBAAmB,SAA2BC,GAChB,iBAAjBA,GAA6BA,IACtCzuB,KAAKquB,YAAc,IAAMI,GAE3BzuB,KAAKqC,QAAQrC,KAAKuuB,0BAA4BvuB,KAAKquB,YAMrDK,aAAc,WACZ,OAAO1uB,KAAKquB,YAOdzT,SAAU,WACR,OAAO5a,KAAK0G,KAAKjE,MAAM,IAAK,GAAG,IAMjC4b,OAAQ,WACN,IAAIsQ,EAAQ3uB,KAAK0G,KAAKjE,MAAM,IAAK,GAAG,GACpC,OAAIksB,GACFA,EAAQ/qB,EAAIpE,KAAKiG,iBAAiBkpB,GAC3B/qB,EAAIpE,KAAKoG,oBAAoB+oB,IAE/B,IAOTC,eAAgB,SAAwBC,GACtC,IAAIC,EAAc,IAAIlrB,EAAIyb,SAASwP,GACnC7uB,KAAK0a,SAAWoU,EAChB9uB,KAAK0G,KAAOooB,EAAYpoB,MAAQ,IAC5B1G,KAAKqC,QAAc,OACrBrC,KAAKqC,QAAc,KAAIysB,EAAYnU,SAsBzC/W,EAAImrB,aAAenvB,EAAQ,CAKzBC,YAAa,WACXG,KAAKkD,gBAAasE,EAClBxH,KAAKqC,QAAU,GACfrC,KAAKkC,UAAOsF,EACZxH,KAAKgvB,WAAY,EACjBhvB,KAAK4H,OAAS,MAwBhBqnB,uBAAwB,WAEtB,OADAjvB,KAAKgvB,WAAY,EACVhvB,KAAK4H,UAKhBhE,EAAI0O,WAAa1S,EAAQ,IAKzBgE,EAAI0O,WAAWC,YAAc,WAI3B,YAHuB/K,IAAnBxH,KAAKkvB,YACPlvB,KAAKkvB,UAAY,IAAIlvB,MAEhBA,KAAKkvB,Y,uBC5Od,EAAQ,QACR,IAAItrB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAwB,cAAI,GACtCpS,EAAIqe,cAAgBnM,EAAQI,cAAc,gBAAiB,CAAC,eAC5DnQ,OAAO8H,eAAekI,EAAUC,SAAwB,cAAG,aAAc,CACvElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA6CC,WACjEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIqe,e,qBCjBrB,EAAQ,QACR,IAAIre,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAyB,eAAI,GACvCpS,EAAI6d,eAAiB3L,EAAQI,cAAc,iBAAkB,CAAC,eAC9DnQ,OAAO8H,eAAekI,EAAUC,SAAyB,eAAG,aAAc,CACxElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA2CC,WAC/DF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI6d,gB,4xICdrB,IAAI7d,EAAM,CAAEpE,KAAM,EAAQ,UAOZ,IAAYqD,WAK1B9B,EAAOC,QAAU4C,EAEjBA,EAAIpE,KAAK2L,OAAOvH,EAAK,CAKnBU,QAAS,UAKT4Q,QAAS,GAKTia,SAAU,CACRC,KAAM,EAAQ,QACd3F,MAAO,EAAQ,QACf4F,KAAM,EAAQ,QACdC,SAAU,EAAQ,QAClBC,QAAS,EAAQ,SAMnBpF,IAAK,CACHqF,QAAS,EAAQ,QACjBpF,OAAQ,MAMVznB,KAAM,CACJ6sB,QAAS,EAAQ,QACjBpF,OAAQ,EAAQ,SAMlBqF,MAAO,CACLC,IAAK,EAAQ,QACbC,UAAW,EAAQ,QACnBrZ,MAAO,EAAQ,QACfsZ,UAAW,EAAQ,QACnBC,eAAgB,EAAQ,SAM1B9Z,UAAW,EAAQ,QAKnBiF,cAAe,EAAQ,QAA4BA,gBAErD,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QAiBRpX,EAAIiqB,OAAS,IAAIjqB,EAAIksB,mBAGrBlsB,EAAIpE,KAAKuP,iBAAiBnL,EAAK,iBAAiB,WAC9C,OAAO,IAAIA,EAAIoX,cAAcpX,EAAIN,OAAOysB,sBACvC,I,0hOClGHhvB,EAAOC,QAAU,CACbgvB,cARJ,SAAuB9pB,GACnB,OAAOA,EAAMxB,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,W,uBCJ5E,EAAQ,QAER,IAAId,EAAM,EAAQ,QAEI,oBAAX+U,SAAwBA,OAAO/U,IAAMA,GAK5C7C,EAAOC,QAAU4C,EAED,oBAATyN,OAAsBA,KAAKzN,IAAMA,GAO5C,EAAQ,S,4oCClBR,IAAIA,EAAM,EAAQ,QACdhE,EAAUgE,EAAIpE,KAAKI,QAKvBgE,EAAIsR,QAAQU,GAAKhW,EAAQgE,EAAIsR,QAAQC,cAAe,CAKlD8a,aAAc,CACZ,IAAO,EACP,WAAc,EACd,UAAa,EACb,KAAQ,EACR,UAAa,EACb,OAAU,EACV,UAAa,EACb,SAAY,EACZ,QAAW,EACX,QAAW,EACX,aAAgB,EAChB,WAAc,EACd,OAAU,EACV,eAAkB,EAClB,YAAe,EACf,QAAW,EACX,QAAW,EACX,QAAW,EACX,SAAY,EACZ,QAAW,EACX,UAAa,EACb,WAAc,EACd,SAAY,EACZ,QAAW,GAKbC,gBAAiB,CACf,wBAAyB,EACzB,4BAA6B,EAC7B,mBAAoB,EACpB,yBAA0B,EAC1B,+BAAgC,EAChC,4BAA6B,GAG/BvW,iBAAkB,SAA0BC,EAAahQ,GAClD5J,KAAKqD,QAAQhB,QAAQ,uBACxBrC,KAAKqD,QAAQhB,QAAQ,cAAgBuB,EAAIpE,KAAKoK,KAAKO,OAAOP,IAGxDgQ,EAAYO,eAEdna,KAAKqD,QAAQhB,QAAQ,wBAA0BuX,EAAYO,cAG7D,IAAIG,EAAYta,KAAKwe,KAAK5E,EAAYW,gBAAiBva,KAAKwa,gBACxD8D,EAAO,OAAS1E,EAAYM,YAAc,IAAMI,EAEpDta,KAAKqD,QAAQhB,QAAuB,cAAIic,GAG1C9D,aAAc,WACZ,IAAIX,EAAI7Z,KAAKqD,QAET2B,EAAQ,GACZA,EAAMG,KAAK0U,EAAEY,QACbzV,EAAMG,KAAK0U,EAAExX,QAAQ,gBAAkB,IACvC2C,EAAMG,KAAK0U,EAAExX,QAAQ,iBAAmB,IAKxC2C,EAAMG,KAAK0U,EAAExX,QAAQ,sBAAwB,IAE7C,IAAIA,EAAUrC,KAAKmwB,0BAInB,OAHI9tB,GAAS2C,EAAMG,KAAK9C,GACxB2C,EAAMG,KAAKnF,KAAKowB,yBAETprB,EAAMI,KAAK,OAIpB+qB,wBAAyB,WAEvB,IAAIE,EAAa,GAEjBzsB,EAAIpE,KAAKiN,KAAKzM,KAAKqD,QAAQhB,SAAS,SAAUR,GACxCA,EAAKmH,MAAM,aACbqnB,EAAWlrB,KAAKtD,MAGpBwuB,EAAWpqB,MAAK,SAAUkjB,EAAGC,GAC3B,OAAOD,EAAEzgB,cAAgB0gB,EAAE1gB,eAAiB,EAAI,KAGlD,IAAI1D,EAAQ,GAKZ,OAJApB,EAAIpE,KAAKyF,UAAUwE,KAAKzJ,KAAMqwB,GAAY,SAAUxuB,GAClDmD,EAAMG,KAAKtD,EAAK6G,cAAgB,IAAMsF,OAAOhO,KAAKqD,QAAQhB,QAAQR,QAG7DmD,EAAMI,KAAK,OAIpBgrB,sBAAuB,WAErB,IAAIvW,EAAI7Z,KAAKqD,QAET2B,EAAQ6U,EAAEnT,KAAKjE,MAAM,KACrBiE,EAAO1B,EAAM,GACbW,EAAcX,EAAM,GAEpB8P,EAAW,GAOf,GALI+E,EAAEyW,sBACJxb,GAAY,IAAM+E,EAAEyW,qBAEtBxb,GAAYpO,EAERf,EAAa,CAGf,IAAI4qB,EAAY,GAEhB3sB,EAAIpE,KAAKyF,UAAUwE,KAAKzJ,KAAM2F,EAAYlD,MAAM,MAAM,SAAU+tB,GAC9D,IAAI3uB,EAAO2uB,EAAM/tB,MAAM,KAAK,GACxByD,EAAQsqB,EAAM/tB,MAAM,KAAK,GAC7B,GAAIzC,KAAKiwB,aAAapuB,IAAS7B,KAAKkwB,gBAAgBruB,GAAO,CACzD,IAAI4uB,EAAc,CAAE5uB,KAAMA,QACZ2F,IAAVtB,IACElG,KAAKiwB,aAAapuB,GACpB4uB,EAAYvqB,MAAQA,EAEpBuqB,EAAYvqB,MAAQwqB,mBAAmBxqB,IAG3CqqB,EAAUprB,KAAKsrB,OAInBF,EAAUtqB,MAAK,SAAUkjB,EAAGC,GAAK,OAAOD,EAAEtnB,KAAOunB,EAAEvnB,MAAQ,EAAI,KAE3D0uB,EAAU3vB,SAEZ+E,EAAc,GACd/B,EAAIpE,KAAKyF,UAAUsrB,GAAW,SAAUI,QACpBnpB,IAAdmpB,EAAIzqB,MACNP,EAAYR,KAAKwrB,EAAI9uB,MAErB8D,EAAYR,KAAKwrB,EAAI9uB,KAAO,IAAM8uB,EAAIzqB,UAI1C4O,GAAY,IAAMnP,EAAYP,KAAK,MAKvC,OAAO0P,GAIT0J,KAAM,SAAcoS,EAAQpsB,GAC1B,OAAOZ,EAAIpE,KAAKgL,OAAOM,KAAK8lB,EAAQpsB,EAAQ,SAAU,WAO1DzD,EAAOC,QAAU4C,EAAIsR,QAAQU,I,uBC9K7B,IAAIhS,EAAM,EAAQ,QACdwgB,EAAM,EAAQ,QAmClBxgB,EAAIitB,qBAAuBjtB,EAAIpE,KAAKI,QAAQgE,EAAIktB,YAAa,CAuB3DjxB,YAAa,SAA8BuC,EAAQ2uB,GACjDntB,EAAIktB,YAAYrnB,KAAKzJ,MACrBA,KAAKgxB,sBAAsBD,GAC3B/wB,KAAKixB,SAAU,EAEfjxB,KAAKoC,OAASA,GAAU,GACpBpC,KAAKoC,OAAO8uB,UACdlxB,KAAKoC,OAAO+uB,gBACVnxB,KAAKoC,OAAO+uB,iBAAmB,0BAiBrCC,QAAS,SAAkBjoB,GACzBnJ,KAAKqxB,gBAAgBloB,GAAYvF,EAAIpE,KAAKyJ,GAAGE,WAM/CmoB,KAAM,SAAenoB,GACnB,IAAIkI,EAAOrR,KACXqR,EAAKkgB,gBACLlgB,EAAK0f,kBAAkBjiB,KAAI,WACzBuC,EAAK7P,QAAQ8B,OAAOsW,YAAcvI,EAAK0f,mBACvB1f,EAAKjP,OAAO8uB,QAC1B7f,EAAK7P,QAAQgwB,WAAangB,EAAK7P,QAAQiwB,iBAC/BhoB,KAAK4H,EAAK7P,SAAS,SAAU4H,EAAK5F,GACrC4F,GACHiI,EAAK7P,QAAQkwB,gBAAgBluB,EAAM6N,GAErClI,EAASC,UAQf4nB,sBAAuB,SAAgCD,GAErD,IADA/wB,KAAK+wB,kBAAoBA,GAAqBntB,EAAIN,OAAOsW,YAClD5Z,KAAK+wB,kBAAkBA,mBAC5B/wB,KAAK+wB,kBAAoB/wB,KAAK+wB,kBAAkBA,kBAGR,mBAA/B/wB,KAAK+wB,kBAAkBjiB,MAChC9O,KAAK+wB,kBAAoB,IAAIntB,EAAIktB,YAAY9wB,KAAK+wB,qBAOtDQ,cAAe,WACbvxB,KAAKwB,QAAUxB,KAAKwB,SAAW,IAAI4iB,EAAI,CAAChiB,OAAQpC,KAAKoC,a,uBC7HzD,EAAQ,QACR,IAAIwB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAyB,eAAI,GACvCpS,EAAI+gB,eAAiB7O,EAAQI,cAAc,iBAAkB,CAAC,eAC9DnQ,OAAO8H,eAAekI,EAAUC,SAAyB,eAAG,aAAc,CACxElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAsDC,WAC1EF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI+gB,gB,kvTCjBrB,EAAQ,QACR,IAAI/gB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAe,KAAI,GAC7BpS,EAAIygB,KAAOvO,EAAQI,cAAc,OAAQ,CAAC,eAC1CnQ,OAAO8H,eAAekI,EAAUC,SAAe,KAAG,aAAc,CAC9DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA2CC,WAC/DF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIygB,M,281BCjBrB,IAAI1V,EAAW,EAAQ,QAAWA,SAalC5N,EAAOC,QAXP,SAAmBa,EAAM8vB,GACvBhjB,EAAS3O,KAAM,aAAc2xB,EAAUC,aACvCjjB,EAAS3O,KAAM,WAAY2xB,EAAUE,WACrCljB,EAAS3O,KAAM,cAAe2xB,EAAUG,cACxCnjB,EAAS3O,KAAM,cAAe2xB,EAAUI,cACxCpjB,EAAS3O,KAAM,YAAa2xB,EAAUK,c,uBCPxC,IAAIjjB,EAAmB,EAAQ,QAAWA,iBAE1C,SAASkjB,EAAQpwB,EAAMqE,EAAOgsB,EAASC,GACrCpjB,EAAiB/O,KAAMmyB,EAAOtwB,IAAO,WACnC,OAAOqwB,EAAQrwB,EAAMqE,MAmBzBnF,EAAOC,QAfP,SAAoBoxB,EAAUryB,EAASmyB,EAASC,EAAQhpB,GAItD,IAAK,IAAIkM,KAHT8c,EAASA,GAAUnkB,OAGJokB,EACTrsB,OAAOyD,UAAUmD,eAAelD,KAAK2oB,EAAU/c,KACjD4c,EAAQxoB,KAJDzJ,KAIYqV,EAAI+c,EAAS/c,GAAK6c,EAASC,GAC1ChpB,GAAUA,EAASkM,EAAI+c,EAAS/c,O,uBCf1C,IAAIzR,EAAM,EAAQ,QAKlBA,EAAIyuB,eAAiBzuB,EAAIpE,KAAKI,QAAQ,CAmBpCC,YAAa,SAAwByyB,IAChB,IAAfA,QAAsC9qB,IAAf8qB,IACzBA,EAAa,CAAC,KAAO,IAEvBtyB,KAAKsyB,WAAaA,GAGpBnyB,SAAU,SAAkBsD,EAAOrB,EAAQmwB,GAIzC,GAHAvyB,KAAKwyB,OAAS,GACdxyB,KAAKyyB,eAAehvB,EAAOrB,GAAU,GAAImwB,GAAW,UAEhDvyB,KAAKwyB,OAAO5xB,OAAS,EAAG,CAC1B,IAAI8xB,EAAM1yB,KAAKwyB,OAAOptB,KAAK,QAG3B,MAFAstB,EAAM,cAAgB1yB,KAAKwyB,OAAO5xB,OAChC,0BAA4B8xB,EACxB9uB,EAAIpE,KAAKgB,MAAM,IAAIC,MAAMiyB,GAC7B,CAAChyB,KAAM,2BAA4B8xB,OAAQxyB,KAAKwyB,SAC7C,GAA2B,IAAvBxyB,KAAKwyB,OAAO5xB,OACrB,MAAMZ,KAAKwyB,OAAO,GAElB,OAAO,GAIXG,KAAM,SAAcjyB,EAAMC,GACxBX,KAAKwyB,OAAOrtB,KAAKvB,EAAIpE,KAAKgB,MAAM,IAAIC,MAAME,GAAU,CAACD,KAAMA,MAG7DkyB,kBAAmB,SAA2BnvB,EAAOrB,EAAQmwB,GAG3D,IAAIM,EAFJ7yB,KAAK8yB,aAAa1wB,EAAQmwB,EAAS,CAAC,UAAW,aAG/C,IAAK,IAAI1xB,EAAI,EAAG4C,EAAMsvB,UAAYlyB,EAAI4C,EAAMsvB,SAASnyB,OAAQC,IAAK,CAEhE,IAAIqF,EAAQ9D,EADZywB,EAAYpvB,EAAMsvB,SAASlyB,IAEvBqF,SACFlG,KAAK2yB,KAAK,2BACR,yBAA4BE,EAAY,QAAWN,GAKzD,IAAKM,KAAazwB,EAChB,GAAK2D,OAAOyD,UAAUmD,eAAelD,KAAKrH,EAAQywB,GAAlD,CAEA,IAAI7L,EAAa5kB,EAAOywB,GACpBxa,EAAc5U,EAAM6L,QAAQujB,GAEhC,QAAoBrrB,IAAhB6Q,EAA2B,CAC7B,IAAI2a,EAAgB,CAACT,EAASM,GAAWztB,KAAK,KAC9CpF,KAAKyyB,eAAepa,EAAa2O,EAAYgM,QAE7ChzB,KAAK2yB,KAAK,sBACR,mBAAsBE,EAAY,cAAiBN,GAIzD,OAAO,GAGTE,eAAgB,SAAwBhvB,EAAO+sB,EAAO+B,GACpD,OAAQ9uB,EAAMlD,MACZ,IAAK,YACH,OAAOP,KAAK4yB,kBAAkBnvB,EAAO+sB,EAAO+B,GAC9C,IAAK,OACH,OAAOvyB,KAAKizB,aAAaxvB,EAAO+sB,EAAO+B,GACzC,IAAK,MACH,OAAOvyB,KAAKkzB,YAAYzvB,EAAO+sB,EAAO+B,GACxC,QACE,OAAOvyB,KAAKmzB,eAAe1vB,EAAO+sB,EAAO+B,KAI/CU,aAAc,SAAsBxvB,EAAOrB,EAAQmwB,GACjD,GAAIvyB,KAAK8yB,aAAa1wB,EAAQmwB,EAAS,CAAClsB,QAAS,CAC/CrG,KAAKozB,cAAc3vB,EAAOrB,EAAOxB,OAAQ2xB,EAAS,qBAElD,IAAK,IAAI1xB,EAAI,EAAGA,EAAIuB,EAAOxB,OAAQC,IACjCb,KAAKyyB,eAAehvB,EAAMkU,OAAQvV,EAAOvB,GAAI0xB,EAAU,IAAM1xB,EAAI,OAKvEqyB,YAAa,SAAqBzvB,EAAOrB,EAAQmwB,GAC/C,GAAIvyB,KAAK8yB,aAAa1wB,EAAQmwB,EAAS,CAAC,UAAW,OAAQ,CAEzD,IAAIc,EAAW,EACf,IAAK,IAAI7C,KAASpuB,EACX2D,OAAOyD,UAAUmD,eAAelD,KAAKrH,EAAQouB,KAElDxwB,KAAKyyB,eAAehvB,EAAMsH,IAAKylB,EACX+B,EAAU,SAAY/B,EAAQ,MAClDxwB,KAAKyyB,eAAehvB,EAAMyC,MAAO9D,EAAOouB,GACpB+B,EAAU,KAAQ/B,EAAQ,MAC9C6C,KAEFrzB,KAAKozB,cAAc3vB,EAAO4vB,EAAUd,EAAS,sBAIjDY,eAAgB,SAAwB1vB,EAAOyC,EAAOqsB,GACpD,OAAQ9uB,EAAMlD,MACZ,KAAK,KACL,UAAKiH,EACL,IAAK,SACH,OAAOxH,KAAKszB,eAAe7vB,EAAOyC,EAAOqsB,GAC3C,IAAK,SACL,IAAK,SACH,OAAOvyB,KAAKuzB,gBAAgBrtB,EAAOqsB,GACrC,IAAK,UACL,IAAK,QACH,OAAOvyB,KAAKwzB,eAAe/vB,EAAOyC,EAAOqsB,GAC3C,IAAK,UACH,OAAOvyB,KAAK8yB,aAAa5sB,EAAOqsB,EAAS,CAAC,YAC5C,IAAK,YACH,OAAOvyB,KAAK8yB,aAAa5sB,EAAOqsB,EAAS,CAACxoB,KACxC,iDAAkD,UAClD,qDACJ,QACE,OAAO/J,KAAK2yB,KAAK,aAAc,kBACdlvB,EAAMlD,KAAO,QAAUgyB,KAI9Ce,eAAgB,SAAwB7vB,EAAOyC,EAAOqsB,GACpD,IAAIkB,EAAa,CAAC,UACdhwB,EAAMkkB,cACR8L,EAAaA,EAAWpzB,OAAO,CAAC,SAAU,SAAU,aAExC,OAAV6F,GAAkBlG,KAAK8yB,aAAa5sB,EAAOqsB,EAASkB,KACtDzzB,KAAK0zB,aAAajwB,EAAOyC,EAAOqsB,GAChCvyB,KAAKozB,cAAc3vB,EAAOyC,EAAMtF,OAAQ2xB,EAAS,iBACjDvyB,KAAK2zB,gBAAgBlwB,EAAOyC,EAAOqsB,GACnCvyB,KAAK4zB,YAAYnwB,EAAOyC,EAAOqsB,KAInCqB,YAAa,SAAqBnwB,EAAOyC,EAAOqsB,GACpB,QAAtB9uB,EAAgB,UACG,IAAjByC,EAAMtF,QACRZ,KAAK2yB,KAAK,oBAAqB,0DACVzsB,EAAO,SAAWqsB,IAK7CoB,gBAAiB,SAAyBlwB,EAAOyC,EAAOqsB,GAClDvyB,KAAKsyB,WAAoB,cAA0B9qB,IAArB/D,EAAe,UAC1C,IAAKyjB,OAAOzjB,EAAe,SAAIowB,KAAK3tB,IACvClG,KAAK2yB,KAAK,oBAAqB,mBAAqBzsB,EAArB,mCACQzC,EAAe,QAAI,SACtD8uB,KAKVa,cAAe,SAAuB3vB,EAAOyC,EAAOqsB,EAASuB,GACvD9zB,KAAKsyB,WAAgB,UACF9qB,IAAjB/D,EAAW,KAAmByC,EAAQzC,EAAW,KACnDzD,KAAK2yB,KAAK,gBAAiB,YAAcmB,EAAa,OAClDrwB,EAAW,IAAI,eAAiByC,EAAQ,QAAUqsB,GAGtDvyB,KAAKsyB,WAAgB,UACF9qB,IAAjB/D,EAAW,KAAmByC,EAAQzC,EAAW,KACnDzD,KAAK2yB,KAAK,gBAAiB,YAAcmB,EAAa,OAClDrwB,EAAW,IAAI,eAAiByC,EAAQ,QAAUqsB,IAK5DmB,aAAc,SAAuBjwB,EAAOyC,EAAOqsB,GAC7CvyB,KAAKsyB,WAAiB,WAAuB9qB,IAAlB/D,EAAY,OAEH,IAAlCA,EAAY,KAAE+Q,QAAQtO,IACxBlG,KAAK2yB,KAAK,YAAa,yBAA2BzsB,EAA3B,kBACLzC,EAAY,KAAE2B,KAAK,KAAO,QAAUmtB,IAK5DO,aAAc,SAAsB5sB,EAAOqsB,EAASwB,EAAexzB,GAGjE,GAAI2F,QAAuC,OAAO,EAGlD,IADA,IAAI8tB,GAAmB,EACdnzB,EAAI,EAAGA,EAAIkzB,EAAcnzB,OAAQC,IAAK,CAC7C,GAAgC,iBAArBkzB,EAAclzB,IACvB,UAAWqF,IAAU6tB,EAAclzB,GAAI,OAAO,OACzC,GAAIkzB,EAAclzB,aAAcqmB,QACrC,IAAKhhB,GAAS,IAAIrD,WAAWmG,MAAM+qB,EAAclzB,IAAK,OAAO,MACxD,CACL,GAAIqF,aAAiB6tB,EAAclzB,GAAI,OAAO,EAC9C,GAAI+C,EAAIpE,KAAKgO,OAAOtH,EAAO6tB,EAAclzB,IAAK,OAAO,EAChDN,GAASyzB,IAAkBD,EAAgBA,EAAc/rB,SAC9D+rB,EAAclzB,GAAK+C,EAAIpE,KAAKiO,SAASsmB,EAAclzB,IAErDmzB,GAAmB,EAGrB,IAAIC,EAAe1zB,EACd0zB,IACHA,EAAeF,EAAc3uB,KAAK,MAAMV,QAAQ,YAAa,WAG/D,IAAIwvB,EAAQD,EAAajrB,MAAM,aAAe,IAAM,GAGpD,OAFAhJ,KAAK2yB,KAAK,uBAAwB,YAAcJ,EAAU,WAChD2B,EAAQ,IAAMD,IACjB,GAGTT,eAAgB,SAAwB/vB,EAAOyC,EAAOqsB,GACpD,GAAIrsB,QAAJ,CACA,GAAqB,iBAAVA,EAAoB,CAC7B,IAAIiuB,EAAcC,WAAWluB,GACzBiuB,EAAYtxB,aAAeqD,IAAOA,EAAQiuB,GAE5Cn0B,KAAK8yB,aAAa5sB,EAAOqsB,EAAS,CAAC,YACrCvyB,KAAKozB,cAAc3vB,EAAOyC,EAAOqsB,EAAS,mBAI9CgB,gBAAiB,SAAyBrtB,EAAOqsB,GAC/C,GAAIrsB,SACiB,iBAAVA,KACPA,GAAqC,iBAArBA,EAAMkC,YAA1B,CACA,GAAIxE,EAAIpE,KAAKkQ,SAAU,CACrB,IAAIC,EAAS/L,EAAIpE,KAAKoI,OAAO+H,OAC7B,GAAI/L,EAAIpE,KAAKyH,OAAOS,SAASxB,IAAUA,aAAiByJ,EAAQ,YAEhE,QAAoB,WAAT0kB,MAAmBnuB,aAAiBmuB,KAAM,OAGvD,IAAIC,EAAQ,CAAC,SAAU,SAAU,OAAQ,OAAQ,cAAe,YAChE,GAAIpuB,EACF,IAAK,IAAIrF,EAAI,EAAGA,EAAIyzB,EAAM1zB,OAAQC,IAAK,CACrC,GAAI+C,EAAIpE,KAAKgO,OAAOtH,EAAOouB,EAAMzzB,IAAK,OACtC,GAAI+C,EAAIpE,KAAKiO,SAASvH,EAAMrG,eAAiBy0B,EAAMzzB,GAAI,OAI3Db,KAAK2yB,KAAK,uBAAwB,YAAcJ,EAAd,qE,qBC1QtC,EAAQ,QACR,IAAI3uB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAsB,YAAI,GACpCpS,EAAIwhB,YAActP,EAAQI,cAAc,cAAe,CAAC,eACxDnQ,OAAO8H,eAAekI,EAAUC,SAAsB,YAAG,aAAc,CACrElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAkDC,WACtEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIwhB,a,qBCjBrB,IAAIxhB,EAAM,EAAQ,QACdqkB,EAAgB,EAAQ,QACxBsM,EAA+B,EAAQ,QACvCC,EAAS,EAAQ,QACjBC,EAAa,EAAQ,QAGzB,EAAQ,QAKR,IAAIC,EAAmC,CACrC,yBAA2B,EAC3B,YAAc,EACd,gBAAkB,GAMfC,EAA2B,CAC9B,+BACA,aACA,oBACA,KAGF/wB,EAAIpE,KAAK2L,OAAOvH,EAAIgS,GAAGpM,UAAW,CAIhCorB,oBAAqB,SAA6BvxB,GAChD,IAAIwxB,EAAoB70B,KAAKuB,IAAI4mB,iBAC7B2M,EAAqB90B,KAAK+0B,gBAAkB/0B,KAAK+0B,gBAAgB5M,iBAAmB,KACpF6M,EAAuBh1B,KAAKsD,OAAO6kB,iBACnCE,IAAchlB,GAAUA,EAAQglB,cAQpC,OAAIyM,EACFA,EAA4C,OAAvBA,EAA8B,KAAOA,IAGxC,IAAhBzM,EACFwM,EAAoB,KACXG,IACTH,EAAoBG,GAEfH,IAMTI,eAAgB,WACd,IAAIC,EAAStxB,EAAIkS,QAAQtM,UAAUyrB,eACnC,OAAQj1B,KAAKm1B,YAAcn1B,KAAKm1B,WAAW3zB,QACvCxB,KAAKm1B,WAAW3zB,QAChB0zB,EAAOzrB,KAAKzJ,OAMlBge,eAAgB,SAAwB3a,GACtC,IAAI8kB,EAAmBnoB,KAAK40B,oBAAoBvxB,GAChD,OAAOO,EAAIsR,QAAQC,cAAcK,WAAW2S,IAM9C/K,gBAAiB,WACf,IAAIsV,EACA0C,EAAW,GAcf,GAXKp1B,KAAKsD,OAAOsR,SAAQ5U,KAAKsD,OAAOsR,OAAS,cAEzC5U,KAAKsD,OAAOoX,UAAY1a,KAAKsD,OAAO+xB,kBACvCD,EAASjwB,KAAK,6EAGQ,IAApBiwB,EAASx0B,OACX8xB,EAAM0C,EAAS,GACNA,EAASx0B,OAAS,IAC3B8xB,EAAM,mCAAqC0C,EAAShwB,KAAK,OAEvDstB,EACF,MAAM9uB,EAAIpE,KAAKgB,MAAM,IAAIC,MACvB,CAACoB,KAAM,kBAAmBlB,QAAS+xB,KAOzC4C,yBAA0B,SAAkCjyB,GAC1D,IAAI0a,EAAc/d,KAAKge,iBACvB,OAAyC,IAArChe,KAAKsD,OAAOiyB,sBAAiCxX,IAAgBna,EAAIsR,QAAQS,IAC5B,WAA1CtS,EAAQ/B,YAAYoZ,SAASiQ,UAStCtN,sBAAuB,SAA+Bha,GAuBpD,GArBAA,EAAQia,YAAY,WAAYtd,KAAKw1B,gBACrCnyB,EAAQia,YAAY,WAAYtd,KAAKy1B,oBAFf,GAGtBpyB,EAAQia,YAAY,WAAYtd,KAAK01B,8BAHf,GAKtBryB,EAAQqb,eAAe,WACrB9a,EAAI+a,eAAeC,KAAK+W,iBAC1BtyB,EAAQia,YAAY,QAAStd,KAAK41B,gBAClCvyB,EAAQia,YAAY,QAAStd,KAAK61B,mBAClCxyB,EAAQia,YAAY,QAAStd,KAAK81B,0BAClCzyB,EAAQia,YAAY,QAAStd,KAAKynB,aAClCpkB,EAAQia,YAAY,aAActd,KAAK+1B,sBACvC1yB,EAAQia,YAAY,eAAgBtd,KAAKsC,cACzCe,EAAQia,YAAY,cAAe1Z,EAAIpE,KAAKyP,oBAC5C5L,EAAQia,YAAY,cAAetd,KAAKoD,aACxCC,EAAQia,YAAY,cAAetd,KAAKg2B,6BACxC3yB,EAAQia,YAAY,gBAAiBtd,KAAKi2B,kBACtCj2B,KAAKs1B,yBAAyBjyB,KAChCA,EAAQqb,eAAe,aAAc9a,EAAI+a,eAAeC,KAAKE,gBAC7Dzb,EAAQia,YAAY,aAActd,KAAKk2B,qBAGf,iBAAtB7yB,EAAQzB,WAAgC4yB,EAAO2B,aAAa9yB,EAAS,UAkBvE,OAhBAA,EAAQ7B,QAAQ2zB,WAAavxB,EAAIpE,KAAK+U,IAAI3R,MAAMS,EAAQjB,OAAOg0B,QAE/D/yB,EAAQqb,eAAe,WAAY1e,KAAKy1B,oBACxCpyB,EAAQqb,eAAe,QAAS1e,KAAKynB,aACM,OAAvCpkB,EAAQ7B,QAAQ2zB,WAAW3zB,SAC7B6B,EAAQia,YAAY,WAAYkX,EAAO6B,0BACvChzB,EAAQia,YAAY,WAAYtd,KAAKs2B,0BACW,gBAAvCjzB,EAAQ7B,QAAQ2zB,WAAW3zB,UACpC6B,EAAQia,YAAY,WAAYkX,EAAO+B,gCACvClzB,EAAQia,YAAY,WAAYkX,EAAOgC,sBAEzCnzB,EAAQia,YAAY,WAAYkX,EAAOiC,mBACvCpzB,EAAQia,YAAY,WAAYkX,EAAOkC,oBACvCrzB,EAAQia,YAAY,WAAYkX,EAAOmC,oBACvCtzB,EAAQia,YAAY,QAAStd,KAAK42B,oCAClCvzB,EAAQia,YAAY,QAASkX,EAAOqC,4BAItCxzB,EAAQia,YAAY,WAAYtd,KAAK82B,wBACrCzzB,EAAQia,YAAY,WAAYtd,KAAK+2B,8BACrC1zB,EAAQsmB,QAAQ,eAAgB3pB,KAAKg3B,qBACjCpzB,EAAIpE,KAAKuE,aACXV,EAAQsmB,QAAQ,QAAS3pB,KAAKi3B,8BAOlCzB,eAAgB,SAASn0B,GACvB,IAAIe,EAASf,EAAIe,OACb80B,EAAS71B,EAAIC,YAAYoZ,SAASiQ,SAEtC,IADgBvoB,EAAO+0B,gBAAkB/0B,EAAOg1B,2BACpB,WAAXF,EAAqB,CAGpC,MAAMtzB,EAAIpE,KAAKgB,MAAM,IAAIC,MACvB,CAAEC,KAAM,cAAeC,QAHf,sFAUdm2B,uBAAwB,SAASz1B,GAC/B,IAAKA,EAAIe,OAAOg0B,QAAU/0B,EAAIG,QAAQ8B,OAAO+xB,iBAAkB,CAE7D,MAAMzxB,EAAIpE,KAAKgB,MAAM,IAAIC,MACvB,CAAEC,KAAM,cAAeC,QAFf,oEASd21B,wBAAyB,SAAiCj1B,GACxD,IAAIyT,EAAWzT,EAAIG,QAAQ2zB,WAAWrgB,SAEtC,GACuC,IAArCA,EAASN,QAAQ,iBACoB,IAArCM,EAASN,QAAQ,gBAEjB,MAAM5Q,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,aACNC,QAAS,mDAQf80B,mBAAoB,SAA4Bp0B,GAC9C,IACI8mB,EADU9mB,EAAIG,QACaozB,oBAAoBvzB,GAC/Cg2B,EAASh2B,EAAIe,QAAUf,EAAIe,OAAOg0B,OAClCrrB,EAAM1J,EAAIe,QAAUf,EAAIe,OAAOk1B,IAC/BC,EAAaF,GAAUA,EAAO7iB,QAAQ,KAC1C,GAAI6iB,GAAUE,GAAc,EAC1B,GAAmB,iBAARxsB,GAAoBwsB,EAAa,EAAG,CAC7Cl2B,EAAIe,OAASwB,EAAIpE,KAAK2I,KAAK9G,EAAIe,QAE/B,IAAIo1B,EAASH,EAAO7uB,OAAO+uB,EAAa,IAAM,GAC9Cl2B,EAAIe,OAAOk1B,IAAME,EAAS,IAAMzsB,EAChC1J,EAAIe,OAAOg0B,OAASiB,EAAO7uB,OAAO,EAAG+uB,QAChC,GAAyB,OAArBpP,EAA2B,CACpC,IAAIuK,EAAM,wDAA0D2E,EACpE,MAAMzzB,EAAIpE,KAAKgB,MAAM,IAAIC,MACvB,CAAEC,KAAM,gBAAiBC,QAAS+xB,MAQ1C+E,2BAA4B,SAAoC71B,GAM9D,OAAiD,IALzB,CACtB,eACA,eACA,eAEuB4S,QAAQ5S,IASnC8zB,6BAA8B,SAAsCr0B,GAClE,IAAIG,EAAUH,EAAIG,QACd8B,EAAS9B,EAAQ8B,OAMrB,GALAA,EAAOo0B,0BAA4BnD,EAA6B/yB,EAAQuzB,gBAAiB,CACvF4C,IAAK,qCACLC,aAAc,iCACdC,aAAc,gCAGZr2B,EAAQuzB,iBAAmB,IAAIra,UACN,cAA3BrZ,EAAIC,YAAYsT,QACqB,aAArCtR,EAAOo0B,2BACPr2B,EAAIC,YAAYoZ,SAASkQ,SAASpW,QAAQ,qBAAuB,EACjE,CACA,IAAIsjB,EAAcx0B,EAAOoX,SAASlG,QAAQ,kBAC1CujB,iBAAmBz0B,EAAOoX,SAAS2R,UAAU,EAAGyL,GAC9C,aAAex0B,EAAOoX,SAAS2R,UAAUyL,GAC3Cz2B,EAAIC,YAAYstB,eAAemJ,oBAYnCtQ,YAAa,SAAqBpmB,GAChC,IAAIC,EAAcD,EAAIC,YAClB8nB,EAAI/nB,EAAIe,OAAOg0B,OACf50B,EAAUH,EAAIG,QACdkZ,EAAWpZ,EAAYoZ,SAC3B,GAAI0O,IACG5nB,EAAQw2B,oBAAoB5O,GAAI,CAC/B5nB,EAAQ8B,OAAO20B,uBAAyBz2B,EAAQi2B,2BAA2Bp2B,EAAIO,WAC7EJ,EAAQ8B,OAAO40B,aACjBxd,EAASkQ,SAAWxB,EAAI,yCAExB1O,EAASkQ,SAAWxB,EAAI,+BAEhB5nB,EAAQ8B,OAAO+xB,mBACzB3a,EAASkQ,SACPxB,EAAI,IAAM1O,EAASkQ,UAGvB,IAAIC,EAAOnQ,EAASmQ,KAElBnQ,EAASC,KADE,KAATkQ,GAAwB,MAATA,EACDnQ,EAASkQ,SAAW,IAClClQ,EAASmQ,KAEKnQ,EAASkQ,SAG3BtpB,EAAYgvB,oBAAsBlH,EAClC5nB,EAAQ22B,kCAAkC92B,KAUhD82B,kCAAmC,SAA2C92B,GAC5E,IAAIC,EAAcD,EAAIC,YAClB+1B,EAAS/1B,EAAYgvB,oBACzB,GAAI+G,GAAU/1B,EAAYoF,KAAM,CAC9B,GAAIrF,EAAIe,QAAUf,EAAIe,OAAOk1B,IAAK,CAChC,IAAIc,EAAe,IAAMx0B,EAAIpE,KAAKuF,cAAc1D,EAAIe,OAAOk1B,KAC3D,GAA+C,IAA3Ch2B,EAAYoF,KAAK8N,QAAQ4jB,KAAwB92B,EAAYoF,KAAK9F,SAAWw3B,EAAax3B,QAAoD,MAA1CU,EAAYoF,KAAK0xB,EAAax3B,SAEpI,OAGJU,EAAYoF,KAAOpF,EAAYoF,KAAKhC,QAAQ,IAAIwiB,OAAO,IAAMmQ,GAAS,IAC1C,MAAxB/1B,EAAYoF,KAAK,KACnBpF,EAAYoF,KAAO,IAAMpF,EAAYoF,QAS3CkwB,8BAA+B,SAAuCv1B,GACpE,IAAIg3B,EAAiBh3B,EAAIG,QAAQ2zB,WAE7BmD,EAA0C,gBAA3BD,EAAe72B,QAE9B+2B,EAAiBD,EAAe,IAAMD,EAAeG,UAAW,GAChEhc,EAAc8b,EAAe,cAAe,iBAC5CG,GAAmBH,GAAgBj3B,EAAIG,QAAQ8B,OAAO40B,aAAe,aAAe,GAEpFxd,EAAWrZ,EAAIC,YAAYoZ,SAC3Bge,EAAYjE,EAAWkE,kBAAkBN,EAAezjB,QACxDgkB,EAAev3B,EAAIG,QAAQ8B,OAAOu1B,eAEtCne,EAASkQ,SAAW,CAClByN,EAAeS,YAAc,IAAMT,EAAexjB,UAAY0jB,EAC9D/b,EAAcic,EACdG,EAAeP,EAAezjB,OAASvT,EAAIG,QAAQ8B,OAAOsR,OAC1D8jB,GACAtzB,KAAK,KACPsV,EAASC,KAAOD,EAASkQ,SAEzB,IAAImO,EAAan1B,EAAIpE,KAAK+E,UAAUlD,EAAIe,OAAOg0B,QAC3C1vB,EAAOrF,EAAIC,YAAYoF,KAE3BrF,EAAIC,YAAYoF,KAAOA,EAAKhC,QAAQ,IAAIwiB,OAAO,IAAM6R,GAAa,IAClC,MAA5B13B,EAAIC,YAAYoF,KAAK,KACvBrF,EAAIC,YAAYoF,KAAO,IAAMrF,EAAIC,YAAYoF,MAE/CrF,EAAIC,YAAYsT,OAASyjB,EAAezjB,QAO1CmhB,qBAAsB,SAA8B10B,GAClD,IAAI23B,EAAM33B,EAAIC,YAAYe,QAAQ,kBAC9BuB,EAAIpE,KAAKkQ,WAAaspB,GAAO,SAAe33B,EAAIe,OAAO62B,gBAAgBr1B,EAAIpE,KAAKoI,OAAO+H,UACzFtO,EAAIC,YAAYe,QAAgB,OAAI,iBASxCuzB,eAAgB,SAAwBv0B,GACtC,IAAIC,EAAcD,EAAIC,YACtB,GAA2B,QAAvBA,EAAYmZ,QAA2C,SAAvBnZ,EAAYmZ,OAAhD,CAMKnZ,EAAYe,QAAQ,kBACvBf,EAAYe,QAAQ,gBAAkB,4BAGxC,IAAI62B,EAAc53B,EAAYe,QAAQ,gBACtC,GAAIuB,EAAIpE,KAAKuE,YACX,GAAgC,iBAArBzC,EAAYY,MAAsBg3B,EAAYlwB,MAAM,gBAGxD,CAKL1H,EAAYe,QAAQ,gBAClB62B,EAAYx0B,QAAQ,uBALN,SAASyiB,EAAGqQ,EAAQ2B,GAClC,OAAO3B,EAAS2B,EAAYr0B,qBALgD,CAE9ExD,EAAYe,QAAQ,iBADN,+BAXTf,EAAYe,QAAQ,iBA2B/B+2B,6BAA8B,CAC5BC,eAAe,EACfC,oBAAoB,EACpBC,iCAAiC,EACjCC,kBAAkB,EAClBC,eAAe,EACfC,sBAAsB,EACtBC,oBAAoB,EACpBC,oBAAoB,EACpBC,4BAA4B,GAa9BC,qBAAsB,SAA8Bz4B,GAClD,GAAIrB,KAAKo5B,6BAA6B/3B,EAAIO,WAAY,OAAO,EAC7D,IAAK5B,KAAKsD,OAAOy2B,iBAAkB,OAAO,EAG1C,IAAKn2B,EAAIpE,KAAKyH,OAAOS,SAASrG,EAAIC,YAAYY,OACV,iBAAzBb,EAAIC,YAAYY,KACzB,OAAO,EAGT,IAAImR,EAAQhS,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAAWI,MAAMsN,QAG5D,SAAIjO,EAAIG,QAAQ8zB,yBAAyBj0B,IAAS0E,OAAOyD,UAAUmD,eAAelD,KAAKpI,EAAIC,YAAYe,QAAS,uBAC1GgR,EAAM2mB,YAAe34B,EAAIe,OAAO43B,eAMlC34B,EAAIG,QAAQwc,eAAe3c,KAASuC,EAAIsR,QAAQS,IAC9CtC,EAAM2mB,aAAe3mB,EAAM2mB,WAAWjH,eAGxC1f,EAAM2mB,YAAe34B,EAAIe,OAAO43B,kBAApC,IAQFnE,kBAAmB,SAA2Bx0B,GAC5C,GAAIA,EAAIG,QAAQs4B,qBAAqBz4B,GAAM,CACzC,IAAI+J,EAAMxH,EAAIpE,KAAKgL,OAAOY,IAAI/J,EAAIC,YAAYY,KAAM,UACpDb,EAAIC,YAAYe,QAAQ,eAAiB+I,IAO7C0qB,yBAA0B,SAAkCz0B,GAK1DuC,EAAIpE,KAAKiN,KAJE,CACT0qB,eAAgB,gDAChBC,yBAA0B,8DAER,SAASrsB,EAAKgd,GAChC,GAAI1mB,EAAIe,OAAO2I,GAAM,CACnB,IAAI7E,EAAQtC,EAAIpE,KAAKgL,OAAOY,IAAI/J,EAAIe,OAAO2I,GAAM,UACjD1J,EAAIC,YAAYe,QAAQ0lB,GAAU7hB,OAYxC8xB,oBAAqB,SAA6BiC,GAEhD,QAAIj6B,KAAKsD,OAAO42B,mBACZl6B,KAAKsD,OAAO+xB,oBAEZb,EAAO2F,wBAAwBF,OACzBj6B,KAAKsD,OAAO6qB,aAAc8L,EAAWjxB,MAAM,SAavDgtB,4BAA6B,SAAqCzzB,GAChE,GAAKmyB,EAAiCnyB,EAAKc,QAAQzB,WAAnD,CACA,IAAIY,EAAeD,EAAKC,aACxB,GAAIA,EAAaN,MAAQM,EAAaN,KAAKW,WAAWmG,MAAM,WAO1D,MAHAzG,EAAKiB,KAAO,MACExD,KAAKwB,QAAUxB,KAAKwB,QAAUxB,MACpCsC,aAAaC,GACfA,EAAK/B,MACN,IAAKgC,EAAaN,OAASM,EAAaN,KAAKW,WAAWmG,MAAM,UAInE,MADAzG,EAAKiB,KAAO,KACNI,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,gBACNC,QAAS,yBASfy5B,eAAgB,SAAwB55B,EAAO6C,GAC7C,SAAIqxB,EAAiCrxB,EAAQzB,YACpB,MAArBpB,EAAM0C,eAECG,EAAQg3B,0BACfh3B,EAAQ7B,QAAQ84B,kBAAkBj3B,EAAQg3B,+BAEnC75B,GAAwB,mBAAfA,EAAME,QAEfF,IAC0C,GAAjDm0B,EAAyBngB,QAAQhU,EAAME,OACvCF,EAAMoU,QAAUpU,EAAMoU,QAAUvR,EAAQ/B,YAAYsT,QACtDvR,EAAQ/B,YAAYsT,OAASpU,EAAMoU,OACV,MAArBpU,EAAM0C,YACRG,EAAQ7B,QAAQ+4B,sBAAsBl3B,IAEjC,GAEMO,EAAIkS,QAAQtM,UAAU4wB,eACrB3wB,KAAKzJ,KAAMQ,EAAO6C,MAUpCk3B,sBAAuB,SAA+Bl3B,EAASuR,GAC7D,IAAItT,EAAc+B,EAAQ/B,YAI1B,GAHsB,iBAAXsT,GAAuBA,EAAOhU,SACvCU,EAAYsT,OAASA,GAElBtT,EAAYoZ,SAASC,KAAK3R,MAAM,wCAArC,CAGA,IAAIxH,EAAU6B,EAAQ7B,QAClBg5B,EAAWh5B,EAAQ8B,OACnB+xB,EAAmBmF,EAASnF,iBAC5BA,UACKmF,EAASnF,iBAElB,IAAIoF,EAAY72B,EAAIpE,KAAK2I,KAAKqyB,UACvBC,EAAU/f,SACjB+f,EAAU7lB,OAAStT,EAAYsT,OAE/BtT,EAAYoZ,SAAW,IAAK9W,EAAIgS,GAAG6kB,GAAY/f,SAC/ClZ,EAAQimB,YAAYpkB,GACpBm3B,EAASnF,iBAAmBA,EAC5B/zB,EAAYe,QAAQq4B,KAAOp5B,EAAYoZ,SAASC,KAEd,aAA9BtX,EAAQs3B,KAAKC,eACfv3B,EAAQqb,eAAe,QAASld,EAAQimB,aACxCpkB,EAAQia,YAAY,QAAS9b,EAAQ22B,sCAUzC/0B,YAAa,SAAqBb,GAChC,IAAIlB,EAAMkB,EAAKc,QACf,GAAsB,sBAAlBhC,EAAIO,UAAmC,CACzC,IAAIoH,EAAQzG,EAAKC,aAAaN,KAAKW,WAAWmG,MAAM,2BAC7CzG,EAAKiB,KAAQ,EAElBjB,EAAKiB,KAAKq3B,mBADR7xB,EAC6BA,EAAM,GAEN,GAGnC,IAAIquB,EAASh2B,EAAIe,OAAOg0B,QAAU,KAClC,GAAsB,iBAAlB/0B,EAAIO,WAAkD,iBAAXy1B,GAAwB90B,EAAK/B,MAErE,CACL,IACIoU,GADUrS,EAAKC,aAAaH,SAAW,IACtB,wBAA0B,KAC/C,IAAKuS,GAA4B,iBAAlBvT,EAAIO,YAAiCW,EAAK/B,MAAO,CAC9D,IAAIs6B,EAA4Bz5B,EAAIe,OAAO24B,0BAIzCnmB,EAHGkmB,EAEuD,OAAjDA,EAA0BD,mBAC1B,YAEAC,EAA0BD,mBAJ1B,YAOTjmB,GACIyiB,GAAUziB,IAAWvT,EAAIG,QAAQ84B,kBAAkBjD,KACrDh2B,EAAIG,QAAQ84B,kBAAkBjD,GAAUziB,QAhB9CvT,EAAIG,QAAQw5B,uBAAuB3D,GAoBrCh2B,EAAIG,QAAQy5B,kBAAkB14B,IAQhCD,aAAc,SAAsBC,GAClC,IAmBI24B,EAnBAC,EAAQ,CACVC,IAAK,cACLC,IAAK,YACLC,IAAK,aACLC,IAAK,YAGHl6B,EAAMkB,EAAKc,QACX3C,EAAO6B,EAAKC,aAAaU,WACzBhB,EAAOK,EAAKC,aAAaN,MAAQ,GAGjC0S,GADUrS,EAAKC,aAAaH,SAAW,IACtB,wBAA0B,KAC3Cg1B,EAASh2B,EAAIe,OAAOg0B,QAAU,KAC9BkE,EAAoBj5B,EAAIG,QAAQ84B,kBAMpC,GALI1lB,GAAUyiB,GAAUziB,IAAW0lB,EAAkBjD,KACnDiD,EAAkBjD,GAAUziB,GAI1BumB,EAAMz6B,IAAyB,IAAhBwB,EAAKtB,OAClBy2B,IAAWziB,IACbsmB,EAAeZ,EAAkBjD,IAAW,QACvBh2B,EAAIC,YAAYsT,SACnCA,EAASsmB,GAGb34B,EAAK/B,MAAQoD,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CACvCC,KAAMy6B,EAAMz6B,GACZC,QAAS,KACTiU,OAAQA,QAEL,CACL,IAAIpR,GAAO,IAAII,EAAIumB,IAAIC,QAASxnB,MAAMV,EAAKW,YAEvCW,EAAKg4B,SAAW5mB,GAClBA,EAASpR,EAAKg4B,OACVnE,GAAUziB,IAAW0lB,EAAkBjD,KACzCiD,EAAkBjD,GAAUziB,KAErByiB,GAAWziB,GAAWpR,EAAKg4B,SACpCN,EAAeZ,EAAkBjD,IAAW,QACvBh2B,EAAIC,YAAYsT,SACnCA,EAASsmB,GAIb34B,EAAK/B,MAAQoD,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CACvCC,KAAM8C,EAAKT,MAAQrC,EACnBC,QAAS6C,EAAKP,SAAW,KACzB2R,OAAQA,IAGZvT,EAAIG,QAAQy5B,kBAAkB14B,IAShCy0B,oBAAqB,SAA6Bz0B,EAAMkN,GACtD,IAAIjP,EAAQ+B,EAAK/B,MACba,EAAMkB,EAAKc,QACXg0B,EAASh2B,EAAIe,OAAOg0B,QAAU,KAElC,IAAK51B,IAAU62B,GAAU72B,EAAMoU,QAA4B,gBAAlBvT,EAAIO,WACxCgC,EAAIpE,KAAKkQ,UAA8B,eAAlBrO,EAAIO,WACJ,MAArBpB,EAAM0C,YAAwC,eAAlB7B,EAAIO,YACiB,IAAlD+yB,EAAyBngB,QAAQhU,EAAME,MACzC,OAAO+O,IAET,IAAIgsB,EAAe73B,EAAIpE,KAAKkQ,SAAW,aAAe,cAClDgsB,EAAY,CAACtF,OAAQiB,GACJ,gBAAjBoE,IAAgCC,EAAUC,QAAU,GACxD,IAAIC,EAAYv6B,EAAIG,QAAQi6B,GAAcC,GAC1CE,EAAUvB,wBAA0BhD,EACpCuE,EAAUzP,MAAK,WACb,IAAIvX,EAASvT,EAAIG,QAAQ84B,kBAAkBjD,IAAW,KACtD72B,EAAMoU,OAASA,EACfnF,QAUHwnB,4BAA6B,SAAqC10B,EAAMkN,GACvE,IAAK7L,EAAIpE,KAAKuE,YACZ,OAAO0L,IAET,IAAIjP,EAAQ+B,EAAK/B,MACb6C,EAAUd,EAAKc,QACfg0B,EAASh0B,EAAQjB,OAAOg0B,OAC5B,IAAK51B,GAAwB,oBAAfA,EAAME,OAA+B22B,GAChB,cAA/Bh0B,EAAQ/B,YAAYsT,OACtB,OAAOnF,IAET,IAAIjO,EAAU6B,EAAQ7B,QAClB84B,EAAoB94B,EAAQ84B,kBAC5BY,EAAeZ,EAAkBjD,IAAW,KAEhD,GAAI6D,GAAgBA,IAAiB73B,EAAQ/B,YAAYsT,OACvDpT,EAAQ+4B,sBAAsBl3B,EAAS63B,GACvCzrB,SACK,GAAK+kB,EAAO2F,wBAAwB9C,GAMpC,GAAIh0B,EAAQ/B,YAAYgvB,oBAAqB,CAClD,IAAIuL,EAAer6B,EAAQs6B,YAAY,CAAC1F,OAAQiB,EAAQsE,QAAS,IACjEn6B,EAAQ+4B,sBAAsBsB,EAAc,aAC5CA,EAAaxB,wBAA0BhD,EAEvCwE,EAAa1P,MAAK,WAChB,IAAIvX,EAASpT,EAAQ84B,kBAAkBjD,IAAW,KAC9CziB,GAAUA,IAAWvR,EAAQ/B,YAAYsT,QAC3CpT,EAAQ+4B,sBAAsBl3B,EAASuR,GAEzCnF,YAMFA,SArBAjO,EAAQ+4B,sBAAsBl3B,EAAS,aACL,cAA9Bi3B,EAAkBjD,KACpBiD,EAAkBjD,GAAU,aAE9B5nB,KA0BH6qB,kBAAmB,GAOnBU,uBAAwB,SAASe,GAChC,IAAIzB,EAAoBt6B,KAAKs6B,kBACxByB,EAEyB,iBAAZA,IAChBA,EAAU,CAACA,IAFXA,EAAUh2B,OAAOC,KAAKs0B,GAIxB,IAAK,IAAIz5B,EAAI,EAAGA,EAAIk7B,EAAQn7B,OAAQC,WAC3By5B,EAAkByB,EAAQl7B,IAEnC,OAAOy5B,GAQTvD,6BAA8B,SAAsC11B,GAClE,IAAIg2B,EAASh2B,EAAIe,OAAOg0B,QAAU,KAClC,GAAIiB,EAAQ,CACV,IAAI71B,EAAUH,EAAIG,QACdw6B,EAAgB36B,EAAIC,YAAYsT,OAChCsmB,EAAe15B,EAAQ84B,kBAAkBjD,GACzC6D,GAAgBA,IAAiBc,GACnCx6B,EAAQ+4B,sBAAsBl5B,EAAK65B,KAUzCD,kBAAmB,SAA2B14B,GAC5C,IAAI05B,EAAoB15B,EAAKC,aAAaH,QAAUE,EAAKC,aAAaH,QAAQ,cAAgB,KAC1F65B,EAAO35B,EAAKC,aAAaH,QAAUE,EAAKC,aAAaH,QAAQ,eAAiB,KAClFE,EAAK05B,kBAAoBA,EACzB15B,EAAK25B,KAAOA,EAER35B,EAAK/B,QACP+B,EAAK/B,MAAM+P,UAAYhO,EAAKgO,WAAa,KACzChO,EAAK/B,MAAMy7B,kBAAoBA,EAC/B15B,EAAK/B,MAAM07B,KAAOA,IAwDtBC,aAAc,SAAsBv6B,EAAWQ,EAAQ+G,GAErD,IAAI2U,GADJ1b,EAASwB,EAAIpE,KAAK2I,KAAK/F,GAAU,KACZg6B,SAAW,IAEhC,GAAuB,iBAAZte,EACT,MAAMla,EAAIpE,KAAKgB,MAAM,IAAIC,MACvB,CAAEC,KAAM,4BAA6BC,QAAS,oDAAsDmd,WAGjG1b,EAAOg6B,QACd,IAAI/4B,EAAUrD,KAAKq8B,YAAYz6B,EAAWQ,GAE1C,IAAI+G,EAKF,OAAO9F,EAAQ6mB,QAAQpM,EAAS3U,GAJhCvF,EAAIpE,KAAKyT,OAAM,WACb5P,EAAQ6mB,QAAQpM,EAAS3U,OAsI/BmzB,oBAAqB,SAA6Bl6B,EAAQ+G,GAClC,mBAAX/G,QAAsCoF,IAAb2B,IAClCA,EAAW/G,EACXA,EAAS,MAGXA,EAASwB,EAAIpE,KAAK2I,KAAK/F,GAAU,IACjC,IAAIm6B,EAAcv8B,KAAKsD,OAAOlB,QAAU,GACpCi1B,EAASj1B,EAAOg0B,QAAUmG,EAAYnG,OACxC/kB,EAAOrR,KACPsD,EAAStD,KAAKsD,OACdoX,EAAW9W,EAAIpE,KAAK2I,KAAKnI,KAAK0a,UAKhC,SAAS8hB,IACP,MAAO,CACLl3B,IAAK1B,EAAIpE,KAAK+F,UAAUmV,GACxB+hB,OAAQprB,EAAKqrB,kBACXp5B,EAAOsW,YACPtW,EAAOsR,OACPyiB,EACAj1B,EAAOu6B,OACPv6B,EAAOw6B,WACPx6B,EAAOg6B,UAKb,GAlBK94B,EAAO+xB,mBACV3a,EAASE,SAAW,IAAMyc,IAiBxBluB,EASF,OAAOqzB,IARPl5B,EAAOu5B,gBAAe,SAAUzzB,GAC1BA,GACFD,EAASC,GAGXD,EAAS,KAAMqzB,SAUrBE,kBAAmB,SACjB9iB,EACAhF,EACAyiB,EACAoF,EACAK,EACAC,GAEA,IAAIthB,EAAMzb,KAAKie,uBACf,IAAKrE,IAAgBhF,IAAWyiB,EAC9B,MAAM,IAAI52B,MAAM,mFAGlBg8B,EAAS74B,EAAIpE,KAAK2I,KAAKs0B,GAAU,IACjCK,GAAcA,GAAc,IAAI90B,MAAM,GACtC+0B,EAAmBA,GAAoB,KAEvC,IAAIC,EAAcp5B,EAAIpE,KAAKoK,KAAKK,QAAQwR,GAAK/W,QAAQ,iBAAkB,IACnEu4B,EAAYD,EAAYx0B,OAAO,EAAG,GAClC00B,EAAQjV,EAAc1L,YAAY0gB,EAAWroB,EAAQ,MACrDuoB,EAAavjB,EAAYM,YAAc,IAAMgjB,EASjD,IAAK,IAAIE,KAPTX,EAAe,OAAIpF,EACnBoF,EAAO,mBAAqB,mBAC5BA,EAAO,oBAAsBU,EAC7BV,EAAO,cAAgBO,EACnBpjB,EAAYO,eACdsiB,EAAO,wBAA0B7iB,EAAYO,cAE7BsiB,EAChB,GAAIA,EAAO9vB,eAAeywB,GAAQ,CAChC,IAAIC,EAAY,GAChBA,EAAUD,GAASX,EAAOW,GAC1BN,EAAW33B,KAAKk4B,GAcpB,OAVAZ,EAAOa,OAASt9B,KAAKu9B,kBACnB,IAAIxzB,KAAK0R,EAAI+hB,UAA+B,IAAnBT,GACzBD,GAEFL,EAAO,mBAAqB74B,EAAIpE,KAAKgL,OAAOM,KAC1Cmd,EAAcxL,cAAc7C,EAAaqjB,EAAWroB,EAAQ,MAAM,GAClE6nB,EAAOa,OACP,OAGKb,GAMTc,kBAAmB,SAA2BE,EAAYX,GACxD,OAAOl5B,EAAIpE,KAAKmH,OAAOC,OAAOjE,KAAK0jB,UAAU,CAC3CoX,WAAY75B,EAAIpE,KAAKoK,KAAKK,QAAQwzB,GAClCX,WAAYA,MAOhB7G,iBAAkB,SAA0B5yB,GAC1CA,EAAQia,YAAY,WAAYja,EAAQ7B,QAAQk8B,0BAChDr6B,EAAQqb,eAAe,QAASrb,EAAQ7B,QAAQo0B,gBAC3CvyB,EAAQjB,OAAO62B,KAIlB51B,EAAQia,YAAY,aAAc1Z,EAAI+a,eAAeC,KAAKE,gBAF1Dzb,EAAQqb,eAAe,QAASrb,EAAQ7B,QAAQq0B,oBAUpDK,mBAAoB,SAA4B7yB,GAC9C,IAAIhB,EAAUgB,EAAQ/B,YAAYe,QAE7B0D,OAAOyD,UAAUmD,eAAelD,KAAKpH,EAAS,uBACjDA,EAAQ,wBAA0B,qBAOtCq7B,yBAA0B,SAAkCr6B,GAC1D,QAAqCmE,IAAjCnE,EAAQjB,OAAOu7B,cACjB,MAAM/5B,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAACC,KAAM,sBACvCC,QAAS,wDAIfi9B,aAAc,SAAsBx7B,EAAQ+G,GAMpB,mBAAX/G,GAA0BA,IACnC+G,EAAWA,GAAY/G,EACvBA,EAAS,IAEX,IAAIwoB,EAAW5qB,KAAK0a,SAASkQ,SAGzBiT,EAAej6B,EAAIpE,KAAK2I,KAAK/F,GAKjC,OAHIwoB,IAAa5qB,KAAKuB,IAAIu8B,gBAAmB17B,EAAO24B,4BAClD8C,EAAa9C,0BAA4B,CAAEF,mBAAoB76B,KAAKsD,OAAOsR,SAEtE5U,KAAKq8B,YAAY,eAAgBwB,EAAc10B,IAmCxDuiB,OAAQ,SAAgBtpB,EAAQrC,EAASoJ,GAChB,mBAAZpJ,QAAuCyH,IAAb2B,IACnCA,EAAWpJ,EACXA,EAAU,MAGZA,EAAUA,GAAW,GACrBA,EAAU6D,EAAIpE,KAAKyN,MAAMlN,GAAW,GAAI,CAACyB,QAASxB,KAAMoC,OAAQA,IAEhE,IAAI27B,EAAW,IAAIn6B,EAAIgS,GAAGooB,cAAcj+B,GAExC,MADwB,mBAAboJ,GAAyB40B,EAAS5R,KAAKhjB,GAC3C40B,KAOXn6B,EAAIgS,GAAG1E,mBAAqB,SAA4BN,GACtD5Q,KAAKwJ,UAAUy0B,oBAAsBr6B,EAAIpE,KAAK2R,gBAAgB,eAAgBP,IAMhFhN,EAAIgS,GAAG3E,wBAA0B,kBACxBjR,KAAKwJ,UAAUy0B,qBAGxBr6B,EAAIpE,KAAKkR,YAAY9M,EAAIgS,K,yyJCvvCzB,EAAQ,QACR,IAAIhS,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAmB,SAAI,GACjCpS,EAAIkf,SAAWhN,EAAQI,cAAc,WAAY,CAAC,eAClDnQ,OAAO8H,eAAekI,EAAUC,SAAmB,SAAG,aAAc,CAClElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA+CC,WACnEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIkf,U,0glFCjBrB,IAAIlf,EAAM,EAAQ,QACdhE,EAAUgE,EAAIpE,KAAKI,QAEvB,EAAQ,QAKRgE,EAAIsR,QAAQW,QAAUjW,EAAQgE,EAAIsR,QAAQQ,GAAI,CAC5C8S,cAAe,SAAuB5O,GACpC,MAAO,6BACeA,EAAYM,YAD3B,mCAGUla,KAAKsa,UAAUV,IAGlCY,aAAc,WACZ,OAAOxa,KAAKqD,QAAQhB,QAAQ,iBAOhCtB,EAAOC,QAAU4C,EAAIsR,QAAQW,S,m+QCxB7B,IAAIjS,EAAM,EAAQ,QACdpE,EAAO,EAAQ,QACf0+B,EAA+B,CAAC,gCAAiC,kCAWrE,SAASC,EAAY96B,GACnB,IAAI7B,EAAU6B,EAAQ7B,QAClBD,EAAMC,EAAQD,KAAO,GAErBsa,GAData,EAAII,WACH,IAUlB,OATIH,EAAQ8B,OAAOsR,SACjBiH,EAAYjH,OAASpT,EAAQ8B,OAAOsR,QAElCrT,EAAI68B,YACNviB,EAAYuiB,UAAY78B,EAAI68B,WAE1B58B,EAAQ8B,OAAOsW,YAAYM,cAC7B2B,EAAY3B,YAAc1Y,EAAQ8B,OAAOsW,YAAYM,aAEhD2B,EA8BT,SAASwiB,EAA0Bh7B,EAASI,GAC1C,IAAIoY,EAAc,GAElB,OAzBF,SAASyiB,EAAgCl4B,EAAQhE,EAAQqB,GAClDA,GAAD,MAAUrB,GACK,cAAfqB,EAAMlD,MAAwBkD,EAAMsvB,UAAYtvB,EAAMsvB,SAASnyB,OAAS,GAC1EpB,EAAKyF,UAAUxB,EAAMsvB,UAAU,SAASlxB,GACtC,IAAIwW,EAAc5U,EAAM6L,QAAQzN,GAChC,IAAwC,IAApCwW,EAAYkmB,oBAA8B,CAC5C,IAAIzY,EAAezN,EAAY0N,eAAiB1N,EAAYxW,KAAOA,EACnEuE,EAAO0f,GAAgB9X,OAAO5L,EAAOP,SAErCy8B,EAAgCl4B,EAAQhE,EAAOP,GAAOwW,MAe5DimB,CAAgCziB,EAAaxY,EAAQjB,OAAQqB,GACtDoY,EAWT,SAAS2iB,EAAyBn7B,GAChC,IAAI7B,EAAU6B,EAAQ7B,QAClBD,EAAMC,EAAQD,IACdk9B,EAAiBl9B,EAAII,WAAaJ,EAAII,WAAW0B,EAAQzB,gBAAa4F,EAGtEqU,EAAcwiB,EAA0Bh7B,EAF3Bo7B,EAAiBA,EAAez8B,WAAQwF,GAGrDmV,EAAWwhB,EAAY96B,GACvB0C,OAAOC,KAAK6V,GAAajb,OAAS,IACpC+b,EAAWnd,EAAK2L,OAAOwR,EAAUd,GAC7B4iB,IAAgB9hB,EAAS/a,UAAY68B,EAAe58B,OAE1D,IAAIma,EAAYpY,EAAI86B,cAAc5vB,IAAI6N,GACtC,IAAIX,GAAkC,IAArBA,EAAUpb,QAAyC,KAAzBob,EAAU,GAAGC,QAIjD,GAAID,GAAaA,EAAUpb,OAAS,EAEzCyC,EAAQ/B,YAAYstB,eAAe5S,EAAU,GAAGC,aAC3C,CAEL,IAAI0iB,EAAkBn9B,EAAQ66B,YAAY96B,EAAIq9B,kBAAmB,CAC/DjP,UAAW8O,EAAe58B,KAC1Bg9B,YAAahjB,IAEfijB,EAAoBH,GACpBA,EAAgBjgB,eAAe,WAAY9a,EAAI+a,eAAeC,KAAKmgB,qBACnEJ,EAAgBjgB,eAAe,QAAS9a,EAAI+a,eAAeC,KAAKogB,aAGhEp7B,EAAI86B,cAActjB,IAAIuB,EAAU,CAAC,CAC/BV,QAAS,GACTC,qBAAsB,KAExByiB,EAAgBxS,MAAK,SAAS/iB,EAAK5F,GAC7BA,GAAQA,EAAKy7B,UACfr7B,EAAI86B,cAActjB,IAAIuB,EAAUnZ,EAAKy7B,WAC5B71B,GACTxF,EAAI86B,cAActjB,IAAIuB,EAAU,CAAC,CAC/BV,QAAS,GACTC,qBAAsB,SAOhC,IAAIgjB,EAAe,GAWnB,SAASC,EAAyB97B,EAASoM,GACzC,IAAIjO,EAAU6B,EAAQ7B,QAClBD,EAAMC,EAAQD,IACdk9B,EAAiBl9B,EAAII,WAAaJ,EAAII,WAAW0B,EAAQzB,gBAAa4F,EACtE43B,EAAaX,EAAiBA,EAAez8B,WAAQwF,EAErDqU,EAAcwiB,EAA0Bh7B,EAAS+7B,GACjDziB,EAAWwhB,EAAY96B,GACvB0C,OAAOC,KAAK6V,GAAajb,OAAS,IACpC+b,EAAWnd,EAAK2L,OAAOwR,EAAUd,GAC7B4iB,IAAgB9hB,EAAS/a,UAAY68B,EAAe58B,OAE1D,IAAIw9B,EAAcz7B,EAAIoX,cAAcM,aAAaqB,GAC7CX,EAAYpY,EAAI86B,cAAc5vB,IAAIuwB,GACtC,GAAIrjB,GAAkC,IAArBA,EAAUpb,QAAyC,KAAzBob,EAAU,GAAGC,QAKtD,OAFKijB,EAAaG,KAAcH,EAAaG,GAAe,SAC5DH,EAAaG,GAAal6B,KAAK,CAAC9B,QAASA,EAAS8F,SAAUsG,IAEvD,GAAIuM,GAAaA,EAAUpb,OAAS,EACzCyC,EAAQ/B,YAAYstB,eAAe5S,EAAU,GAAGC,SAChDxM,QACK,CACL,IAAIkvB,EAAkBn9B,EAAQ66B,YAAY96B,EAAIq9B,kBAAmB,CAC/DjP,UAAW8O,EAAe58B,KAC1Bg9B,YAAahjB,IAEf8iB,EAAgBjgB,eAAe,WAAY9a,EAAI+a,eAAeC,KAAKmgB,qBACnED,EAAoBH,GAIpB/6B,EAAI86B,cAActjB,IAAIikB,EAAa,CAAC,CAClCpjB,QAAS,GACTC,qBAAsB,MAExByiB,EAAgBxS,MAAK,SAAS/iB,EAAK5F,GACjC,GAAI4F,GAKF,GAJA/F,EAAQ2b,SAASxe,MAAQhB,EAAKgB,MAAM4I,EAAK,CAAEuJ,WAAW,IACtD/O,EAAI86B,cAAc9iB,OAAOe,GAGrBuiB,EAAaG,GAAc,CAC7B,IAAIC,EAAkBJ,EAAaG,GACnC7/B,EAAKyF,UAAUq6B,GAAiB,SAASC,GACvCA,EAAel8B,QAAQ2b,SAASxe,MAAQhB,EAAKgB,MAAM4I,EAAK,CAAEuJ,WAAW,IACrE4sB,EAAep2B,qBAEV+1B,EAAaG,SAEjB,GAAI77B,IACTI,EAAI86B,cAActjB,IAAIikB,EAAa77B,EAAKy7B,WACxC57B,EAAQ/B,YAAYstB,eAAeprB,EAAKy7B,UAAU,GAAGhjB,SAGjDijB,EAAaG,IAAc,CACzBC,EAAkBJ,EAAaG,GACnC7/B,EAAKyF,UAAUq6B,GAAiB,SAASC,GACvCA,EAAel8B,QAAQ/B,YAAYstB,eAAeprB,EAAKy7B,UAAU,GAAGhjB,SACpEsjB,EAAep2B,qBAEV+1B,EAAaG,GAGxB5vB,QASN,SAASqvB,EAAoBH,GAC3B,IACIa,EADMb,EAAgBn9B,QAAQD,IACbi+B,WACjBA,IAAeb,EAAgBr9B,YAAYe,QAAQ,uBACrDs8B,EAAgBr9B,YAAYe,QAAQ,qBAAuBm9B,GAS/D,SAASC,EAA0BzgB,GACjC,IAAIxe,EAAQwe,EAASxe,MACjBgC,EAAewc,EAASxc,aAC5B,GAAIhC,IACc,6BAAfA,EAAME,MAAmE,MAA5B8B,EAAaU,YAC3D,CACA,IAAIG,EAAU2b,EAAS3b,QACnB1B,EAAa0B,EAAQ7B,QAAQD,IAAII,YAAc,GAE/Cka,EAAcwiB,EAA0Bh7B,EAD3B1B,EAAW0B,EAAQzB,WAAaD,EAAW0B,EAAQzB,WAAWI,WAAQwF,GAEnFmV,EAAWwhB,EAAY96B,GACvB0C,OAAOC,KAAK6V,GAAajb,OAAS,IACpC+b,EAAWnd,EAAK2L,OAAOwR,EAAUd,GAC7Bla,EAAW0B,EAAQzB,aAAY+a,EAAS/a,UAAYD,EAAW0B,EAAQzB,WAAWC,OAExF+B,EAAI86B,cAAc9iB,OAAOe,IAwB7B,SAAS+iB,EAAQx5B,GACf,MAAO,CAAC,QAAS,KAAKsO,QAAQtO,IAAU,EAgH1CnF,EAAOC,QAAU,CACf2+B,iBA/CF,SAA0Bt8B,EAASoM,GACjC,IAAIjO,EAAU6B,EAAQ7B,SAAW,GACjC,GApFF,SAA2Bo+B,GAEzB,GAAIA,EAAO7K,iBAAmB6K,EAAO7K,gBAAgBra,WAAgE,IAApDklB,EAAO7K,gBAAgB8K,yBACtF,MAAMrgC,EAAKgB,MAAM,IAAIC,MAAS,CAC5BC,KAAM,yBACNC,QAAS,4EAGb,IAAIm/B,EAAYl8B,EAAIN,OAAOs8B,EAAOluB,oBAAsB,GACxD,OAAOquB,QAAQn8B,EAAIN,OAAOoX,UAAYolB,EAAUplB,UAAaklB,EAAO7K,iBAAmB6K,EAAO7K,gBAAgBra,UA2E1GslB,CAAkBx+B,IAAY6B,EAAQglB,cAAe,OAAO5Y,IAEhE,IACIgvB,GADaj9B,EAAQD,IAAII,YAAc,IACX0B,EAAQzB,WACpCq+B,EAA8BxB,EAAiBA,EAAeyB,0BAA4B,OAC1FC,EA1DN,SAAwC98B,GACtC,IAAI7B,EAAU6B,EAAQ7B,SAAW,GACjC,QAAgDgG,IAA5ChG,EAAQ8B,OAAOu8B,yBACjB,OAAOr+B,EAAQ8B,OAAOu8B,yBAKxB,IAAIrgC,EAAKuE,YAAT,CAGA,IAAK,IAAIlD,EAAI,EAAGA,EAAIq9B,EAA6Bt9B,OAAQC,IAAK,CAC5D,IAAI82B,EAAMuG,EAA6Br9B,GACvC,GAAIkF,OAAOyD,UAAUmD,eAAelD,KAAK,gGAAakuB,GAAM,CAC1D,GAAyB,KAArB,gGAAYA,SAAoCnwB,IAArB,gGAAYmwB,GACzC,MAAMn4B,EAAKgB,MAAM,IAAIC,MAAS,CAC5BC,KAAM,yBACNC,QAAS,0BAA4Bg3B,EAAM,8BAG/C,OAAQ+H,EAAQ,gGAAY/H,KAIhC,IAAIyI,EAAa,GACjB,IACEA,EAAax8B,EAAIpE,KAAKkU,UAAY9P,EAAIpE,KAAKkU,UAAUK,SAAS,CAC5DC,UAAU,EACVL,SAAU,gGAAY/P,EAAIpE,KAAKyU,uBAC5B,GACL,MAAOvR,IACT,IAAI29B,EAAmBD,EACrB,gGAAYE,aAAe18B,EAAIpE,KAAKwV,iBACjC,GACL,GAAIjP,OAAOyD,UAAUmD,eAAelD,KAAK42B,EAAkB,8BAA+B,CACxF,QAAoD74B,IAAhD64B,EAAiBE,2BACnB,MAAM/gC,EAAKgB,MAAM,IAAIC,MAAS,CAC5BC,KAAM,yBACNC,QAAS,4EAGb,OAAQ++B,EAAQW,EAAiBE,8BAiBnBC,CAA+Bn9B,GAC3Co9B,EAA+Bj/B,EAAQD,IAAIk/B,6BAM/C,QALIN,GAAaM,IAGfp9B,EAAQ/B,YAAYktB,kBAAkB,sBAEhCyR,GACN,IAAK,YACCE,GAAaM,KAGfjC,EAAyBn7B,GACzBA,EAAQq9B,iBAAiB,8BAA+B,eAAgBjB,IAE1EhwB,IACA,MACF,IAAK,WACH,IAAkB,IAAd0wB,EAAqB,CAGvB98B,EAAQ2b,SAASxe,MAAQhB,EAAKgB,MAAM,IAAIC,MAAS,CAC/CC,KAAM,yBACNC,QAAS,sCAAwCa,EAAQD,IAAIo/B,UAAY,IAAMt9B,EAAQzB,UAC7E,sDAEZ6N,IACA,MAEFpM,EAAQq9B,iBAAiB,8BAA+B,eAAgBjB,GACxEN,EAAyB97B,EAASoM,GAClC,MACF,IAAK,OACL,QACEA,MAOJ0vB,yBAA0BA,EAC1BX,yBAA0BA,EAC1BH,0BAA2BA,EAC3BF,YAAaA,EACbyC,yBAA0BnB,I,uYCvX5B,IAAI77B,EAAM,EAAQ,QAElBA,EAAIpE,KAAK2L,OAAOvH,EAAIggB,QAAQpa,UAAW,CAIrC6T,sBAAuB,SAA+Bha,GACpDA,EAAQuI,GAAG,QAAS5L,KAAK6gC,cAM3BA,YAAa,SAAqBx9B,GAChC,IAAIqD,EAAOrD,EAAQ/B,YAAYoF,KAC/BrD,EAAQ/B,YAAYoF,KAAOA,EAAKhC,QAAQ,cAAe,MAOzD01B,eAAgB,SAAwB55B,GACtC,MAAmB,4BAAfA,EAAME,MACe,MAArBF,EAAM0C,YAGKU,EAAIkS,QAAQtM,UAAU4wB,eACrB3wB,KAAKzJ,KAAMQ,O,4fC5B/B,IAAIhB,EAAO,EAAQ,QAAWA,KAC1BshC,EAAU,EAAQ,QAElBC,EAAa,SAAShhC,GACxBA,EAAUA,GAAW,GACrBC,KAAKghC,UAAYjhC,EAAQihC,UACzBhhC,KAAKkgB,mBAAqB6f,QAAQhgC,EAAQmgB,oBAC1ClgB,KAAKwf,YAAcugB,QAAQhgC,EAAQyf,cAGrCuhB,EAAWv3B,UAAUy3B,eAAiB,SAAS/6B,EAAOzC,GAEpD,OADAzD,KAAKkhC,KAAO,QACLlhC,KAAK0lB,UAAUxf,EAAOzC,IAG/Bs9B,EAAWv3B,UAAU23B,gBAAkB,SAASj7B,EAAOzC,GAErD,OADAzD,KAAKkhC,KAAO,SACLlhC,KAAK0lB,UAAUxf,EAAOzC,IAG/Bs9B,EAAWv3B,UAAUkc,UAAY,SAASxf,EAAOzC,GAE/C,GAAKA,QAAmB+D,IAAVtB,EAAd,CAEA,GAAIzC,EAAMA,QAHCzD,KAGcghC,UACvB,OAAOF,EAJE9gC,KAIWkhC,MAAMh7B,EAAO,CAC/Bga,mBALOlgB,KAKkBkgB,mBACzBV,YANOxf,KAMWwf,cAGtB,OAAQ/b,EAAMlD,MACZ,IAAK,YAAa,OAVTP,KAUqBgmB,mBAAmB9f,EAAOzC,GACxD,IAAK,MAAO,OAXHzD,KAWeimB,aAAa/f,EAAOzC,GAC5C,IAAK,OAAQ,OAZJzD,KAYgBkmB,cAAchgB,EAAOzC,GAC9C,QAAS,OAbAzD,KAaYomB,gBAAgBlgB,EAAOzC,MAIhDs9B,EAAWv3B,UAAUwc,mBAAqB,SAASL,EAAWliB,GAC5D,IAAI4N,EAAOrR,KACX,GAAiB,MAAb2lB,EAAJ,CAEA,IAAIC,EAAS,GAQb,OAPApmB,EAAKiN,KAAKkZ,GAAW,SAAS9jB,EAAMqE,GAClC,IAAImS,EAAc5U,EAAM6L,QAAQzN,GAChC,GAAIwW,EAAa,CACf,IAAIjS,EAASiL,EAAKqU,UAAUxf,EAAOmS,QACpB7Q,IAAXpB,IAAsBwf,EAAO/jB,GAAQuE,OAGtCwf,IAGTmb,EAAWv3B,UAAU0c,cAAgB,SAASpmB,EAAM2D,GAClD,IAAI4N,EAAOrR,KACX,GAAY,MAARF,EAAJ,CAEA,IAAIiM,EAAM,GAMV,OALAvM,EAAKyF,UAAUnF,GAAM,SAASoG,GAC5B,IAAIE,EAASiL,EAAKqU,UAAUxf,EAAOzC,EAAMkU,aAC1BnQ,IAAXpB,EAAsB2F,EAAI5G,KAAK,MAC9B4G,EAAI5G,KAAKiB,MAET2F,IAGTg1B,EAAWv3B,UAAUyc,aAAe,SAASpd,EAAKpF,GAChD,IAAI4N,EAAOrR,KACX,GAAW,MAAP6I,EAAJ,CAEA,IAAIkD,EAAM,GAMV,OALAvM,EAAKiN,KAAK5D,GAAK,SAASkC,EAAK7E,GAC3B,IAAIE,EAASiL,EAAKqU,UAAUxf,EAAOzC,EAAMyC,OACf6F,EAAIhB,QAAfvD,IAAXpB,EAAiC,KACrBA,KAEX2F,IAGTg1B,EAAWv3B,UAAU4c,gBAAkB,SAASlgB,EAAOzC,GACrD,OAAOA,EAAMyU,OAAOhS,IAMtBnF,EAAOC,QAAU+/B,G,4+BCtFjB,IAAIn9B,EAAM,EAAQ,QACdwgB,EAAM,EAAQ,QAyClBxgB,EAAIw9B,uBAAyBx9B,EAAIpE,KAAKI,QAAQgE,EAAIktB,YAAa,CAqB7DjxB,YAAa,SAAgCuC,EAAQy1B,GACnDj0B,EAAIktB,YAAYrnB,KAAKzJ,MACrBA,KAAKixB,SAAU,EACfjxB,KAAKoC,OAASA,EACdpC,KAAKoC,OAAO+uB,gBAAkBnxB,KAAKoC,OAAO+uB,iBAAmB,eAC7DnxB,KAAKwD,KAAO,KACZxD,KAAKqhC,cAAgBz9B,EAAIpE,KAAK2I,KAAK0vB,GAAgB,KAcrDzG,QAAS,SAAiBjoB,GACxBnJ,KAAKqxB,gBAAgBloB,GAAYvF,EAAIpE,KAAKyJ,GAAGE,WAM/CmoB,KAAM,SAAcnoB,GAClB,IAAIkI,EAAOrR,KACXqR,EAAKkgB,gBACLlgB,EAAK7P,QAAQ8/B,2BAA0B,SAAUl4B,EAAK5F,GACpD6N,EAAK7N,KAAO,KACP4F,IACHiI,EAAK7N,KAAOA,EACZ6N,EAAK7P,QAAQkwB,gBAAgBluB,EAAM6N,IAErClI,EAASC,OAObmoB,cAAe,WACb,IAAKvxB,KAAKwB,QAAS,CACjB,IAAI+/B,EAAY39B,EAAIpE,KAAKyN,MAAM,GAAIjN,KAAKqhC,eACxCE,EAAUn/B,OAASpC,KAAKoC,OACxBpC,KAAKwB,QAAU,IAAI4iB,EAAImd,Q,qBCzG7B,IADA,IAAIC,EAAY,GACP3gC,EAAI,EAAGA,EAAI,MAAOA,EACzB2gC,EAAU3gC,IAAMA,EAAI,KAAOgC,SAAS,IAAI2F,OAAO,GAiBjDzH,EAAOC,QAdP,SAAqBuG,EAAKW,GACxB,IAAIrH,EAAIqH,GAAU,EACdu5B,EAAMD,EAEV,MAAO,CAAEC,EAAIl6B,EAAI1G,MAAO4gC,EAAIl6B,EAAI1G,MACjC4gC,EAAIl6B,EAAI1G,MAAO4gC,EAAIl6B,EAAI1G,MAAO,IAC9B4gC,EAAIl6B,EAAI1G,MAAO4gC,EAAIl6B,EAAI1G,MAAO,IAC9B4gC,EAAIl6B,EAAI1G,MAAO4gC,EAAIl6B,EAAI1G,MAAO,IAC9B4gC,EAAIl6B,EAAI1G,MAAO4gC,EAAIl6B,EAAI1G,MAAO,IAC9B4gC,EAAIl6B,EAAI1G,MAAO4gC,EAAIl6B,EAAI1G,MACvB4gC,EAAIl6B,EAAI1G,MAAO4gC,EAAIl6B,EAAI1G,MACvB4gC,EAAIl6B,EAAI1G,MAAO4gC,EAAIl6B,EAAI1G,OAAQuE,KAAK,M,4dCpBrC,EAAQ,QACR,IAAIxB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAqB,WAAI,GACnCpS,EAAIue,WAAarM,EAAQI,cAAc,aAAc,CAAC,eACtDnQ,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAiDC,WACrEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIue,Y,4fCjBrB,IAAIve,EAAM,EAAQ,QAGlB,EAAQ,QAERA,EAAIpE,KAAK2L,OAAOvH,EAAIwd,WAAW5X,UAAW,CAExC6T,sBAAuB,SAA+Bha,GACpDA,EAAQia,YAAY,cAAe1Z,EAAIpE,KAAKyP,wB,kqFCRhD,EAAQ,QACR,IAAIrL,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAI0gB,IAAMxO,EAAQI,cAAc,MAAO,CAAC,eACxCnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA0CC,WAC9DF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI0gB,K,m8rBCjBrB,EAAQ,QACR,IAAI1gB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAkB,QAAI,GAChCpS,EAAIqhB,QAAUnP,EAAQI,cAAc,UAAW,CAAC,eAChDnQ,OAAO8H,eAAekI,EAAUC,SAAkB,QAAG,aAAc,CACjElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA8CC,WAClEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIqhB,S,qBCjBrB,EAAQ,QACR,IAAIrhB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAI2e,IAAMzM,EAAQI,cAAc,MAAO,CAAC,eACxCnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAwDC,WAC5EF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI2e,K,6pvGCjBrB,EAAQ,QACR,IAAI3e,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAqB,WAAI,GACnCpS,EAAIwd,WAAatL,EAAQI,cAAc,aAAc,CAAC,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,aAAc,cAAe,aAAc,cAAe,aAAc,cAAe,aAAc,cAAe,aAAc,cAAe,aAAc,cAAe,eACtb,EAAQ,QACRnQ,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAiDC,WAC5EF,EAAMuD,QAAU,EAAQ,QAA+CA,QAChEvD,GAETpI,YAAY,EACZW,cAAc,IAEhB3I,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAiDC,WAC5EF,EAAMuD,QAAU,EAAQ,QAA+CA,QAChEvD,GAETpI,YAAY,EACZW,cAAc,IAEhB3I,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAiDC,WAC5EF,EAAMuD,QAAU,EAAQ,QAA+CA,QAChEvD,GAETpI,YAAY,EACZW,cAAc,IAEhB3I,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAiDC,WAC5EF,EAAMuD,QAAU,EAAQ,QAA+CA,QAChEvD,GAETpI,YAAY,EACZW,cAAc,IAEhB3I,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAiDC,WAC5EF,EAAMuD,QAAU,EAAQ,QAA+CA,QAChEvD,GAETpI,YAAY,EACZW,cAAc,IAEhB3I,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAiDC,WAC5EF,EAAMuD,QAAU,EAAQ,QAA+CA,QAChEvD,GAETpI,YAAY,EACZW,cAAc,IAEhB3I,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAiDC,WAC5EF,EAAMuD,QAAU,EAAQ,QAA+CA,QAChEvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIwd,Y,sjbC/ErB,SAASrL,EAAU2rB,EAAK5/B,GACtB,IAAKiU,EAAUC,SAASrJ,eAAe+0B,GACrC,MAAM,IAAIjhC,MAAM,0CAA4CihC,GAE9D,OAAO3rB,EAAUC,SAAS0rB,GAAK5/B,GASjCiU,EAAUC,SAAW,GAKrBjV,EAAOC,QAAU+U,G,uBClBjB,IAAInS,EAAM,EAAQ,QACd+9B,EAAO/9B,EAAIurB,SAASE,KAKxBzrB,EAAI4f,MAAMoe,UAAYh+B,EAAIpE,KAAKI,QAAQ,CAWnCC,YAAa,SAAgBE,GACzBA,EAAUA,GAAW,GACrBC,KAAKD,QAAUA,EACfC,KAAKwB,QAAUzB,EAAQyB,QACvBxB,KAAK6hC,kBAAkB9hC,GACvBC,KAAK8hC,YAAc,IAMvBD,kBAAmB,SAA2B9hC,GAE1C,GADAA,EAAUA,GAAW,GAChBC,KAAKwB,QAEH,CACH,IAAI8B,EAASM,EAAIpE,KAAK2I,KAAKnI,KAAKwB,QAAQ8B,QACxCtD,KAAKwB,QAAU,IAAIxB,KAAKwB,QAAQ3B,YAAYyO,UAAUhL,GACtDtD,KAAKwB,QAAQ8B,OAAOlB,OAASwB,EAAIpE,KAAKyN,MAAMjN,KAAKwB,QAAQ8B,OAAOlB,QAAU,GAAIrC,EAAQqC,aAJtFpC,KAAKwB,QAAU,IAAIoC,EAAI4f,MAAMzjB,IAWrCgiC,mBAAoB,SAA4B//B,GAG5C,IAAIggC,EAAgBp+B,EAAIpE,KAAK2I,KAAKnG,GAUlC,OATAggC,EAAc1yB,QAAU1L,EAAIpE,KAAK2I,KAAKnG,EAAMsN,SAC5C1L,EAAIpE,KAAKiN,KAAKzK,EAAMsN,SAAS,SAASzN,EAAM8V,GACxCqqB,EAAc1yB,QAAQzN,GAAQ+B,EAAIpE,KAAK2I,KAAKwP,GAEvCA,EAAOkO,UAAgC,SAApBlO,EAAOkO,WAC3Bmc,EAAc1yB,QAAQzN,GAAMgkB,SAAW,cACvCmc,EAAc1yB,QAAQzN,GAAMikB,aAAejkB,MAG5CmgC,GAMXC,iBAAkB,SAA0B5gC,GAExCA,EAAIC,YAAYmZ,OAAS,MAEzB,IAAI7Y,EAAYP,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAE3CI,EAAQhC,KAAK8hC,YAAYzgC,EAAIO,WAC5BI,IAEDhC,KAAK8hC,YAAYzgC,EAAIO,WAAaI,EAAQhC,KAAK+hC,mBAAmBngC,EAAUI,QAGhF,IAAI6kB,EAAM8a,EAAKjb,YAAYrlB,EAAIC,YAAYoZ,SAAShU,KAAM9E,EAAU4lB,SAAUxlB,EAAOX,EAAIe,QAEzFf,EAAIC,YAAYoF,KAAOmgB,EACvBxlB,EAAIC,YAAYY,KAAO,UAGhBb,EAAIC,YAAYe,QAAQ,yBACxBhB,EAAIC,YAAYe,QAAQ,iBAwBnC6/B,uBAAwB,SAAgC9/B,EAAQ0b,EAAS3U,GACrE,IAAIkI,EAAOrR,KACPqD,EAAUrD,KAAKwB,QAAQ66B,YAAY,mBAAoBj6B,GAM3D,OAJAiB,EAAQ8+B,mBAAmB,SAC3B9+B,EAAQuI,GAAG,SAAS,SAASvK,GACzBgQ,EAAK4wB,iBAAiB5gC,MAEnBgC,EAAQ6mB,QAAQpM,EAAS3U,O,qBChHxC,EAAQ,QACR,IAAIvF,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAkC,wBAAI,GAChDpS,EAAI4gB,wBAA0B1O,EAAQI,cAAc,0BAA2B,CAAC,eAChFnQ,OAAO8H,eAAekI,EAAUC,SAAkC,wBAAG,aAAc,CACjFlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAiDC,WACrEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI4gB,yB,qBCjBrB,IAAI5gB,EAAM,EAAQ,QAIlB,SAASw+B,EAAmCC,EAAaC,GACvD,GAA2B,iBAAhBD,EAAX,CACK,GAAI,CAAC,SAAU,YAAY7tB,QAAQ6tB,EAAY35B,gBAAkB,EACpE,OAAO25B,EAAY35B,cAEnB,MAAM9E,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS6hC,IAyDtCvhC,EAAOC,QAzCP,SAAsCuhC,EAAgBxiC,GAGpD,IAAIyiC,EACJ,IAHAD,EAAiBA,GAAkB,IAGhBxiC,EAAQ83B,gBACzB2K,EAAWJ,EAAmCG,EAAexiC,EAAQ83B,cAAe,CAClFn3B,KAAM,uBACNC,QAAS,YAAcZ,EAAQ83B,aAAtB,yDACiB0K,EAAexiC,EAAQ83B,cAAgB,QAErD,OAAO2K,EAEvB,IAAK5+B,EAAIpE,KAAKkQ,SAAU,OAAO8yB,EAE/B,GAAIz8B,OAAOyD,UAAUmD,eAAelD,KAAK,gGAAa1J,EAAQ43B,OAE5D6K,EAAWJ,EADG,gGAAYriC,EAAQ43B,KACqB,CACrDj3B,KAAM,+BACNC,QAAS,WAAaZ,EAAQ43B,IAArB,iEACiB,gGAAY53B,EAAQ43B,KAAO,QAEzC,OAAO6K,EAGvB,IAAIC,EAAU,GACd,IAEEA,EADe7+B,EAAIpE,KAAKiU,4BAA4B7P,EAAIpE,KAAKkU,WAC1C,gGAAY4sB,aAAe18B,EAAIpE,KAAKwV,gBACvD,MAAOtS,IACT,OAAI+/B,GAAW18B,OAAOyD,UAAUmD,eAAelD,KAAKg5B,EAAS1iC,EAAQ63B,gBAEnE4K,EAAWJ,EADIK,EAAQ1iC,EAAQ63B,cACyB,CACtDl3B,KAAM,uBACNC,QAAS,WAAaZ,EAAQ63B,aAArB,yDACiB6K,EAAQ1iC,EAAQ63B,cAAgB,QAEvC4K,I,ovlBC7DzB,IAAIE,EAAkB,EAAQ,QAAsBA,gBAMpD,SAASC,EAAQ9gC,EAAM+gC,QACF,IAAbA,IAAuBA,EAAW,IACtC5iC,KAAK6B,KAAOA,EACZ7B,KAAK4iC,SAAWA,EAChB5iC,KAAKuY,WAAa,GAEtBoqB,EAAQn5B,UAAUq5B,aAAe,SAAUhhC,EAAMqE,GAE7C,OADAlG,KAAKuY,WAAW1W,GAAQqE,EACjBlG,MAEX2iC,EAAQn5B,UAAUs5B,aAAe,SAAUzrB,GAEvC,OADArX,KAAK4iC,SAASz9B,KAAKkS,GACZrX,MAEX2iC,EAAQn5B,UAAUu5B,gBAAkB,SAAUlhC,GAE1C,cADO7B,KAAKuY,WAAW1W,GAChB7B,MAEX2iC,EAAQn5B,UAAU3G,SAAW,WAKzB,IAJA,IAAImgC,EAAcjD,QAAQ//B,KAAK4iC,SAAShiC,QACpCqiC,EAAU,IAAMjjC,KAAK6B,KAErB0W,EAAavY,KAAKuY,WACb1X,EAAI,EAAGqiC,EAAiBn9B,OAAOC,KAAKuS,GAAa1X,EAAIqiC,EAAetiC,OAAQC,IAAK,CACtF,IAAIsiC,EAAgBD,EAAeriC,GAC/BuiC,EAAY7qB,EAAW4qB,GACvB,MAAOC,IACPH,GAAW,IAAME,EAAgB,KAAQT,EAAgB,GAAKU,GAAa,KAGnF,OAAOH,GAAYD,EAAqB,IAAMhjC,KAAK4iC,SAAS/5B,KAAI,SAAUw6B,GAAK,OAAOA,EAAExgC,cAAeuC,KAAK,IAAM,KAAOpF,KAAK6B,KAAO,IAApG,OAMrCd,EAAOC,QAAU,CACb2hC,QAASA,I,uBC3Cb,IAAI/+B,EAAM,EAAQ,QACdhE,EAAUgE,EAAIpE,KAAKI,QACnB0jC,EAAW,EAAQ,QAgGvB1/B,EAAI2/B,SAAW3jC,EAAQ,CAKrBC,YAAa,SAAkBwD,GAC7BrD,KAAKqD,QAAUA,EACfrD,KAAKwD,KAAO,KACZxD,KAAKQ,MAAQ,KACbR,KAAK6R,WAAa,EAClB7R,KAAKwjC,cAAgB,EACrBxjC,KAAKwC,aAAe,IAAIoB,EAAImrB,aACxB1rB,IACFrD,KAAK0S,WAAarP,EAAQ7B,QAAQiiC,aAClCzjC,KAAK0jC,aAAergC,EAAQ7B,QAAQ8B,OAAOogC,eAmB/CC,SAAU,SAAkBx6B,GAC1B,IAAI7F,EACA9B,EAAUxB,KAAKqD,QAAQ7B,QACvBI,EAAY5B,KAAKqD,QAAQzB,UAC7B,IACE0B,EAAS9B,EAAQoiC,iBAAiBhiC,GAAW,GAC7C,MAAOc,GAAK1C,KAAKQ,MAAQkC,EAE3B,IAAK1C,KAAK6jC,cAAe,CACvB,GAAI16B,EAAUA,EAASnJ,KAAKQ,MAAO,WAC9B,GAAIR,KAAKQ,MAAO,MAAMR,KAAKQ,MAChC,OAAO,KAGT,IAAI4B,EAASwB,EAAIpE,KAAK2I,KAAKnI,KAAKqD,QAAQjB,QACxC,GAAKpC,KAAK8jC,eAEH,CACL,IAAIC,EAAczgC,EAAO0gC,WACE,iBAAhBD,IAA0BA,EAAc,CAACA,IACpD,IAAK,IAAIljC,EAAI,EAAGA,EAAIkjC,EAAYnjC,OAAQC,IACtCuB,EAAO2hC,EAAYljC,IAAMb,KAAK8jC,eAAejjC,GAE/C,OAAOW,EAAQ66B,YAAYr8B,KAAKqD,QAAQzB,UAAWQ,EAAQ+G,GAP3D,OAAOA,EAAWA,EAAS,KAAM,MAAQ,MAgB7C06B,YAAa,WAEX,OADA7jC,KAAKikC,wBACDjkC,KAAK8jC,qBACmBt8B,IAAxBxH,KAAK8jC,qBAA8B,GAOzCG,oBAAqB,WACnB,GAAIl+B,OAAOyD,UAAUmD,eAAelD,KAAKzJ,KAAM,kBAAmB,OAAOA,KAAK8jC,eAC9E9jC,KAAK8jC,oBAAiBt8B,EAEtB,IAAIlE,EAAStD,KAAKqD,QAAQ7B,QAAQoiC,iBAAiB5jC,KAAKqD,QAAQzB,WAChE,IAAK0B,EAAQ,OAAOtD,KAAK8jC,eAGzB,GADA9jC,KAAK8jC,eAAiB,KAClBxgC,EAAO4gC,cACJZ,EAASjlB,OAAOre,KAAKwD,KAAMF,EAAO4gC,aACrC,OAAOlkC,KAAK8jC,eAIhB,IAAIK,EAAQ7gC,EAAO8gC,YAUnB,MATqB,iBAAVD,IAAoBA,EAAQ,CAACA,IACxCvgC,EAAIpE,KAAKyF,UAAUwE,KAAKzJ,KAAMmkC,GAAO,SAAUE,GAC7C,IAAI3gC,EAAS4/B,EAASjlB,OAAOre,KAAKwD,KAAM6gC,GACpC3gC,IACF1D,KAAK8jC,eAAiB9jC,KAAK8jC,gBAAkB,GAC7C9jC,KAAK8jC,eAAe3+B,KAAKzB,OAItB1D,KAAK8jC,mB,mBC9LhB,IAAIQ,EAAqC,oBAAZ,QAA2B95B,OAAO85B,iBAAmB95B,OAAO85B,gBAAgBC,KAAK/5B,SACnE,oBAAd,UAAuE,mBAAnCmO,OAAO6rB,SAASF,iBAAiCE,SAASF,gBAAgBC,KAAKC,UAEhJ,GAAIF,EAAiB,CAEnB,IAAIG,EAAQ,IAAIt9B,WAAW,IAE3BpG,EAAOC,QAAU,WAEf,OADAsjC,EAAgBG,GACTA,OAEJ,CAKL,IAAIC,EAAO,IAAIr+B,MAAM,IAErBtF,EAAOC,QAAU,WACf,IAAK,IAAW6Y,EAAPhZ,EAAI,EAAMA,EAAI,GAAIA,IACN,IAAV,EAAJA,KAAiBgZ,EAAoB,WAAhB1J,KAAK8B,UAC/ByyB,EAAK7jC,GAAKgZ,MAAY,EAAJhZ,IAAa,GAAK,IAGtC,OAAO6jC,K,2uDC/BX,EAAQ,QACR,IAAI9gC,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAwC,8BAAI,GACtDpS,EAAI6hB,8BAAgC3P,EAAQI,cAAc,gCAAiC,CAAC,eAC5FnQ,OAAO8H,eAAekI,EAAUC,SAAwC,8BAAG,aAAc,CACvFlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA8DC,WAClFF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI6hB,+B,m9BCjBrB,EAAQ,QACR,IAAI7hB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAyB,eAAI,GACvCpS,EAAIigB,eAAiB/N,EAAQI,cAAc,iBAAkB,CAAC,eAC9DnQ,OAAO8H,eAAekI,EAAUC,SAAyB,eAAG,aAAc,CACxElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAqDC,WACzEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIigB,gB,uBCjBrB,EAAQ,QACR,IAAIjgB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAA0B,gBAAI,GACxCpS,EAAI0f,gBAAkBxN,EAAQI,cAAc,kBAAmB,CAAC,eAChEnQ,OAAO8H,eAAekI,EAAUC,SAA0B,gBAAG,aAAc,CACzElH,IAAK,WAEH,OADY,EAAQ,SAGtBf,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI0f,iB,uBChBrB,EAAQ,QACR,IAAI1f,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAkB,QAAI,GAChCpS,EAAIuZ,QAAUrH,EAAQI,cAAc,UAAW,CAAC,eAChD,EAAQ,QACRnQ,OAAO8H,eAAekI,EAAUC,SAAkB,QAAG,aAAc,CACjElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA+CC,WACnEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIuZ,S,m59DClBrB,IAGIwnB,EAHA/gC,EAAM,EAAQ,QAClB,EAAQ,QACR,EAAQ,QA2LRA,EAAIghC,OAAShhC,EAAIpE,KAAKI,QAAQ,CA0J5BC,YAAa,SAAgBE,QACXyH,IAAZzH,IAAuBA,EAAU,IACrCA,EAAUC,KAAK6kC,mBAAmB9kC,GAElC6D,EAAIpE,KAAKiN,KAAKhD,KAAKzJ,KAAMA,KAAKgG,MAAM,SAAU+E,EAAK7E,GACjDlG,KAAKmgB,IAAIpV,EAAKhL,EAAQgL,GAAM7E,OAiChC22B,eAAgB,SAAwB1zB,GACtC,IA0BMC,EA1BFiI,EAAOrR,KAEX,SAAS8kC,EAAO17B,GACdD,EAASC,EAAKA,EAAM,KAAOiI,EAAKuI,aAGlC,SAASmrB,EAAUrS,EAAKtpB,GACtB,OAAO,IAAIxF,EAAIpE,KAAKgB,MAAM4I,GAAO,IAAI3I,MAAS,CAC5CC,KAAM,mBACNC,QAAS+xB,EACT7wB,KAAM,qBAuBNwP,EAAKuI,YAC6B,mBAAzBvI,EAAKuI,YAAY9K,IAnB5BuC,EAAKuI,YAAY9K,KAAI,SAAS1F,GACxBA,IAGFA,EAAM27B,EAFI,mCACR1zB,EAAKuI,YAAY/Z,YAAYgC,KACVuH,IAEvB07B,EAAO17B,OAKLA,EAAM,KACLiI,EAAKuI,YAAYM,aAAgB7I,EAAKuI,YAAYW,kBACrDnR,EAAM27B,EAAU,wBAElBD,EAAO17B,IASEiI,EAAK2zB,mBACd3zB,EAAK2zB,mBAAmB1zB,SAAQ,SAASlI,EAAK67B,GACxC77B,IACFA,EAAM27B,EAAU,gDAAiD37B,IAEnEiI,EAAKuI,YAAcqrB,EACnBH,EAAO17B,MAGT07B,EAAOC,EAAU,4BAmBrB55B,OAAQ,SAAgBpL,EAASmlC,GAC/BA,EAAmBA,IAAoB,EACvCnlC,EAAUC,KAAK6kC,mBAAmB9kC,GAClC6D,EAAIpE,KAAKiN,KAAKhD,KAAKzJ,KAAMD,GAAS,SAAUgL,EAAK7E,IAC3Cg/B,GAAoBn/B,OAAOyD,UAAUmD,eAAelD,KAAKzJ,KAAKgG,KAAM+E,IACpEnH,EAAIkS,QAAQqvB,WAAWp6B,KACzB/K,KAAKmgB,IAAIpV,EAAK7E,OAcpBk/B,aAAc,SAAsB1+B,GAClC1G,KAAKqlC,QAEL,IAAItlC,EAAU4C,KAAKC,MAAMgB,EAAIpE,KAAKiH,aAAaC,IAC3C4+B,EAAkB,IAAI1hC,EAAI2hC,sBAAsB7+B,GAChD8+B,EAAQ,IAAI5hC,EAAI6hC,wBASpB,OARAD,EAAME,UAAUC,QAAQL,GACxBE,EAAMl0B,SAAQ,SAAUlI,EAAK67B,GAC3B,GAAI77B,EAAK,MAAMA,EACVrJ,EAAQ6Z,YAAcqrB,KAG7BjlC,KAAKH,YAAYE,GAEVC,MAQTqlC,MAAO,WAELzhC,EAAIpE,KAAKiN,KAAKhD,KAAKzJ,KAAMA,KAAKgG,MAAM,SAAU+E,UACrC/K,KAAK+K,MAId/K,KAAKmgB,IAAI,mBAAe3Y,GACxBxH,KAAKmgB,IAAI,0BAAsB3Y,IAQjC2Y,IAAK,SAAaxR,EAAUzI,EAAOwS,QACnBlR,IAAVtB,QACmBsB,IAAjBkR,IACFA,EAAe1Y,KAAKgG,KAAK2I,IAGzB3O,KAAK2O,GADqB,mBAAjB+J,EACQA,EAAajP,KAAKzJ,MAElB0Y,GAEG,gBAAb/J,GAA8B3O,KAAK2O,GAE5C3O,KAAK2O,GAAY/K,EAAIpE,KAAKyN,MAAMjN,KAAK2O,GAAWzI,GAEhDlG,KAAK2O,GAAYzI,GAUrBF,KAAM,CACJ4T,YAAa,KACborB,mBAAoB,KACpBpwB,OAAQ,KACRgxB,OAAQ,KACRC,YAAa,GACbrG,WAAY,KACZ9kB,cAAUlT,EACVgL,YAAa,CACXuZ,QAAS,MAEXrZ,gBAAYlL,EACZk8B,aAAc,GACdoC,iBAAiB,EACjB3X,YAAY,EACZ+L,kBAAkB,EAClB7E,kBAAkB,EAClBE,sBAAsB,EACtBmC,0BAA2B,SAC3BmB,oBAAgBrxB,EAChBuyB,kBAAkB,EAClBx2B,sBAAsB,EACtBwiC,kBAAkB,EAClBC,gBAAiB,KACjBC,eAAe,EACfn8B,kBAAmB,EACnBqe,iBAAkB,KAClBD,gBAAgB,EAChBpW,kBAAmB,GACnBmmB,uBAAuB,EACvBiO,sBAAsB,EACtBrG,8BAA0Br4B,EAC1BuoB,kBAAmB,IACnBoW,mBAAmB,EACnBC,qBAAsB,UASxBvB,mBAAoB,SAA4B9kC,GAK9C,OAJIA,EAAQma,aAAena,EAAQwa,mBACjCxa,EAAU6D,EAAIpE,KAAK2I,KAAKpI,IAChB6Z,YAAc,IAAIhW,EAAIktB,YAAY/wB,IAErCA,GASTsmC,sBAAuB,SAA+BC,GACpD3B,EAAqB2B,EAET,OAARA,GAAmC,mBAAZv1B,UACzB4zB,EAAqB5zB,SAEvB,IAAIJ,EAAe,CAAC/M,EAAI2iC,QAAS3iC,EAAIktB,YAAaltB,EAAI6hC,yBAClD7hC,EAAIgS,KACNjF,EAAaxL,KAAKvB,EAAIgS,IAClBhS,EAAIgS,GAAGooB,eACTrtB,EAAaxL,KAAKvB,EAAIgS,GAAGooB,gBAG7Bp6B,EAAIpE,KAAKkR,YAAYC,EAAcg0B,IAMrC7zB,sBAAuB,WACrB,OAAO6zB,KASX/gC,EAAIN,OAAS,IAAIM,EAAIghC,Q,q+rCCzmBrB,EAAQ,QACR,IAAIhhC,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAIye,IAAMvM,EAAQI,cAAc,MAAO,CAAC,eACxCnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA0CC,WACrEF,EAAMuD,QAAU,EAAQ,QAAwCA,QACzDvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIye,K,uBClBrB,IAAI2N,EAAgB,EAAQ,QAAoBA,cAMhD,SAASwW,EAAQtgC,GACblG,KAAKkG,MAAQA,EAGjBsgC,EAAQh9B,UAAU3G,SAAW,WACzB,OAAOmtB,EAAc,GAAKhwB,KAAKkG,QAMnCnF,EAAOC,QAAU,CACbwlC,QAASA,I,+hQClBb,EAAQ,QACR,IAAI5iC,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAsB,YAAI,GACpCpS,EAAI+f,YAAc7N,EAAQI,cAAc,cAAe,CAAC,eACxDnQ,OAAO8H,eAAekI,EAAUC,SAAsB,YAAG,aAAc,CACrElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAkDC,WAC7EF,EAAMuD,QAAU,EAAQ,QAAgDA,QACjEvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI+f,a,s10CClBrB,IAAI8iB,EAAe,EAAQ,QAAmBA,aAsE9C1lC,EAAOC,QAAU,CACb0sB,WA9DJ,SAAoB/pB,EAAQhD,EAAS8C,GACjC,IAAIijC,EAAgBD,EAAa9lC,GAG7BgmC,EAAcD,EAAcrkC,QAAQ,iBACxC,GAAIskC,EAAa,CACb,GAA0B,UAAtBA,EAAYzgC,MACZ,MA2CZ,SAAoBvF,GAChB,IAAIimC,EAAYjmC,EAAQ0B,QAAQ,eAC5BwkC,EAAelmC,EAAQ0B,QAAQ,kBAC/B7B,EAAQ,IAAIC,MAAMomC,EAAa3gC,OAAS2gC,GAE5C,OADArmC,EAAME,KAAOF,EAAMqB,KAAO+kC,EAAU1gC,OAAS0gC,EACtCpmC,EAhDOsmC,CAAWJ,GACd,GAA0B,UAAtBC,EAAYzgC,MAEnB,OAKR,IAAI6gC,EAAYL,EAAcrkC,QAAQ,eAElC2kC,EAAavjC,EAAM6L,QAAQy3B,EAAU7gC,OACzC,GAAK8gC,EAAL,CAIA,IAAI5gC,EAAS,GAET6gC,EAAyBD,EAAWC,uBACxC,GAAIA,EAAwB,CACxB,IAAIC,EAAeF,EAAW13B,QAAQ23B,GAEZ,WAAtBC,EAAa3mC,KACb6F,EAAO6gC,GAA0BP,EAAcxkC,KAE/CkE,EAAO6gC,GAA0BtjC,EAAOf,MAAM8jC,EAAcxkC,KAAKW,WAAYqkC,GAMrF,IADA,IAAIC,EAAmBH,EAAWI,uBACzBvmC,EAAI,EAAGA,EAAIsmC,EAAiBvmC,OAAQC,IAAK,CAC9C,IAAIgB,EAAOslC,EAAiBtmC,GACxB6lC,EAAcrkC,QAAQR,KAEtBuE,EAAOvE,GAAQmlC,EAAW13B,QAAQzN,GAAMqW,OAAOwuB,EAAcrkC,QAAQR,GAAMqE,QAInF,IAAIxC,EAAS,GAEb,OADAA,EAAOqjC,EAAU7gC,OAASE,EACnB1C,M,yy8BCxDX,EAAQ,QACR,IAAIE,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAuB,aAAI,GACrCpS,EAAI8gB,aAAe5O,EAAQI,cAAc,eAAgB,CAAC,eAC1DnQ,OAAO8H,eAAekI,EAAUC,SAAuB,aAAG,aAAc,CACtElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAyCC,WAC7DF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI8gB,c,uBCjBrB,EAAQ,QACR,IAAI9gB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAkB,QAAI,GAChCpS,EAAIggB,QAAU9N,EAAQI,cAAc,UAAW,CAAC,eAChD,EAAQ,QACRnQ,OAAO8H,eAAekI,EAAUC,SAAkB,QAAG,aAAc,CACjElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA8CC,WACzEF,EAAMuD,QAAU,EAAQ,QAA4CA,QAC7DvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIggB,S,qBCnBrB,IAAIhgB,EAAM,EAAQ,QACdpE,EAAO,EAAQ,QACf6vB,EAAO,EAAQ,QAqGnBtuB,EAAOC,QAAU,CACfI,aA7EF,SAAsBC,GACpBguB,EAAKjuB,aAAaC,GAGd,CAAC,MAAO,QAAQmT,QAAQnT,EAAIC,YAAYmZ,QAAU,GA3BxD,SAAsBpZ,GACpB,IAAIW,EAAQX,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAAWI,MAClDC,EAAU,IAAI2B,EAAIumB,IAAIqF,QACtBptB,EAASf,EAAIe,OAEb+M,EAAUnN,EAAMmN,QACpB,GAAIA,EAAS,CACX,IAAIE,EAAgBrN,EAAMsN,QAAQH,GAElC,QAAe3H,KADfpF,EAASA,EAAO+M,IACU,OAE1B,GAA2B,cAAvBE,EAAc9O,KAAsB,CACtC,IAAI8mC,EAAch4B,EAAcxN,KAChCR,EAAIC,YAAYY,KAAOD,EAAQqlC,MAAMllC,EAAQiN,EAAeg4B,GAAa,QAEzEhmC,EAAIC,YAAYY,KAAOE,OAGzBf,EAAIC,YAAYY,KAAOD,EAAQqlC,MAAMllC,EAAQJ,EAAOA,EAAMH,MACxDG,EAAMyB,OAASjE,EAAKgF,OAAO+D,WAAWlH,EAAIO,WAAa,WASzD2lC,CAAalmC,IAyEfiB,aArEF,SAAsBC,GAGpB,IAAIiB,EAFJ6rB,EAAK/sB,aAAaC,GAGlB,IACEiB,GAAO,IAAII,EAAIumB,IAAIC,QAASxnB,MAAML,EAAKC,aAAaN,KAAKW,YACzD,MAAOH,GACPc,EAAO,CACLT,KAAMR,EAAKC,aAAaU,WACxBD,QAASV,EAAKC,aAAaW,eAI3BK,EAAK6mB,SAAQ7mB,EAAOA,EAAK6mB,QACzB7mB,EAAK/C,QAAO+C,EAAOA,EAAK/C,OACxB+C,EAAKT,KACPR,EAAK/B,MAAQhB,EAAKgB,MAAM,IAAIC,MAAS,CACnCC,KAAM8C,EAAKT,KACXpC,QAAS6C,EAAKP,UAGhBV,EAAK/B,MAAQhB,EAAKgB,MAAM,IAAIC,MAAS,CACnCC,KAAM6B,EAAKC,aAAaU,WACxBvC,QAAS,QA+CbyC,YA1CF,SAAqBb,GAGnB,IAAIoB,EAFJ0rB,EAAKjsB,YAAYb,GAGjB,IAAIlB,EAAMkB,EAAKc,QACXnB,EAAOK,EAAKC,aAAaN,KACzBN,EAAYP,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAC3C8B,EAAS9B,EAAU8B,OAInByL,GAFiBvN,EAAUwN,eAEjB1L,EAAOyL,SACrB,GAAIA,EAAS,CACX,IAAIE,EAAgB3L,EAAO4L,QAAQH,GAC/BE,EAAcm4B,eAChB7jC,EAAS,IAAIC,EAAIumB,IAAIC,OACrB7nB,EAAKiB,KAAK2L,GAAW3P,EAAKmuB,kBACa,IAArC/pB,EAAI0O,WAAWma,kBAA0BlqB,EAAKC,aAAaoF,OAASrF,EAAKC,aAAaN,KACtFyB,EACA0L,IAE8B,cAAvBA,EAAc9O,MACvBoD,EAAS,IAAIC,EAAIumB,IAAIC,OACrB7nB,EAAKiB,KAAK2L,GAAWxL,EAAOf,MAAMV,EAAKW,WAAYwM,IACnB,WAAvBA,EAAc9O,MAAqB8O,EAAco4B,YAC1DllC,EAAKiB,KAAK2L,GAAWjN,EAErBK,EAAKiB,KAAK2L,GAAWE,EAAc6I,OAAOhW,QAEvC,GAAIA,EAAKtB,OAAS,EAAG,CAE1B,IAAI4C,GADJG,EAAS,IAAIC,EAAIumB,IAAIC,QACHxnB,MAAMV,EAAKW,WAAYa,GACzClE,EAAK2L,OAAO5I,EAAKiB,KAAMA,O,uBChG3B,IAAII,EAAM,EAAQ,QAelBA,EAAIksB,mBAAqBlsB,EAAIpE,KAAKI,QAAQ,CAExCC,YAAa,WACXG,KAAK0nC,QAAU,IAMjBC,UAAW,SAAmBC,GAC5B,OAAO5nC,KAAK0nC,QAAQE,GAAa5nC,KAAK0nC,QAAQE,GAAW5/B,MAAM,GAAK,IAGtE4D,GAAI,SAAYg8B,EAAWC,EAAUC,GAQnC,OAPI9nC,KAAK0nC,QAAQE,GACfE,EACE9nC,KAAK0nC,QAAQE,GAAWjC,QAAQkC,GAChC7nC,KAAK0nC,QAAQE,GAAWziC,KAAK0iC,GAE/B7nC,KAAK0nC,QAAQE,GAAa,CAACC,GAEtB7nC,MAGT2pB,QAAS,SAAiBie,EAAWC,EAAUC,GAE7C,OADAD,EAASE,UAAW,EACb/nC,KAAK4L,GAAGg8B,EAAWC,EAAUC,IAGtCppB,eAAgB,SAAwBkpB,EAAWC,GACjD,IAAIF,EAAY3nC,KAAK0nC,QAAQE,GAC7B,GAAID,EAAW,CAGb,IAFA,IAAI/mC,EAAS+mC,EAAU/mC,OACnBonC,GAAY,EACPnnC,EAAI,EAAGA,EAAID,IAAUC,EACxB8mC,EAAU9mC,KAAOgnC,IACnBG,EAAWnnC,GAGXmnC,GAAY,GACdL,EAAUM,OAAOD,EAAU,GAG/B,OAAOhoC,MAGTmiC,mBAAoB,SAA4ByF,GAM9C,OALIA,SACK5nC,KAAK0nC,QAAQE,GAEpB5nC,KAAK0nC,QAAU,GAEV1nC,MAMT+e,KAAM,SAAc6oB,EAAWM,EAAWC,GACnCA,IAAcA,EAAe,cAClC,IAAIR,EAAY3nC,KAAK2nC,UAAUC,GAC3BQ,EAAQT,EAAU/mC,OAEtB,OADAZ,KAAKqoC,cAAcV,EAAWO,EAAWC,GAClCC,EAAQ,GAMjBC,cAAe,SAAuBV,EAAWp+B,EAAM4+B,EAAcG,GACnE,IAAIj3B,EAAOrR,KACPQ,EAAQ8nC,GAAa,KAEzB,SAASC,EAAiBn/B,GACxB,GAAIA,IACF5I,EAAQoD,EAAIpE,KAAKgB,MAAMA,GAAS,IAAIC,MAAS2I,GACzCiI,EAAKm3B,sBACP,OAAOL,EAAa1+B,KAAK4H,EAAM7Q,GAGnC6Q,EAAKg3B,cAAcV,EAAWp+B,EAAM4+B,EAAc3nC,GAGpD,KAAOmnC,EAAU/mC,OAAS,GAAG,CAC3B,IAAIinC,EAAWF,EAAU3qB,QACzB,GAAI6qB,EAASE,SAEX,YADAF,EAASl+B,MAAM0H,EAAM9H,EAAKlJ,OAAO,CAACkoC,KAGlC,IACEV,EAASl+B,MAAM0H,EAAM9H,GACrB,MAAOH,GACP5I,EAAQoD,EAAIpE,KAAKgB,MAAMA,GAAS,IAAIC,MAAS2I,GAE/C,GAAI5I,GAAS6Q,EAAKm3B,qBAEhB,YADAL,EAAa1+B,KAAK4H,EAAM7Q,GAK9B2nC,EAAa1+B,KAAK4H,EAAM7Q,IA2B1BioC,aAAc,SAAsBd,GAClC,IAAIt2B,EAAOrR,KAYX,OATI2nC,EAAUD,UAASC,EAAYA,EAAUD,SAE7C9jC,EAAIpE,KAAKiN,KAAKk7B,GAAW,SAASe,EAAOC,GACd,mBAAdA,IAA0BA,EAAY,CAACA,IAClD/kC,EAAIpE,KAAKyF,UAAU0jC,GAAW,SAASx/B,GACrCkI,EAAKzF,GAAG88B,EAAOv/B,SAIZkI,GAmBTqvB,iBAAkB,SAA0B7+B,EAAM+lC,EAAWz+B,EAAU2+B,GAGrE,OAFA9nC,KAAK6B,GAAQsH,EACbnJ,KAAKsd,YAAYsqB,EAAWz+B,EAAU2+B,GAC/B9nC,MAMT4oC,sBAAuB,SAA+B/mC,EAAM+lC,EAAWz+B,EAAU2+B,GAE/E,OADA3+B,EAAS4+B,UAAW,EACb/nC,KAAK0gC,iBAAiB7+B,EAAM+lC,EAAWz+B,EAAU2+B,IA0B1De,kBAAmB,SAA2B1/B,GAC5C,IAAIkI,EAAOrR,KASX,OARAmJ,GACE,WACEkI,EAAKqvB,iBAAiB/2B,MAAM0H,EAAM3H,cAEpC,WACE2H,EAAKu3B,sBAAsBj/B,MAAM0H,EAAM3H,cAGpC1J,QAQX4D,EAAIksB,mBAAmBtmB,UAAU8T,YAAc1Z,EAAIksB,mBAAmBtmB,UAAUoC,GAKhF7K,EAAOC,QAAU4C,EAAIksB,oB,i4nEC1OrB,IAAItwB,EAAO,EAAQ,QAEnB,SAASspC,KAOT,SAASC,EAAQtlC,GACf,OAAIA,EAAMulC,aAAsC,QAAvBvlC,EAAMlC,IAAIopB,SAC1BlnB,EAAM5B,KAEN4B,EAAM5B,KAAK,GAAGiD,cAAgBrB,EAAM5B,KAAK2G,OAAO,GAI3D,SAASygC,EAAmBzR,EAAQ5R,EAAQvS,EAAOpK,GACjDzJ,EAAKiN,KAAK4G,EAAM/D,SAAS,SAASzN,EAAM8V,GACtC,IAAIzR,EAAQ0f,EAAO/jB,GACnB,GAAIqE,QAAJ,CAEA,IAAIkS,EAAa2wB,EAAQpxB,GAEzBuxB,EADA9wB,EAAaof,EAASA,EAAS,IAAMpf,EAAaA,EACtBlS,EAAOyR,EAAQ1O,OA2C/C,SAASigC,EAAgBrnC,EAAMqE,EAAOmN,EAAOpK,GACvC/C,UACe,cAAfmN,EAAM9S,KACR0oC,EAAmBpnC,EAAMqE,EAAOmN,EAAOpK,GACf,SAAfoK,EAAM9S,KA/BnB,SAAuBsB,EAAM/B,EAAMuT,EAAOpK,GACxC,IAAIkgC,EAAc91B,EAAMsE,QAAU,GAEd,IAAhB7X,EAAKc,OAKTpB,EAAKyF,UAAUnF,GAAM,SAAUgoB,EAAG0F,GAChC,IAAI4b,EAAS,KAAO5b,EAAI,GACxB,GAA2B,QAAvBna,EAAM9R,IAAIopB,SAEZye,GAAkB,QACb,GAAI/1B,EAAM+D,WACf,GAAI+xB,EAAYtnC,KAAM,CACpB,IAAImD,EAAQnD,EAAKY,MAAM,KACvBuC,EAAMhC,MACNgC,EAAMG,KAAK4jC,EAAQI,IACnBtnC,EAAOmD,EAAMI,KAAK,WAGpBgkC,EAAS,KAAOD,EAAYtnC,KAAOsnC,EAAYtnC,KAAO,UAAYunC,EAEpEF,EAAgBrnC,EAAOunC,EAAQthB,EAAGqhB,EAAalgC,MAnB/CA,EAAGQ,KAAKzJ,KAAM6B,EAAM,MA4BpBwnC,CAAcxnC,EAAMqE,EAAOmN,EAAOpK,GACV,QAAfoK,EAAM9S,KA7CnB,SAAsBsB,EAAMgH,EAAKwK,EAAOpK,GACtC,IAAIpI,EAAI,EACRrB,EAAKiN,KAAK5D,GAAK,SAAUkC,EAAK7E,GAC5B,IACI8hC,GADS30B,EAAM+D,UAAY,IAAM,WACZvW,IAAO,IAC5ByoC,EAAUtB,GAAY30B,EAAMtI,IAAIlJ,MAAQ,OACxC0nC,EAAYvB,GAAY30B,EAAMnN,MAAMrE,MAAQ,SAChDqnC,EAAgBrnC,EAAOynC,EAASv+B,EAAKsI,EAAMtI,IAAK9B,GAChDigC,EAAgBrnC,EAAO0nC,EAAWrjC,EAAOmN,EAAMnN,MAAO+C,MAsCtDugC,CAAa3nC,EAAMqE,EAAOmN,EAAOpK,GAEjCA,EAAGpH,EAAMwR,EAAM8S,aAAajgB,GAAOrD,aAvEvCimC,EAAqBt/B,UAAUigC,UAAY,SAASrnC,EAAQqB,EAAOwF,GACjEggC,EAAmB,GAAI7mC,EAAQqB,EAAOwF,IA6ExClI,EAAOC,QAAU8nC,G,o6wBCnFjB,EAAQ,QACR,IAAIllC,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAmB,SAAI,GACjCpS,EAAI2f,SAAWzN,EAAQI,cAAc,WAAY,CAAC,eAClDnQ,OAAO8H,eAAekI,EAAUC,SAAmB,SAAG,aAAc,CAClElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA+CC,WAC1EF,EAAMuD,QAAU,EAAQ,QAA6CA,QAC9DvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI2f,U,kCCjBrBxd,OAAO8H,eAAe7M,EAAS,aAAc,CAAEkF,OAAO,IACtD,IAAIwjC,EACA,SAAwB3+B,EAAK7E,GACzBlG,KAAK+K,IAAMA,EACX/K,KAAKkG,MAAQA,GAIjBiV,EAA0B,WAC1B,SAASA,EAAS9T,GAGd,GAFArH,KAAK2pC,QAAU,GACf3pC,KAAKqH,KAAO,EACQ,iBAATA,GAAqBA,EAAO,EACnC,MAAM,IAAI5G,MAAM,0CAEpBT,KAAK4pC,UAAYviC,EAwFrB,OAtFAtB,OAAO8H,eAAesN,EAAS3R,UAAW,SAAU,CAChDsF,IAAK,WACD,OAAO9O,KAAKqH,MAEhB0G,YAAY,EACZW,cAAc,IAElByM,EAAS3R,UAAUqgC,cAAgB,SAAU7c,GACpChtB,KAAK8pC,YAIN9pC,KAAK8pC,WAAWC,KAAO/c,EACvBA,EAAKgd,KAAOhqC,KAAK8pC,YAJjB9pC,KAAKiqC,SAAWjd,EAMpBhtB,KAAK8pC,WAAa9c,EAClBhtB,KAAKqH,QAET8T,EAAS3R,UAAU0gC,eAAiB,WAChC,GAAKlqC,KAAKiqC,SAAV,CAGA,IAAIjd,EAAOhtB,KAAKiqC,SACZE,EAAWnd,EAAK+c,KAOpB,OANII,IACAA,EAASH,UAAOxiC,GAEpBwlB,EAAK+c,UAAOviC,EACZxH,KAAKiqC,SAAWE,EAChBnqC,KAAKqH,OACE2lB,IAEX7R,EAAS3R,UAAU4gC,eAAiB,SAAUpd,GACtChtB,KAAK8pC,aAAe9c,IACpBhtB,KAAK8pC,WAAa9c,EAAKgd,MAEvBhqC,KAAKiqC,WAAajd,IAClBhtB,KAAKiqC,SAAWjd,EAAK+c,MAErB/c,EAAK+c,OACL/c,EAAK+c,KAAKC,KAAOhd,EAAKgd,MAEtBhd,EAAKgd,OACLhd,EAAKgd,KAAKD,KAAO/c,EAAK+c,MAE1B/c,EAAKgd,UAAOxiC,EACZwlB,EAAK+c,UAAOviC,EACZxH,KAAKqH,QAET8T,EAAS3R,UAAUsF,IAAM,SAAU/D,GAC/B,GAAI/K,KAAK2pC,QAAQ5+B,GAAM,CACnB,IAAIiiB,EAAOhtB,KAAK2pC,QAAQ5+B,GAGxB,OAFA/K,KAAKoqC,eAAepd,GACpBhtB,KAAK6pC,cAAc7c,GACZA,EAAK9mB,QAGpBiV,EAAS3R,UAAUoS,OAAS,SAAU7Q,GAClC,GAAI/K,KAAK2pC,QAAQ5+B,GAAM,CACnB,IAAIiiB,EAAOhtB,KAAK2pC,QAAQ5+B,GACxB/K,KAAKoqC,eAAepd,UACbhtB,KAAK2pC,QAAQ5+B,KAG5BoQ,EAAS3R,UAAU4R,IAAM,SAAUrQ,EAAK7E,GACpC,GAAIlG,KAAK2pC,QAAQ5+B,GACb/K,KAAK4b,OAAO7Q,QAEX,GAAI/K,KAAKqH,OAASrH,KAAK4pC,UAAW,CACnC,IACIS,EADWrqC,KAAKkqC,iBACCn/B,WACd/K,KAAK2pC,QAAQU,GAExB,IAAIC,EAAU,IAAIZ,EAAe3+B,EAAK7E,GACtClG,KAAK2pC,QAAQ5+B,GAAOu/B,EACpBtqC,KAAK6pC,cAAcS,IAEvBnvB,EAAS3R,UAAU2S,MAAQ,WAEvB,IADA,IAAInW,EAAOD,OAAOC,KAAKhG,KAAK2pC,SACnB9oC,EAAI,EAAGA,EAAImF,EAAKpF,OAAQC,IAAK,CAClC,IAAIkK,EAAM/E,EAAKnF,GACXmsB,EAAOhtB,KAAK2pC,QAAQ5+B,GACxB/K,KAAKoqC,eAAepd,UACbhtB,KAAK2pC,QAAQ5+B,KAGrBoQ,EA/FkB,GAiG7Bna,EAAQma,SAAWA,G,y3EC1GnB,IAAI3b,EAAO,EAAQ,QAEnB,SAAS0B,KAMT,SAASwkB,EAAUxf,EAAOzC,GACxB,GAAKA,QAAmB+D,IAAVtB,EAEd,OAAQzC,EAAMlD,MACZ,IAAK,YAAa,OAOtB,SAA4BolB,EAAWliB,GACrC,GAAiB,MAAbkiB,EAAmB,OAEvB,IAAIC,EAAS,GACT2kB,EAAe9mC,EAAM6L,QASzB,OARA9P,EAAKiN,KAAK89B,GAAc,SAAS1oC,EAAMwW,GACrC,IAAIyN,EAAezN,EAAY0N,eAAiB1N,EAAYxW,KAAOA,EACnE,GAAIkE,OAAOyD,UAAUmD,eAAelD,KAAKkc,EAAWG,GAAe,CACjE,IACI1f,EAASsf,EADDC,EAAUG,GACQzN,QACf7Q,IAAXpB,IAAsBwf,EAAO/jB,GAAQuE,OAGtCwf,EApBoBI,CAAmB9f,EAAOzC,GACnD,IAAK,MAAO,OAkChB,SAAsBoF,EAAKpF,GACzB,GAAW,MAAPoF,EAAa,OAEjB,IAAIkD,EAAM,GAMV,OALAvM,EAAKiN,KAAK5D,GAAK,SAASkC,EAAK7E,GAC3B,IAAIE,EAASsf,EAAUxf,EAAOzC,EAAMyC,OACV6F,EAAIhB,QAAfvD,IAAXpB,EAAiC,KACrBA,KAEX2F,EA3Ccka,CAAa/f,EAAOzC,GACvC,IAAK,OAAQ,OAqBjB,SAAuB3D,EAAM2D,GAC3B,GAAY,MAAR3D,EAAc,OAElB,IAAIiM,EAAM,GAMV,OALAvM,EAAKyF,UAAUnF,GAAM,SAASoG,GAC5B,IAAIE,EAASsf,EAAUxf,EAAOzC,EAAMkU,aACrBnQ,IAAXpB,EAAsB2F,EAAI5G,KAAK,MAC9B4G,EAAI5G,KAAKiB,MAET2F,EA9Bema,CAAchgB,EAAOzC,GACzC,QAAS,OA4Cb,SAAyByC,EAAOzC,GAC9B,OAAOA,EAAMyU,OAAOhS,GA7CFkgB,CAAgBlgB,EAAOzC,IAX3CvC,EAAWsI,UAAU5G,MAAQ,SAASsD,EAAOzC,GAC3C,OAAOiiB,EAAU/iB,KAAKC,MAAMsD,GAAQzC,IA6DtC1C,EAAOC,QAAUE,G,2ihBClEjB,EAAQ,QACR,IAAI0C,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAA4B,kBAAI,GAC1CpS,EAAIuhB,kBAAoBrP,EAAQI,cAAc,oBAAqB,CAAC,eACpEnQ,OAAO8H,eAAekI,EAAUC,SAA4B,kBAAG,aAAc,CAC3ElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,SAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAwDC,WAC5EF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIuhB,mB,wBCjBrB,kBAAU,EAAQ,QACdqlB,EAAuB,EAAQ,QAC/B5qC,EAAUgE,EAAIpE,KAAKI,QACnB6qC,EAAS7mC,EAAIpE,KAAKirC,OAClBnH,EAAW,EAAQ,QAKnBoH,EAAkB,CAACC,QAAS,EAAGnqC,MAAO,EAAGoqC,SAAU,GAMvD,IAAIC,EAAM,IAAIL,EACdK,EAAIC,YAAc,WAChB,IAAIC,EAAa,SAAS5jB,EAAG1X,GAC3B,IAAI4B,EAAOrR,KACXqR,EAAKm3B,sBAAuB,EAE5Bn3B,EAAK0N,KAAK1N,EAAKspB,KAAKC,cAAc,SAASxxB,GACzC,GAAIA,EACF,GAZiB4hC,EAYG35B,EAXnBtL,OAAOyD,UAAUmD,eAAelD,KAAKihC,EAAiBM,EAAQrQ,KAAKC,cAWzC,CACzB,KAAI6P,GAAUp5B,EAAKo5B,kBAAkBA,EAAOQ,QAM1C,MAAM7hC,EALNA,EAAI8hC,cAAgB75B,EACpBjI,EAAIqhC,OAASp5B,EAAKo5B,OAClBrhC,EAAI+hC,cAAe,EACnB95B,EAAKo5B,OAAO1rB,KAAK,QAAS3V,QAK5BiI,EAAK2N,SAASxe,MAAQ4I,EACtBqG,EAAKrG,QAGPqG,EAAK4B,EAAK2N,SAASxe,OA1B3B,IAAyBwqC,MAgCvBhrC,KAAKorC,SAAS,WAAY,QAAS,QAASL,GAC5C/qC,KAAKorC,SAAS,QAAS,aAAc,UAAWL,GAChD/qC,KAAKorC,SAAS,aAAc,OAAQ,UAAWL,GAC/C/qC,KAAKorC,SAAS,OAAQ,OAAQ,QAASL,GACvC/qC,KAAKorC,SAAS,QAAS,aAAc,aAAcL,GACnD/qC,KAAKorC,SAAS,aAAc,OAAQ,QAASL,GAC7C/qC,KAAKorC,SAAS,OAAQ,mBAAoB,QAASL,GACnD/qC,KAAKorC,SAAS,mBAAoB,cAAe,eAAgBL,GACjE/qC,KAAKorC,SAAS,eAAgB,cAAe,QAASL,GACtD/qC,KAAKorC,SAAS,cAAe,UAAW,QAASL,GACjD/qC,KAAKorC,SAAS,UAAW,QAAS,QAASL,GAC3C/qC,KAAKorC,SAAS,UAAW,WAAY,WAAYL,GACjD/qC,KAAKorC,SAAS,QAAS,WAAY,WAAYL,GAC/C/qC,KAAKorC,SAAS,WAAY,KAAM,KAAML,IAExCF,EAAIC,cAgPJlnC,EAAI2iC,QAAU3mC,EAAQ,CAYpBC,YAAa,SAAiB2B,EAASI,EAAWQ,GAChD,IAAIsY,EAAWlZ,EAAQkZ,SACnB9F,EAASpT,EAAQ8B,OAAOsR,OACxBoxB,EAAkBxkC,EAAQ8B,OAAO0iC,gBAEjCxkC,EAAQ6pC,mBAERz2B,EADEpT,EAAQ8pC,cACD9pC,EAAQ8pC,cAER,aAIbtrC,KAAKyqC,OAASA,GAAUA,EAAOc,OAC/BvrC,KAAKwB,QAAUA,EACfxB,KAAK4B,UAAYA,EACjB5B,KAAKoC,OAASA,GAAU,GACxBpC,KAAKsB,YAAc,IAAIsC,EAAIwqB,YAAY1T,EAAU9F,GACjD5U,KAAKsB,YAAYktB,kBAAkBwX,GACnChmC,KAAKwrC,UAAYhqC,EAAQyc,uBAEzBje,KAAKgf,SAAW,IAAIpb,EAAI2/B,SAASvjC,MACjCA,KAAK26B,KAAO,IAAI6P,EAAqBK,EAAIY,OAAQ,YACjDzrC,KAAKwoC,sBAAuB,EAE5B5kC,EAAIksB,mBAAmBrmB,KAAKzJ,MAC5BA,KAAK+e,KAAO/e,KAAK0rC,WA2BnBvf,KAAM,SAAchjB,GAUlB,OATIA,IAEFnJ,KAAKsB,YAAYktB,kBAAkB,YACnCxuB,KAAK4L,GAAG,YAAY,SAAUrJ,GAC5B4G,EAASM,KAAKlH,EAAMA,EAAK/B,MAAO+B,EAAKiB,UAGzCxD,KAAK2rC,QAEE3rC,KAAKgf,UA0Bd7c,MAAO,SAAegH,GACpB,OAAOnJ,KAAK2rC,MAAM,OAAQxiC,IAM5BwiC,MAAO,SAAeC,EAAOn8B,GAE3B,OADAzP,KAAK26B,KAAKgR,MAAMC,EAAOn8B,EAAMzP,MACtBA,MAyBTwM,MAAO,WAkBL,OAjBAxM,KAAKmiC,mBAAmB,oBACxBniC,KAAKmiC,mBAAmB,gBACxBniC,KAAK4L,GAAG,oBAAoB,SAAyBrJ,GACnDA,EAAK/B,MAAQoD,EAAIpE,KAAKgB,MAAM,IAAIC,MAAM,2BAA4B,CAC/DC,KAAM,sBAAuBiS,WAAW,OAIzC3S,KAAKsB,YAAYsG,SAAW5H,KAAKsB,YAAYsG,OAAOikC,cACtD7rC,KAAKsB,YAAYsG,OAAO4E,QACpBxM,KAAKsB,YAAYwqC,eAClB9rC,KAAKsB,YAAYwqC,iBAElB9rC,KAAKmiC,mBAAmB,SAIrBniC,MA0CT+rC,SAAU,SAAkB5iC,GAE1BA,EAAWvF,EAAIpE,KAAKyJ,GAAGI,UAAUF,EAAU,GAc3CnJ,KAAK4L,GAAG,YAZR,SAASogC,EAAgBhtB,GACvB7V,EAASM,KAAKuV,EAAUA,EAASxe,MAAOwe,EAASxb,MAAM,SAAU4C,IAChD,IAAXA,IAEA4Y,EAAS6kB,cACX7kB,EAAS2kB,WAAW/3B,GAAG,WAAYogC,GAAiB7f,OAEpDhjB,EAASM,KAAKuV,EAAU,KAAM,KAAMpb,EAAIpE,KAAKyJ,GAAGC,aAKjBijB,QAUvC8f,SAAU,SAAkB9iC,GAC1B,IAAIkI,EAAOrR,KAmBXA,KAAK+rC,UAlBL,SAAyB3iC,EAAK5F,GAC5B,GAAI4F,EAAK,OAAOD,EAASC,EAAK,MAC9B,GAAa,OAAT5F,EAAe,OAAO2F,EAAS,KAAM,MAEzC,IACI+iC,EADS76B,EAAK7P,QAAQoiC,iBAAiBvyB,EAAKzP,WACzBsqC,UACnB7lC,MAAMC,QAAQ4lC,KAAYA,EAAYA,EAAU,IACpD,IAAIrmC,EAAQy9B,EAASjlB,OAAO7a,EAAM0oC,GAC9BC,GAAoB,EAOxB,OANAvoC,EAAIpE,KAAKyF,UAAUY,GAAO,SAASW,GAEjC,IAA0B,KAD1B2lC,EAAoBhjC,EAAS,KAAM3C,IAEjC,OAAO5C,EAAIpE,KAAKgN,SAGb2/B,MAYXC,WAAY,WACV,QAAOpsC,KAAKwB,QAAQoiC,iBAAiB5jC,KAAK4B,YAoB5CmO,iBAAkB,WAChB,IAAIs8B,EAAUzoC,EAAIpE,KAAKoI,OACnBvG,EAAMrB,KACN4H,EAAS,KAqGb,OAnGyC,IAArChE,EAAI0O,WAAWma,mBACjB7kB,EAAS,IAAIykC,EAAQC,YACrBpoC,EAAQoP,UAAS,WAAajS,EAAI8qB,aAElCvkB,EAAS,IAAIykC,EAAQ18B,QACdhI,UAAW,EAElBC,EAAO2kC,MAAO,EACd3kC,EAAOgE,GAAG,eAAe,SAAS88B,GAC3B9gC,EAAO2kC,MAAkB,SAAV7D,IAClB9gC,EAAO2kC,MAAO,EACdroC,EAAQoP,UAAS,WAAajS,EAAI8qB,eAKxCnsB,KAAK4L,GAAG,SAAS,SAASxC,GACxBxB,EAAOmX,KAAK,QAAS3V,MAGvBpJ,KAAK4L,GAAG,eAAe,SAAuB1I,EAAYb,EAASE,GACjE,GAAIW,EAAa,IAAK,CACpB7B,EAAIqd,eAAe,WAAY9a,EAAI+a,eAAeC,KAAK4tB,WACvDnrC,EAAIqd,eAAe,YAAa9a,EAAI+a,eAAeC,KAAK6tB,YACxDprC,EAAIuK,GAAG,aAAa,SAAyBpL,GAC3C+B,EAAK/B,MAAQA,EACb+B,EAAK/B,MAAMmS,WAAY,KAGzB,IACI+5B,EADAC,GAA2B,EAK/B,GAH+B,SAA3BtrC,EAAIC,YAAYmZ,SAClBiyB,EAAc5/B,SAASzK,EAAQ,kBAAmB,UAEhCmF,IAAhBklC,IAA8BE,MAAMF,IAAgBA,GAAe,EAAG,CACxEC,GAA2B,EAC3B,IAAIE,EAAc,EAGpB,IAAIC,EAA4B,WAC1BH,GAA4BE,IAAgBH,EAC9C9kC,EAAOmX,KAAK,QAASnb,EAAIpE,KAAKgB,MAC5B,IAAIC,MAAM,4CACRosC,EAAc,OAASH,EAAc,WACvC,CAAEhsC,KAAM,iCAEoC,IAArCkD,EAAI0O,WAAWma,kBACxB7kB,EAAOG,MAEPH,EAAOmX,KAAK,QAIZguB,EAAaxqC,EAAKC,aAAaysB,yBAEnC,GAAyC,IAArCrrB,EAAI0O,WAAWma,kBACjB,GAAIkgB,EAA0B,CAC5B,IAAIK,EAAoB,IAAIX,EAAQC,YACpCU,EAAkBC,OAAS,SAASphC,GAIlC,OAHIA,GAASA,EAAMjL,SACjBisC,GAAehhC,EAAMjL,QAEhByrC,EAAQC,YAAY9iC,UAAUyjC,OAAOtjC,MAAM3J,KAAM0J,YAG1DsjC,EAAkBphC,GAAG,MAAOkhC,GAC5BllC,EAAOgE,GAAG,SAAS,SAASxC,GAC1BujC,GAA2B,EAC3BI,EAAWG,OAAOF,GAClBA,EAAkBjuB,KAAK,OACvBiuB,EAAkBjlC,SAEpBglC,EAAWI,KAAKH,GAAmBG,KAAKvlC,EAAQ,CAAEG,KAAK,SAEvDglC,EAAWI,KAAKvlC,QAId+kC,GACFI,EAAWnhC,GAAG,QAAQ,SAASwhC,GACzBA,GAAOA,EAAIxsC,SACbisC,GAAeO,EAAIxsC,WAKzBmsC,EAAWnhC,GAAG,QAAQ,SAASwhC,GAC7BxlC,EAAOmX,KAAK,OAAQquB,MAEtBL,EAAWnhC,GAAG,MAAOkhC,GAGvBC,EAAWnhC,GAAG,SAAS,SAASxC,GAC9BujC,GAA2B,EAC3B/kC,EAAOmX,KAAK,QAAS3V,UAKpBxB,GAQT8jC,UAAW,SAAc9D,EAAWr+B,EAAMkG,GACpB,mBAATlG,IAAuBkG,EAAOlG,EAAMA,EAAO,MACjDkG,IAAMA,EAAO,cACblG,IAAMA,EAAOvJ,KAAKqtC,gBAAgBzF,EAAW5nC,KAAKgf,WAExCpb,EAAIksB,mBAAmBtmB,UAAUuV,KACvCtV,KAAKzJ,KAAM4nC,EAAWr+B,GAAM,SAAUH,GACzCA,IAAKpJ,KAAKgf,SAASxe,MAAQ4I,GAC/BqG,EAAKhG,KAAKzJ,KAAMoJ,OAOpBikC,gBAAiB,SAAyBzF,GACxC,OAAQA,GACN,IAAK,UACL,IAAK,WACL,IAAK,OACL,IAAK,QACL,IAAK,gBACL,IAAK,aACH,MAAO,CAAC5nC,MACV,IAAK,QACH,MAAO,CAACA,KAAKgf,SAASxe,MAAOR,KAAKgf,UACpC,QACE,MAAO,CAAChf,KAAKgf,YAOnBkL,QAAS,SAAiBpM,EAAS3U,GAKjC,OAJKA,GAA+B,mBAAZ2U,IACtB3U,EAAW2U,EACXA,EAAU,OAEL,IAAIla,EAAIsR,QAAQqJ,SAAUC,KAAKxe,KAAKstC,QAASxvB,EAAS3U,IAM/Dkf,YAAa,WACX,OAAOtiB,OAAOyD,UAAUmD,eAAelD,KAAKzJ,KAAKsB,YAAYe,QAAS,sBAMxEkrC,kBAAmB,WAIjB,OAHAvtC,KAAKwtC,kBAAmB,EACxBxtC,KAAK0e,eAAe,WAAY9a,EAAI+a,eAAeC,KAAK6uB,sBACxDztC,KAAK0e,eAAe,OAAQ9a,EAAI+a,eAAeC,KAAK8uB,MAC7C1tC,MAMTstC,MAAO,WAML,MALkC,UAA9BttC,KAAKwB,QAAQD,IAAIopB,UACa,QAA9B3qB,KAAKwB,QAAQD,IAAIopB,WACnB3qB,KAAK0e,eAAe,QAAS1e,KAAK2tC,YAClC3tC,KAAKsd,YAAY,QAAStd,KAAK2tC,aAE1B3tC,MAMT2tC,WAAY,SAAoBtqC,GAC9BA,EAAQ/B,YAAYmZ,OAAS,MAC7BpX,EAAQ/B,YAAYoF,KAAOrD,EAAQ7B,QAAQkZ,SAAShU,KACzB,IAAMrD,EAAQ/B,YAAYY,KACrDmB,EAAQ/B,YAAYY,KAAO,UAGpBmB,EAAQ/B,YAAYe,QAAQ,yBAC5BgB,EAAQ/B,YAAYe,QAAQ,iBAMrCurC,oBAAqB,WACnB5tC,KAAKwoC,sBAAuB,KAOhC5kC,EAAI2iC,QAAQr1B,mBAAqB,SAA4BN,GAC3D5Q,KAAKwJ,UAAUqkC,QAAU,WACvB,IAAIx8B,EAAOrR,KAGX,OADAA,KAAKsB,YAAYktB,kBAAkB,WAC5B,IAAI5d,GAAkB,SAASU,EAASC,GAC7CF,EAAKzF,GAAG,YAAY,SAASrJ,GACvBA,EAAK/B,MACP+Q,EAAOhP,EAAK/B,OAIZ8Q,EAAQvL,OAAO8H,eACbtL,EAAKiB,MAAQ,GACb,YACA,CAAC0C,MAAO3D,QAId8O,EAAKs6B,aAQX/nC,EAAI2iC,QAAQt1B,wBAA0B,kBAC7BjR,KAAKwJ,UAAUqkC,SAGxBjqC,EAAIpE,KAAKkR,YAAY9M,EAAI2iC,SAEzB3iC,EAAIpE,KAAK+O,MAAM3K,EAAI2iC,QAAS3iC,EAAIksB,sB,6CC1yBhC,EAAQ,QACR,IAAIlsB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAI0e,IAAMxM,EAAQI,cAAc,MAAO,CAAC,eACxCnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA0CC,WACrEF,EAAMuD,QAAU,EAAQ,QAAwCA,QACzDvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI0e,K,smDClBrB,IAAI1e,EAAM,EAAQ,QACdke,EAAkB,EAAQ,QAC1BsC,EAAM,EAAQ,QA0DlBxgB,EAAIkqC,2BAA6BlqC,EAAIpE,KAAKI,QAAQgE,EAAIktB,YAAa,CAIjEid,gBAAiB,CACf14B,GAAI,2BACJqwB,UAAW,mCA4Db7lC,YAAa,SAAoCuC,EAAQy1B,GACvDj0B,EAAIktB,YAAYrnB,KAAKzJ,MACrBA,KAAKixB,SAAU,EACfjxB,KAAKoC,OAASA,EACdpC,KAAKwD,KAAO,KACZxD,KAAKguC,YAAc,KACnBhuC,KAAKqhC,cAAgBz9B,EAAIpE,KAAK2I,KAAK0vB,GAAgB,IACnD73B,KAAKiuC,eACL,IAAI58B,EAAOrR,KACX+F,OAAO8H,eAAe7N,KAAM,aAAc,CACxC8O,IAAK,WAEH,OADAuC,EAAK48B,eACE58B,EAAK28B,aAAe38B,EAAKjP,OAAO8rC,YAEzC/tB,IAAK,SAASguB,GACZ98B,EAAK28B,YAAcG,MAiBzB/c,QAAS,SAAiBjoB,GACxBnJ,KAAKqxB,gBAAgBloB,GAAYvF,EAAIpE,KAAKyJ,GAAGE,WAO/CmoB,KAAM,SAAcnoB,GAClB,IAAIkI,EAAOrR,KACXqR,EAAKkgB,gBACLlgB,EAAK7N,KAAO,KACZ6N,EAAK28B,YAAc,KACnB38B,EAAKmV,OAAM,SAASpd,GACbA,GAOHiI,EAAK+8B,uBAAuBhlC,GAC5BD,EAASC,IAPJiI,EAAKjP,OAAO8uB,QAGf7f,EAAKg9B,sBAAsBllC,GAF3BkI,EAAKoV,0BAA0Btd,OAgBvCmlC,cAAe,WACbtuC,KAAKguC,YAAc,YACZhuC,KAAKoC,OAAO8rC,WAEnB,IAAIK,EAASvuC,KAAKoC,OAAOosC,eACrBC,EAAUzuC,KAAKoC,OAAOssC,SAAW,UAC9B1uC,KAAK2uC,QAAQ3uC,KAAK+tC,gBAAgB14B,GAAKk5B,EAASE,UAChDzuC,KAAK2uC,QAAQ3uC,KAAK+tC,gBAAgBrI,UAAY6I,EAASE,IAMhEL,uBAAwB,SAAgChlC,GAEtC,0BAAZA,EAAI1I,MADGV,KAEJsuC,iBAiBT9nB,MAAO,SAAerd,GACpB,IAAIkI,EAAOrR,KACX,GAAsC,iBAA3BqR,EAAKjP,OAAO8rC,WACrB,OAAO/kC,EAAS,KAAMkI,EAAKjP,OAAO8rC,YAGpC78B,EAAKu9B,QAAQpoB,OAAM,SAASpd,EAAK5F,IAC1B4F,GAAO5F,EAAK0qC,YACf78B,EAAKjP,OAAO8rC,WAAa1qC,EAAK0qC,WAC9B/kC,EAAS,KAAM3F,EAAK0qC,aAEpB/kC,EAASC,OASfylC,gBAAiB,SAAyBrrC,EAAMoW,GACzCpW,GAASoW,IACdA,EAAYqX,SAAU,EACtBrX,EAAYM,YAAc1W,EAAKstB,YAAYge,YAC3Cl1B,EAAYW,gBAAkB/W,EAAKstB,YAAYie,UAC/Cn1B,EAAYO,aAAe3W,EAAKstB,YAAYke,aAC5Cp1B,EAAY6E,WAAajb,EAAKstB,YAAYme,aAM5CxoB,0BAA2B,SAAmCtd,GAC5D,IAAIkI,EAAOrR,KACXqR,EAAKu9B,QAAQnoB,2BAA0B,SAASrd,EAAK5F,GAC9C4F,EAKHiI,EAAK+8B,uBAAuBhlC,IAJ5BiI,EAAK69B,QAAQ1rC,GACb6N,EAAK7N,KAAOA,EACZ6N,EAAKw9B,gBAAgBx9B,EAAK7N,KAAM6N,IAIlClI,EAASC,OAObilC,sBAAuB,SAA+BllC,GACpD,IAAIkI,EAAOrR,KACXqR,EAAKu9B,QAAQtoB,gBAAe,SAASld,EAAK5F,GACnC4F,GAWHiI,EAAK+8B,uBAAuBhlC,GAC5BD,EAASC,KAXTiI,EAAK69B,QAAQ1rC,GACb6N,EAAKjP,OAAO+sC,iBAAmB3rC,EAAK4rC,MACpC/9B,EAAKg+B,uBAAuBje,SAAQ,SAASke,GACtCA,IACHj+B,EAAK7N,KAAO6N,EAAKg+B,uBAAuB7rC,KACxC6N,EAAKk+B,IAAI7d,gBAAgBrgB,EAAK7N,KAAM6N,IAEtClI,EAASmmC,WAYjBrB,aAAc,WAIZ,GAAIrqC,EAAIpE,KAAKuE,cAHF/D,KAGuBoC,OAAO8rC,WAAY,CACnD,IAAI74B,EAJKrV,KAIKwvC,WAAW,MACzB,GAAIn6B,GALKrV,KAKMoC,OAAOqtC,OAAQ,CAC5B,IAAIC,EAAkB3pC,OAAOC,KANtBhG,KAMgCoC,OAAOqtC,QAQrB,KAdlBzvC,KAQCwvC,WAAW,cAAgB,IAAI/sC,MAAM,KAGbktC,QAAO,SAASniB,GAC9C,OAAuC,IAAhCkiB,EAAgBl7B,QAAQgZ,MAEnB5sB,SAdPZ,KAeAoC,OAAO8rC,WAAa74B,QAElBA,IAjBFrV,KAkBFoC,OAAO8rC,WAAa74B,KAQ/Bkc,cAAe,WACb,IAAIsG,EAAe73B,KAAKqhC,cAGxB,GAFArhC,KAAKqvC,uBAAyBrvC,KAAKqvC,wBACjC,IAAIzrC,EAAIw9B,uBAAuBphC,KAAKoC,OAAQy1B,IACzC73B,KAAK4uC,QAAS,CACjB,IAAIgB,EAAgBhsC,EAAIpE,KAAKyN,MAAM,GAAI4qB,GACvC+X,EAAcxtC,OAASpC,KAAKoC,OAC5BpC,KAAK4uC,QAAU,IAAI9sB,EAAgB8tB,GAErC5vC,KAAKuvC,IAAMvvC,KAAKuvC,KAAO,IAAInrB,EAAIyT,IAMjCqX,QAAS,SAAiB1rC,GACxBxD,KAAKguC,YAAcxqC,EAAK0qC,WACxBluC,KAAKoC,OAAO8rC,WAAaluC,KAAKguC,YAG1BpqC,EAAIpE,KAAKuE,cACX/D,KAAK6vC,WAAW,KAAMrsC,EAAK0qC,YAEvBluC,KAAKoC,OAAOqtC,QACdzvC,KAAK6vC,WAAW,YAAa9pC,OAAOC,KAAKhG,KAAKoC,OAAOqtC,QAAQrqC,KAAK,QAQxEoqC,WAAY,SAAoBzkC,GAC9B,OAAO/K,KAAK2uC,QAAQ3uC,KAAK+tC,gBAAgBhjC,GAAO/K,KAAKoC,OAAOosC,gBAAkBxuC,KAAKoC,OAAOssC,SAAW,MAMvGmB,WAAY,SAAoB9kC,EAAKsc,GACnC,IACErnB,KAAK2uC,QAAQ3uC,KAAK+tC,gBAAgBhjC,GAAO/K,KAAKoC,OAAOosC,gBAAkBxuC,KAAKoC,OAAOssC,SAAW,KAAOrnB,EACrG,MAAOF,MAMXwnB,QAAS,WACP,IACE,IAAIA,EAAU/qC,EAAIpE,KAAKuE,aAAuC,OAAxB4U,OAAOm3B,cAAwD,iBAAxBn3B,OAAOm3B,aAChFn3B,OAAOm3B,aAAe,GAM1B,OAHAnB,EAAQ,oBAAsB,gBACvBA,EAAQ,oBAERA,EACP,MAAOxnB,GACP,MAAO,IAXF,M,suxFClXX,kBAAU,EAAQ,QACduI,EAAM,EAAQ,QACdqgB,EAAe,EAAQ,QAEvBnwC,EAAUgE,EAAIpE,KAAKI,QACnBowC,EAAc,EAWlBpsC,EAAIkS,QAAUlW,EAAQ,CAMpBC,YAAa,SAAiByD,GAC5B,IAAKtD,KAAKiwC,iBACR,MAAMrsC,EAAIpE,KAAKgB,MAAM,IAAIC,MACvB,mDAEJ,IAAIyvC,EAAelwC,KAAKiwC,iBAAiB3sC,GAAU,IACnD,GAAI4sC,EAAc,CAChB,IAAI3N,EAAiB3+B,EAAIpE,KAAK2I,KAAK7E,GAC/Bo+B,EAAM,IAAIwO,EAAa5sC,GAO3B,OANAyC,OAAO8H,eAAe6zB,EAAK,kBAAmB,CAC5C5yB,IAAK,WAAa,OAAOyzB,GACzBx0B,YAAY,EACZW,cAAc,IAEhBgzB,EAAIyO,YAAcH,EACXtO,EAET1hC,KAAKE,WAAWoD,IAMlBpD,WAAY,SAAoBoD,GAC9B,IAAIw8B,EAAYl8B,EAAIN,OAAOtD,KAAK0R,mBAahC,GAZA1R,KAAKsD,OAAS,IAAIM,EAAIghC,OAAOhhC,EAAIN,QAC7Bw8B,GAAW9/B,KAAKsD,OAAO6H,OAAO20B,GAAW,GACzCx8B,GAAQtD,KAAKsD,OAAO6H,OAAO7H,GAAQ,GAEvCtD,KAAKod,kBACApd,KAAKsD,OAAOoX,UAAUq1B,EAAaK,kBAAkBpwC,MAE1DA,KAAKsD,OAAOoX,SAAW1a,KAAKqwC,qBAAqBrwC,KAAKsD,OAAOoX,UAC7D1a,KAAKswC,YAAYtwC,KAAKsD,OAAOoX,UAE7B9W,EAAIksB,mBAAmBrmB,KAAKzJ,MAC5B4D,EAAIkS,QAAQy6B,8BAA8BvwC,OACrCA,KAAKsD,OAAO4iC,sBAAwBtiC,EAAIkS,QAAQ06B,wBAA0BxwC,KAAKywC,UAAW,CAC7F,IAAIA,EAAYzwC,KAAKywC,UACrBzwC,KAAK0gC,iBAAiB,mBAAoB,WAAW,SAA0BgI,GAC7ExkC,EAAQoP,UAAS,WAAYm9B,EAAUC,aAAahI,SAEtD1oC,KAAK0gC,iBAAiB,sBAAuB,kBAAkB,SAA6BgI,GAC1FxkC,EAAQoP,UAAS,WAAYm9B,EAAUC,aAAahI,WAQ1DtrB,gBAAiB,aAMjB6yB,iBAAkB,SAA0BU,GAC1C,IAAIrtC,EAASqtC,EACb,GAAK/sC,EAAIpE,KAAK2N,QAAQnN,KAAKuB,KAEpB,IAAI+B,EAAOstC,UAChB,OAAOhtC,EAAIkS,QAAQ+6B,iBAAiB7wC,KAAKH,YAAayD,EAAOstC,WACxD,GAAK5wC,KAAKH,YAAYmW,SAEtB,EACL1S,EAAS,IAAIM,EAAIghC,OAAOhhC,EAAIN,SACrB6H,OAAOwlC,GAAe,GAC7B,IAAI7uC,EAAUwB,EAAOuiC,YAAY7lC,KAAKH,YAAY6R,mBAElD,OADA5P,EAAUA,GAAWwB,EAAOk8B,WACrBx/B,KAAK8wC,sBAAsBhvC,GANlC,OAAO,KAJP,OAAO,MAiBXgvC,sBAAuB,SAA+BhvC,GAMpD,OALAA,EAAU9B,KAAK+wC,wBAAwBjvC,GACI,OAAvC9B,KAAKH,YAAYmW,SAASlU,IAC5B8B,EAAIkS,QAAQ+6B,iBAAiB7wC,KAAKH,YAAaiC,GAG1C9B,KAAKH,YAAYmW,SAASlU,IAMnCivC,wBAAyB,SAAiCjvC,GACxD,IAAK9B,KAAKH,YAAYmW,UAAiD,IAArChW,KAAKH,YAAYmW,SAASpV,OAC1D,MAAM,IAAIH,MAAM,0BACAT,KAAKH,YAAY6R,mBASnC,GANK5P,EAEM8B,EAAIpE,KAAKgO,OAAO1L,EAASiI,QAClCjI,EAAU8B,EAAIpE,KAAKoK,KAAKK,QAAQnI,GAASW,MAAM,KAAK,IAFpDX,EAAU,SAKRiE,OAAO4G,eAAe3M,KAAKH,YAAYmW,SAAUlU,GACnD,OAAOA,EAKT,IAFA,IAAIkE,EAAOD,OAAOC,KAAKhG,KAAKH,YAAYmW,UAAU/P,OAC9C+qC,EAAkB,KACbnwC,EAAImF,EAAKpF,OAAS,EAAGC,GAAK,EAAGA,IAMpC,GAHoC,MAAhCmF,EAAKnF,GAAGmF,EAAKnF,GAAGD,OAAS,KAC3BowC,EAAkBhrC,EAAKnF,IAErBmF,EAAKnF,GAAG2H,OAAO,EAAG,KAAO1G,EAC3B,OAAOkvC,EAIX,MAAM,IAAIvwC,MAAM,kBAAoBT,KAAKH,YAAY6R,kBACrC,uCAAyC5P,EAAU,MAMrEP,IAAK,GAKL0vC,kBAAmB,EAKnBC,kBAAmB,SAA2B/nC,GAC5C,GAAKA,EAEE,IAAwB,mBAAbA,EAGhB,MAAM,IAAI1I,MAAM,iCAAoC0I,EAAW,mCAF/DnJ,KAAKmxC,qBAAuBhoC,OAF5BnJ,KAAKmxC,qBAAuB,MAqBhC9U,YAAa,SAAqBz6B,EAAWQ,EAAQ+G,GAOnD,GANsB,mBAAX/G,IACT+G,EAAW/G,EACXA,EAAS,MAGXA,EAASA,GAAU,GACfpC,KAAKsD,OAAOlB,OAAQ,CACtB,IAAIiR,EAAQrT,KAAKuB,IAAII,WAAWC,GAC5ByR,IACFjR,EAASwB,EAAIpE,KAAK2I,KAAK/F,GACvBwB,EAAIpE,KAAKiN,KAAKzM,KAAKsD,OAAOlB,QAAQ,SAAS2I,EAAK7E,GAC1CmN,EAAMrR,MAAMsN,QAAQvE,UACFvD,IAAhBpF,EAAO2I,IAAsC,OAAhB3I,EAAO2I,KACtC3I,EAAO2I,GAAO7E,QAOxB,IAAI7C,EAAU,IAAIO,EAAI2iC,QAAQvmC,KAAM4B,EAAWQ,GAI/C,OAHApC,KAAKoxC,uBAAuB/tC,GAC5BrD,KAAKqxC,wBAAwBhuC,GACzB8F,GAAU9F,EAAQ8oB,KAAKhjB,GACpB9F,GAiBTkjB,2BAA4B,SAAoC3kB,EAAWQ,EAAQ+G,GAC3D,mBAAX/G,IACT+G,EAAW/G,EACXA,EAAS,IAGX,IAAIiB,EAAUrD,KAAKq8B,YAAYz6B,EAAWQ,GAAQmrC,oBAClD,OAAOpkC,EAAW9F,EAAQ8oB,KAAKhjB,GAAY9F,GAqB7CiuC,QAAS,SAAiB1F,EAAOxpC,EAAQ+G,GAEvC,OADa,IAAIvF,EAAIisB,eAAe7vB,KAAM4rC,GAC5B2F,KAAKnvC,EAAQ+G,IAM7BioC,uBAAwB,SAAgC/tC,GAGtD,IAFA,IAAIvD,EAAO,CAAC8D,EAAIiqB,OAAQjqB,EAAI+a,eAAeC,KAAM5e,KAAKwxC,mBAC1C5tC,EAAI+a,eAAe8yB,UACtB5wC,EAAI,EAAGA,EAAIf,EAAKc,OAAQC,IAC3Bf,EAAKe,IAAIwC,EAAQolC,aAAa3oC,EAAKe,IAIpCb,KAAKsD,OAAOwiC,iBACfziC,EAAQqb,eAAe,WACrB9a,EAAI+a,eAAeC,KAAKmgB,qBAGxB/+B,KAAKsD,OAAOsiC,QACdviC,EAAQolC,aAAa7kC,EAAI+a,eAAe+yB,QAG1C1xC,KAAKqd,sBAAsBha,GAEoC,mBAApDrD,KAAKH,YAAY2J,UAAU2nC,sBACpCnxC,KAAKH,YAAY2J,UAAU2nC,qBAAqB9tC,GAG9C0C,OAAOyD,UAAUmD,eAAelD,KAAKzJ,KAAM,yBAAgE,mBAA9BA,KAAKmxC,sBACpFnxC,KAAKmxC,qBAAqB9tC,IAS9BsuC,aAAc,SAAsBtuC,GAClC,IAAI9B,EAAM8B,EAAQ7B,QAAQD,IAAII,WAAW0B,EAAQzB,WAC7CgwC,EAAkB,CACpBC,KAAM,UACNniB,IAAKnuB,EAAMA,EAAIM,KAAOwB,EAAQzB,UAC9BkwC,QAAS,EACTh8B,QAASzS,EAAQ7B,QAAQD,IAAI68B,WAAa/6B,EAAQ7B,QAAQD,IAAIwwC,eAC9DvW,OAAQn4B,EAAQ/B,YAAYsT,OAC5Bo9B,mBAAoB,EACpBC,UAAW5uC,EAAQ/B,YAAYotB,gBAE7B1P,EAAW3b,EAAQ2b,SAIvB,GAHIA,EAASxc,aAAaU,aACxB0uC,EAAgBM,oBAAsBlzB,EAASxc,aAAaU,YAE1D8b,EAASxe,MAAO,CAClB,IAAIA,EAAQwe,EAASxe,MACJwe,EAASxc,aAAaU,WACtB,KACX1C,EAAME,OAAMkxC,EAAgBO,kBAAoB3xC,EAAME,MACtDF,EAAMG,UAASixC,EAAgBQ,yBAA2B5xC,EAAMG,YAEhEH,EAAME,MAAQF,EAAMqB,QAAM+vC,EAAgBS,kBAAoB7xC,EAAME,MAAQF,EAAMqB,MAClFrB,EAAMG,UAASixC,EAAgBU,yBAA2B9xC,EAAMG,UAGxE,OAAOixC,GAQTW,gBAAiB,SAAyBlvC,GACxC,IAAI9B,EAAM8B,EAAQ7B,QAAQD,IAAII,WAAW0B,EAAQzB,WAC7CgwC,EAAkB,CACpBC,KAAM,iBACNniB,IAAKnuB,EAAMA,EAAIM,KAAOwB,EAAQzB,UAC9BkwC,QAAS,EACTh8B,QAASzS,EAAQ7B,QAAQD,IAAI68B,WAAa/6B,EAAQ7B,QAAQD,IAAIwwC,eAC9DS,KAAMnvC,EAAQ/B,YAAYoZ,SAASkQ,SACnCqnB,UAAW5uC,EAAQ/B,YAAYotB,gBAE7B1P,EAAW3b,EAAQ2b,SAWvB,OAVIA,EAASxc,aAAaU,aACxB0uC,EAAgBa,eAAiBzzB,EAASxc,aAAaU,aAGtDG,EAAQmqC,kBACTnqC,EAAQ7B,QAAQ8B,OAAOsW,aACvBvW,EAAQ7B,QAAQ8B,OAAOsW,YAAYM,cAEnC03B,EAAgBc,UAAYrvC,EAAQ7B,QAAQ8B,OAAOsW,YAAYM,aAE5D8E,EAASxc,aAAaH,SACvBgB,EAAQ/B,YAAYe,QAAQ,0BAC9BuvC,EAAgB5C,aAAe3rC,EAAQ/B,YAAYe,QAAQ,yBAEzD2c,EAASxc,aAAaH,QAAQ,sBAChCuvC,EAAgBe,eAAiB3zB,EAASxc,aAAaH,QAAQ,qBAE7D2c,EAASxc,aAAaH,QAAQ,sBAChCuvC,EAAgBgB,cAAgB5zB,EAASxc,aAAaH,QAAQ,qBAE5D2c,EAASxc,aAAaH,QAAQ,gBAChCuvC,EAAgBiB,QAAU7zB,EAASxc,aAAaH,QAAQ,eAEnDuvC,GAboCA,GAoB7CkB,iBAAkB,SAA0BzvC,GAC1C,IAAIuuC,EAAkB5xC,KAAKuyC,gBAAgBlvC,GACvC2b,EAAW3b,EAAQ2b,SACnBxe,EAAQwe,EAASxe,MAQrB,OAPIwe,EAASxc,aAAaU,WAAa,KACjC1C,EAAME,OAAMkxC,EAAgBmB,aAAevyC,EAAME,MACjDF,EAAMG,UAASixC,EAAgBoB,oBAAsBxyC,EAAMG,YAE3DH,EAAME,MAAQF,EAAMqB,QAAM+vC,EAAgBqB,aAAezyC,EAAME,MAAQF,EAAMqB,MAC7ErB,EAAMG,UAASixC,EAAgBsB,oBAAsB1yC,EAAMG,UAE1DixC,GAQTP,wBAAyB,SAAiChuC,GACxD,IAAI8vC,EACAC,EACAC,EACAC,EAEA1+B,EACA2+B,EAFAC,EAAe,EAGfniC,EAAOrR,KAGXqD,EAAQuI,GAAG,YAAY,WACrB0nC,EAAoB1vC,EAAIpE,KAAKi0C,UAAUh4B,MACvC83B,EAAgBxpC,KAAK0R,SAJP,GAMhBpY,EAAQuI,GAAG,QAAQ,WACjBwnC,EAAuBxvC,EAAIpE,KAAKi0C,UAAUh4B,MAC1C03B,EAAmBppC,KAAK0R,MACxB7G,EAASvR,EAAQ/B,YAAYsT,OAC7B4+B,OAVc,GAYhBnwC,EAAQuI,GAAG,oBAAoB,WAC7BynC,EAAiBljC,KAAKujC,MAAM9vC,EAAIpE,KAAKi0C,UAAUh4B,MAAQ23B,MAEzD/vC,EAAQq9B,iBAAiB,mBAAoB,WAAW,WACtD,IAAI6R,EAAkBlhC,EAAKkhC,gBAAgBlvC,GAC3CkvC,EAAgBz4B,UAAYq5B,EAC5BZ,EAAgBoB,eAAiBN,GAAkB,EAAIA,EAAiB,EACxEd,EAAgB/W,OAAS5mB,EACzBvD,EAAK0N,KAAK,iBAAkB,CAACwzB,OAE/BlvC,EAAQq9B,iBAAiB,yBAA0B,SAAS,WAC1D,IAAI6R,EAAkBlhC,EAAKyhC,iBAAiBzvC,GAC5CkvC,EAAgBz4B,UAAYq5B,EAE5BE,EAAiBA,GACfljC,KAAKujC,MAAM9vC,EAAIpE,KAAKi0C,UAAUh4B,MAAQ23B,GACxCb,EAAgBoB,eAAiBN,GAAkB,EAAIA,EAAiB,EACxEd,EAAgB/W,OAAS5mB,EACzBvD,EAAK0N,KAAK,iBAAkB,CAACwzB,OAE/BlvC,EAAQq9B,iBAAiB,WAAY,YAAY,WAC/C,IAAIiR,EAAetgC,EAAKsgC,aAAatuC,GAErC,GADAsuC,EAAaiC,aAAeJ,IACxB7B,EAAaiC,cAAgB,GAAjC,CACAjC,EAAa73B,UAAYy5B,EACzB,IAAIM,EAAU1jC,KAAKujC,MAAM9vC,EAAIpE,KAAKi0C,UAAUh4B,MAAQ63B,GACpD3B,EAAamC,QAAUD,GAAW,EAAIA,EAAU,EAChD,IAAI70B,EAAW3b,EAAQ2b,SAErBA,EAASxe,OACTwe,EAASxe,MAAMmS,WACgB,iBAAxBqM,EAASnN,YACe,iBAAxBmN,EAAStM,YACfsM,EAASnN,YAAcmN,EAAStM,aAEjCi/B,EAAaK,mBAAqB,GAEpC3gC,EAAK0N,KAAK,UAAW,CAAC4yB,SAU1Bt0B,sBAAuB,SAA+Bha,KAOtD4xB,eAAgB,WACd,OAAOj1B,KAAKuB,IAAIwyC,aAAe/zC,KAAKuB,IAAIwwC,gBAO1C/zB,eAAgB,SAAwB3a,GACtC,IAAIvB,EAEAF,EAAY,KACZoyC,EAAW,GACX3wC,IAGF2wC,GADApyC,GADiByB,EAAQ7B,QAAQD,IAAII,YAAc,IAC5B0B,EAAQzB,YAAc,MACtBA,EAAUoyC,SAAW,IAS9C,OANElyC,EADE9B,KAAKsD,OAAO6kB,iBACJnoB,KAAKsD,OAAO6kB,iBACA,OAAb6rB,GAAkC,qBAAbA,EACpB,KAEAh0C,KAAKuB,IAAI4mB,iBAEdvkB,EAAIsR,QAAQC,cAAcK,WAAW1T,IAM9C0vC,iBAAkB,WAChB,OAAQxxC,KAAKuB,IAAIopB,UACf,IAAK,MACL,IAAK,QAAS,OAAO/mB,EAAI+a,eAAe8K,MACxC,IAAK,OAAQ,OAAO7lB,EAAI+a,eAAeyQ,KACvC,IAAK,YAAa,OAAOxrB,EAAI+a,eAAe2Q,SAC5C,IAAK,WAAY,OAAO1rB,EAAI+a,eAAe4Q,QAE7C,GAAIvvB,KAAKuB,IAAIopB,SACX,MAAM,IAAIlqB,MAAM,8BACdT,KAAKuB,IAAIopB,SAAW,mBAO1BspB,mBAAoB,SAA4B1xC,GAC9C,OAAOA,EAAKC,aAAaU,WAAa,KASxCugC,WAAY,WACV,YAA+Bj8B,IAA3BxH,KAAKsD,OAAOoP,WACP1S,KAAKsD,OAAOoP,WAEZ1S,KAAKixC,mBAOhBiD,YAAa,SAAqBriC,EAAYzI,GAC5C,OAAOxF,EAAIpE,KAAKoS,oBAAoBC,EAAY7R,KAAKsD,OAAOwO,kBAAmB1I,IAMjFgxB,eAAgB,SAAwB55B,GACtC,QAAIR,KAAKm0C,aAAa3zC,OAClBR,KAAKo0C,gBAAgB5zC,OACrBR,KAAKq0C,wBAAwB7zC,OAC7BR,KAAKs0C,eAAe9zC,IACpBA,EAAM0C,YAAc,QAO1BkxC,gBAAiB,SAAyB5zC,GACxC,MAAsB,oBAAfA,EAAME,MAMfyzC,aAAc,SAAsB3zC,GAClC,MAAsB,iBAAfA,EAAME,MAMf2zC,wBAAyB,SAAiC7zC,GAExD,MAAuB,0BAAfA,EAAME,MAMhB6zC,eAAgB,SAAwB/zC,GACtC,OAAQA,EAAME,MACZ,IAAK,uBACL,IAAK,iBACL,IAAK,4BACL,IAAK,wBACL,IAAK,cACL,IAAK,qBACH,OAAO,EACT,QAAS,OAAO,IAOpBud,qBAAsB,WACpB,OAAO,IAAIlU,KAAKA,KAAK0R,MAAQzb,KAAKsD,OAAOwG,oBAM3CuG,iBAAkB,SAA0BmkC,GACtCA,IACFx0C,KAAKsD,OAAOwG,kBAAoB0qC,EAAgBzqC,KAAK0R,QAOzDxL,cAAe,SAAuBukC,GACpC,GAAIA,EACF,OAAOrkC,KAAKC,IAAIpQ,KAAKie,uBAAuBjU,UAAYwqC,IAAkB,KAO9EF,eAAgB,SAAwB9zC,GAEtC,GAAyB,MAArBA,EAAM0C,WAAoB,OAAO,EACrC,OAAQ1C,EAAME,MACZ,IAAK,yCACL,IAAK,aACL,IAAK,sBACL,IAAK,uBACL,IAAK,mBACL,IAAK,4BACL,IAAK,2BACL,IAAK,iCACL,IAAK,wBACH,OAAO,EACT,QACE,OAAO,IAOb2vC,qBAAsB,SAA8B31B,GAClD,GAAwB,iBAAbA,EAAuB,OAAOA,EAEzC,IAAIhY,EAAIgY,EAIR,OADAhY,GADAA,GADAA,EAAIA,EAAEgC,QAAQ,eAAgB1E,KAAKuB,IAAIwwC,iBACjCrtC,QAAQ,cAAe1E,KAAKsD,OAAOsR,SACnClQ,QAAQ,cAAe1E,KAAKsD,OAAO6qB,WAAa,QAAU,SAOlEmiB,YAAa,SAAqB51B,GAChC1a,KAAK0a,SAAW,IAAI9W,EAAIyb,SAAS3E,EAAU1a,KAAKsD,SAMlDsgC,iBAAkB,SAA0BhiC,EAAW6yC,GACrD,IAAI9iB,EAAY3xB,KAAKuB,IAAII,WAAWC,GAAW+vB,UAC/C,IAAKA,EAAW,CACd,GAAI8iB,EAAgB,CAClB,IAAI/xC,EAAI,IAAIjC,MACZ,MAAMmD,EAAIpE,KAAKgB,MAAMkC,EAAG,mCAAqCd,GAE/D,OAAO,KAGT,OAAO+vB,KAIX/tB,EAAIpE,KAAK2L,OAAOvH,EAAIkS,QAAS,CAO3B4+B,cAAe,SAAuBhT,GACpC99B,EAAIpE,KAAKiN,KAAKi1B,EAAIl4B,UAAUjI,IAAII,YAAY,SAAkB8Y,GACxDinB,EAAIl4B,UAAUiR,KAES,SADXinB,EAAIl4B,UAAUjI,IAAII,WAAW8Y,GAC/Bu5B,SACZtS,EAAIl4B,UAAUiR,GAAU,SAAUrY,EAAQ+G,GACxC,OAAOnJ,KAAKumB,2BAA2B9L,EAAQrY,EAAQ+G,IAGzDu4B,EAAIl4B,UAAUiR,GAAU,SAAUrY,EAAQ+G,GACxC,OAAOnJ,KAAKq8B,YAAY5hB,EAAQrY,EAAQ+G,SAiBhD+M,cAAe,SAAuBxE,EAAmBijC,EAAUxmC,GACjEvK,EAAIkS,QAAQ8+B,YAAYljC,IAAqB,EACxCrL,MAAMC,QAAQquC,KACjBxmC,EAAWwmC,EACXA,EAAW,IAGb,IAAIjT,EAAM9hC,EAAQgE,EAAIkS,QAAS3H,GAAY,IAE3C,GAAiC,iBAAtBuD,EAAgC,CACzC9N,EAAIkS,QAAQ++B,YAAYnT,EAAKiT,GAE7B,IAAIG,EAAapT,EAAIhwB,mBAAqBA,EAC1CgwB,EAAIhwB,kBAAoBojC,OAExBpT,EAAIl4B,UAAUjI,IAAMmQ,EACpB9N,EAAIkS,QAAQ4+B,cAAchT,GAI5B,GAFA99B,EAAIksB,mBAAmBrmB,KAAKzJ,KAAKwJ,YAE5BxJ,KAAKwJ,UAAUinC,WAAa7sC,EAAIpE,KAAK0mC,qBAAsB,CAC9D,IAAI6O,EAAYnxC,EAAIpE,KAAK0mC,qBAAqB6O,UAE1CC,GAAkBC,EADDrxC,EAAIpE,KAAK0mC,qBAAqB+O,kBAEnDj1C,KAAKwJ,UAAUinC,UAAY,IAAIsE,EAAUC,GACrCA,EAAgBE,UAElBtxC,EAAIkS,QAAQ06B,uBAAwB,GAKxC,OAFA5sC,EAAIksB,mBAAmBrmB,KAAKi4B,EAAIl4B,WAChC5F,EAAIkS,QAAQy6B,8BAA8B7O,EAAIl4B,WACvCk4B,GAMTmT,YAAa,SAAqBnT,EAAKiT,GAChCtuC,MAAMC,QAAQquC,KAAWA,EAAW,CAACA,IAE1CjT,EAAI1rB,SAAW0rB,EAAI1rB,UAAY,GAC/B,IAAK,IAAInV,EAAI,EAAGA,EAAI8zC,EAAS/zC,OAAQC,SACD2G,IAA9Bk6B,EAAI1rB,SAAS2+B,EAAS9zC,MACxB6gC,EAAI1rB,SAAS2+B,EAAS9zC,IAAM,MAIhC6gC,EAAImE,YAAc9/B,OAAOC,KAAK07B,EAAI1rB,UAAU/P,QAM9C4qC,iBAAkB,SAA0BsE,EAAYrzC,EAAS8uC,GAC/D,IAAIlP,EAAM9hC,EAAQu1C,EAAY,CAC5BzjC,kBAAmByjC,EAAWzjC,oBAGhC,SAAS0jC,EAAO7zC,GACVA,EAAI8zC,MACN3T,EAAIl4B,UAAUjI,IAAMA,EAEpBmgC,EAAIl4B,UAAUjI,IAAM,IAAImuB,EAAInuB,EAAK,CAC/BmQ,kBAAmByjC,EAAWzjC,oBAKpC,GAAuB,iBAAZ5P,EAAsB,CAC/B,GAAI8uC,EACFwE,EAAOxE,QAEP,IACEwE,EAAOxxC,EAAImS,UAAUo/B,EAAWzjC,kBAAmB5P,IACnD,MAAOsH,GACP,MAAMxF,EAAIpE,KAAKgB,MAAM4I,EAAK,CACxBzI,QAAS,oCACPw0C,EAAWzjC,kBAAoB,IAAM5P,IAIxCiE,OAAOyD,UAAUmD,eAAelD,KAAK0rC,EAAWn/B,SAAUlU,KAC7DqzC,EAAWtP,YAAcsP,EAAWtP,YAAYxlC,OAAOyB,GAASmE,QAElEkvC,EAAWn/B,SAASlU,GAAW4/B,OAE/B0T,EAAOtzC,GAIT,OADA8B,EAAIkS,QAAQ4+B,cAAchT,GACnBA,GAMTyD,WAAY,SAAS2P,GACnB,OAAO/uC,OAAOyD,UAAUmD,eAAelD,KAAK7F,EAAIkS,QAAQ8+B,YAAaE,IAWvEvE,8BAA+B,SAAuC+E,GACpEA,EAAS5U,iBAAiB,wBAAyB,kBAAkB,SAAuBgI,GAC1F,IAAI6M,EAAYxvC,OAAOyvC,eAAeF,GAClCC,EAAU7N,SAAS6N,EAAUx2B,KAAK,iBAAkB,CAAC2pB,OAE3D4M,EAAS5U,iBAAiB,qBAAsB,WAAW,SAA4BgI,GACrF,IAAI6M,EAAYxvC,OAAOyvC,eAAeF,GAClCC,EAAU7N,SAAS6N,EAAUx2B,KAAK,UAAW,CAAC2pB,QAOtDkM,YAAa,KAGfhxC,EAAIpE,KAAK+O,MAAM3K,EAAIkS,QAASlS,EAAIksB,oBAKhC/uB,EAAOC,QAAU4C,EAAIkS,U,qmhCCh0BrB,EAAQ,QACR,IAAIlS,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAyC,+BAAI,GACvDpS,EAAIme,+BAAiCjM,EAAQI,cAAc,iCAAkC,CAAC,eAC9FnQ,OAAO8H,eAAekI,EAAUC,SAAyC,+BAAG,aAAc,CACxFlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAkDC,WACtEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIme,gC,8nJCjBrB,EAAQ,QACR,IAAIne,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAI6f,IAAM3N,EAAQI,cAAc,MAAO,CAAC,aAAc,aAAc,aAAc,aAAc,cAAe,eAC/G,EAAQ,QACRnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA0CC,WAC9DF,GAETpI,YAAY,EACZW,cAAc,IAEhB3I,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA0CC,WAC9DF,GAETpI,YAAY,EACZW,cAAc,IAEhB3I,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA0CC,WACrEF,EAAMuD,QAAU,EAAQ,QAAwCA,QACzDvD,GAETpI,YAAY,EACZW,cAAc,IAEhB3I,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA0CC,WAC9DF,GAETpI,YAAY,EACZW,cAAc,IAEhB3I,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA0CC,WACrEF,EAAMuD,QAAU,EAAQ,QAAwCA,QACzDvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI6f,K,+5BCxDrB,EAAQ,QACR,IAAI7f,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAA0B,gBAAI,GACxCpS,EAAIke,gBAAkBhM,EAAQI,cAAc,kBAAmB,CAAC,eAChE,EAAQ,QACRnQ,OAAO8H,eAAekI,EAAUC,SAA0B,gBAAG,aAAc,CACzElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAuDC,WAC3EF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIke,iB,qBClBrB,IAAItiB,EAAQ,EAAQ,QAChBoE,EAAM,EAAQ,QAqFlB7C,EAAOC,QAAU,CACfG,mBA9EF,SAA4BkC,GAE1B,IADcA,EAAQ7B,QAAQ8B,OAAO6iC,kBACvB,OAAO9iC,EACrB,IAwDwBunB,EACpB6qB,EAEAC,EA3DAjX,EAAiBp7B,EAAQ7B,QAAQD,IAAII,WAAW0B,EAAQzB,WAE5D,GAaF,SAA6ByB,GAC3B,IAAI9B,EAAM8B,EAAQ7B,QAAQD,IACtBk9B,EAAiBl9B,EAAII,WAAW0B,EAAQzB,WACxC+zC,EAAsBp0C,EAAIq9B,mBAAsBr9B,EAAIq9B,oBAAsBp/B,EAAKgF,OAAOiE,WAAWg2B,EAAe58B,MACpH,MAAqD,SAA7C48B,EAAeyB,4BAAgE,IAAxByV,EAjB3DC,CAAoBvyC,GAAU,OAAOA,EACzC,GAAIo7B,EAAe/jB,UAAY+jB,EAAe/jB,SAASm7B,WAAY,CACjE,IACIA,EAoBR,SAA0BC,EAAoB1zC,EAAQqB,GAapD,OAZAjE,EAAKiN,KAAKhJ,EAAM6L,SAAS,SAASzN,EAAM8V,GACtC,IAAyB,IAArBA,EAAOo+B,UAAoB,CAC7B,GAA4B,iBAAjB3zC,EAAOP,IAAuC,KAAjBO,EAAOP,GAC7C,MAAMrC,EAAKgB,MAAM,IAAIC,MAAS,CAC5BE,QAAS,aAAekB,EAAO,iCAC/BnB,KAAM,qBAGV,IAAIumB,EAAQ,IAAIC,OAAO,MAAQrlB,EAAO,MAAO,KAC7Ci0C,EAAqBA,EAAmBpxC,QAAQuiB,EAAO7kB,EAAOP,QAG3Di0C,EAjCYE,CADQvX,EAAe/jB,SAASm7B,WACKxyC,EAAQjB,OAAQq8B,EAAez8B,QAuCzF,SAA+B0Y,EAAU8c,GACnC9c,EAASC,OACXD,EAASC,KAAO6c,EAAS9c,EAASC,MAEhCD,EAASkQ,WACXlQ,EAASkQ,SAAW4M,EAAS9c,EAASkQ,UA3CtCqrB,CAAsB5yC,EAAQ/B,YAAYoZ,SAAUm7B,GAkD9BjrB,EAjDLvnB,EAAQ/B,YAAYoZ,SAASkQ,SAkD5C6qB,EAAS7qB,EAASnoB,MAAM,KAExBizC,EAAc,0DAClBl2C,EAAKyF,UAAUwwC,GAAQ,SAASS,GAC9B,IAAKA,EAAMt1C,QAAUs1C,EAAMt1C,OAAS,GAAKs1C,EAAMt1C,OAAS,GACtD,MAAMpB,EAAKgB,MAAM,IAAIC,MAAS,CAC5BC,KAAM,kBACNC,QAAS,2EAGb,IAAK+0C,EAAY7hB,KAAKqiB,GACpB,MAAMtyC,EAAIpE,KAAKgB,MAAM,IAAIC,MACvB,CAACC,KAAM,kBAAmBC,QAASu1C,EAAQ,oCA5DjD,OAAO7yC,K,gi1BCrBT,EAAQ,QACR,IAAIO,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAmB,SAAI,GACjCpS,EAAI8f,SAAW5N,EAAQI,cAAc,WAAY,CAAC,eAClDnQ,OAAO8H,eAAekI,EAAUC,SAAmB,SAAG,aAAc,CAClElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA+CC,WAC1EF,EAAMuD,QAAU,EAAQ,QAA6CA,QAC9DvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI8f,U,uBClBrB,EAAQ,QACR,IAAI9f,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAiB,OAAI,GAC/BpS,EAAIsf,OAASpN,EAAQI,cAAc,SAAU,CAAC,aAAc,eAC5D,EAAQ,QACRnQ,OAAO8H,eAAekI,EAAUC,SAAiB,OAAG,aAAc,CAChElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA6CC,WACjEF,GAETpI,YAAY,EACZW,cAAc,IAEhB3I,OAAO8H,eAAekI,EAAUC,SAAiB,OAAG,aAAc,CAChElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA6CC,WACxEF,EAAMuD,QAAU,EAAQ,QAA2CA,QAC5DvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIsf,Q,qBC5BrB,EAAQ,QACR,IAAItf,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAyB,eAAI,GACvCpS,EAAIshB,eAAiBpP,EAAQI,cAAc,iBAAkB,CAAC,eAC9DnQ,OAAO8H,eAAekI,EAAUC,SAAyB,eAAG,aAAc,CACxElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAqDC,WACzEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIshB,gB,43BCjBrB,EAAQ,QACR,IAAIthB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAIsgB,IAAMpO,EAAQI,cAAc,MAAO,CAAC,eACxCnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA0CC,WACrEF,EAAMuD,QAAU,EAAQ,QAAwCA,QACzDvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIsgB,K,qBClBrB,EAAQ,QACR,IAAItgB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAgB,MAAI,GAC9BpS,EAAI4f,MAAQ1N,EAAQI,cAAc,QAAS,CAAC,eAC5C,EAAQ,QACRnQ,OAAO8H,eAAekI,EAAUC,SAAgB,MAAG,aAAc,CAC/DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA4CC,WAChEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI4f,O,uBClBrB,IAAI5f,EAAM,EAAQ,QAElBA,EAAIpE,KAAK2L,OAAOvH,EAAIqgB,IAAIza,UAAW,CAIjC6T,sBAAuB,SAA+Bha,GACpDA,EAAQia,YAAY,QAAStd,KAAKmf,eAE9B9b,EAAQ7B,QAAQ8B,OAAOy2B,mBACC,gBAAtB12B,EAAQzB,UACVyB,EAAQia,YAAY,cAAetd,KAAKm2C,2BACT,qBAAtB9yC,EAAQzB,UACjByB,EAAQia,YAAY,cAAetd,KAAKo2C,gCACT,mBAAtB/yC,EAAQzB,WACjByB,EAAQia,YAAY,cAAetd,KAAKq2C,gCAQ9CF,0BAA2B,SAAmCn3B,GAC5D,GAAKA,EAASxb,KAAd,CAEA,IAAI4H,EAAM4T,EAASxb,KAAK8yC,iBACpBp0C,EAAOlC,KAAKoC,OAAOm0C,YACnBC,EAAgBx2C,KAAKwB,QAAQi1C,kBAAkBv0C,GACnD,GAAIs0C,IAAkBprC,EAAK,CACzB,IAAIsnB,EAAM,QAAU1T,EAASxb,KAAK8yC,iBAChC,iBAAmBE,EAAgB,KACrCx2C,KAAKwB,QAAQk1C,0BAA0B13B,EACrC,CAACA,EAASxb,KAAKmzC,WAAYjkB,MAOjC0jB,+BAAgC,SAAwCp3B,GACtE,GAAKA,EAASxb,KAAd,CAEA,IAAIhC,EAAUxB,KAAKwB,QACfo1C,EAAU,GACVpkB,EAAS,GACTqkB,EAAa,GACjBjzC,EAAIpE,KAAKyF,UAAU+Z,EAASxb,KAAKszC,YAAY,SAAUC,GACrDH,EAAQG,EAAMC,IAAMD,KAEtBnzC,EAAIpE,KAAKyF,UAAUjF,KAAKoC,OAAO60C,SAAS,SAAUF,GAChD,GAAIH,EAAQG,EAAMC,IAAK,CACrB,IAAI5rC,EAAMwrC,EAAQG,EAAMC,IAAIV,iBACxBp0C,EAAO60C,EAAMR,YACZ/0C,EAAQ01C,gBAAgB9rC,EAAKlJ,KAChCswB,EAAOrtB,KAAK4xC,EAAMC,IAClBH,EAAW1xC,KAAKyxC,EAAQG,EAAMC,IAAIL,gBAKpCnkB,EAAO5xB,OAAS,GAClBY,EAAQk1C,0BAA0B13B,EAAU63B,EAC1C,qBAAuBrkB,EAAOptB,KAAK,SAOzCixC,6BAA8B,SAAsCr3B,GAClE,GAAKA,EAASxb,KAAd,CAEA,IAAIhC,EAAUxB,KAAKwB,QACfq1C,EAAa,GACjBjzC,EAAIpE,KAAKyF,UAAU+Z,EAASxb,KAAK2zC,UAAU,SAASx2C,GAClD,IAAIyK,EAAMzK,EAAQy2C,UACdl1C,EAAOvB,EAAQs4B,KACdz3B,EAAQ01C,gBAAgB9rC,EAAKlJ,IAChC20C,EAAW1xC,KAAKxE,EAAQg2C,cAIxBE,EAAWj2C,OAAS,GACtBY,EAAQk1C,0BAA0B13B,EAAU63B,EAC1C,qBAAuBA,EAAWzxC,KAAK,SAO7CsxC,0BAA2B,SAAmC13B,EAAUq4B,EAAK12C,GAC3Eqe,EAASxe,MAAQoD,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAC3CkS,WAAW,EACXjS,KAAM,kBACNm2C,WAAYQ,EACZ12C,QAASqe,EAAS3b,QAAQzB,UACjB,sCAAwCjB,KAOrDu2C,gBAAiB,SAAyBI,EAAU9zC,GAClD,OAAOxD,KAAKy2C,kBAAkBjzC,KAAU8zC,GAM1Cb,kBAAmB,SAA2BjzC,GAC5C,OAAOI,EAAIpE,KAAKgL,OAAOY,IAAI5H,EAAM,QAMnC2b,cAAe,SAAuB9b,GACpC,IAAIiC,EAAMjC,EAAQ/B,YAAYc,OAAOm1C,SACrC,GAAIjyC,EAAK,CACPjC,EAAQ/B,YAAYoZ,SAAW,IAAI9W,EAAIyb,SAAS/Z,GAIhD,IAAIkyC,EAAUn0C,EAAQ/B,YAAYoZ,SAASC,KAAK3R,MAAM,iBAClDwuC,IAASn0C,EAAQ/B,YAAYsT,OAAS4iC,EAAQ,S,uBC/HxD,IAAIh4C,EAAO,EAAQ,QAGnBA,EAAKgL,OAAOS,IAAM,EAAQ,QAC1BzL,EAAKyH,OAAS,EAAQ,QAAWA,OACjCzH,EAAK8F,IAAM,EAAQ,QACnB9F,EAAKmG,YAAc,EAAQ,QAC3BnG,EAAKi0C,UAAY,EAAQ,QACzBj0C,EAAKqE,YAAc,KACnBrE,EAAKmuB,kBAAoB,EAAQ,QAA+CA,kBAChFnuB,EAAKuE,UAAY,WAAa,OAAO,GACrCvE,EAAKkQ,OAAS,WAAa,OAAO,GAElC,IAAI9L,EAAM,EAAQ,QAqBlB,GAhBA7C,EAAOC,QAAU4C,EAEjB,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QAGRA,EAAIumB,IAAIC,OAAS,EAAQ,QAGzB,EAAQ,aAEe,IAAZlmB,EACT,IAAIA,EAAU,CACZuzC,SAAS,I,ytCCpCb,IAAIj4C,EAAO,EAAQ,QAAWA,KAC1BsH,EAAWtH,EAAKqH,OAAOC,SAkE3B/F,EAAOC,QAAU,CACb02C,aAnDJ,SAAsB/2C,GAGlB,GAFKnB,EAAKyH,OAAOS,SAAS/G,KAAUA,EAAUmG,EAASnG,IAEnDA,EAAQC,OAVa+2C,GAWrB,MAAM,IAAIl3C,MAAM,2EAGpB,GAAIE,EAAQC,SAAWD,EAAQi3C,aAAa,GACxC,MAAM,IAAIn3C,MAAM,kEAGpB,IAAIo3C,EAA0Bl3C,EAAQi3C,aAtBrBE,GAwBjB,GACID,IAA4Br4C,EAAKgL,OAAOE,MACpC/J,EAAQqH,MAAM,EA1BL8vC,IA6Bb,MAAM,IAAIr3C,MACN,kDACAo3C,EACA,mDAIR,IAAIE,EAA0Bp3C,EAAQi3C,aAAaj3C,EAAQC,OAlCzC,GAoClB,GACIm3C,IAA4Bv4C,EAAKgL,OAAOE,MACpC/J,EAAQqH,MAAM,EAAGrH,EAAQC,OAtCf,IAyCd,MAAM,IAAIH,MACN,4DACIs3C,GAIZ,IACIC,EADeL,GACah3C,EAAQi3C,aApDhB,GAsDxB,MAAO,CACHv1C,QAAS1B,EAAQqH,MAJF2vC,GAIsBK,GACrC91C,KAAMvB,EAAQqH,MAAMgwC,EAAYr3C,EAAQC,OApD1B,O,g0cCEtBG,EAAOC,QAAU,CACb0hC,gBARJ,SAAyBx8B,GACrB,OAAOA,EAAMxB,QAAQ,KAAM,SAASA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,a,uBCJ1H,EAAQ,QACR,IAAId,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAyB,eAAI,GACvCpS,EAAIkgB,eAAiBhO,EAAQI,cAAc,iBAAkB,CAAC,eAC9DnQ,OAAO8H,eAAekI,EAAUC,SAAyB,eAAG,aAAc,CACxElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAqDC,WACzEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIkgB,gB,y8OCjBrB,IAAIm0B,EAAK,EAAQ,QACb9kC,EAAK,EAAQ,QAEbD,EAAOC,EACXD,EAAK+kC,GAAKA,EACV/kC,EAAKC,GAAKA,EAEVpS,EAAOC,QAAUkS,G,uBCPjB,EAAQ,QACR,IAAItP,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAA4B,kBAAI,GAC1CpS,EAAIyhB,kBAAoBvP,EAAQI,cAAc,oBAAqB,CAAC,eACpEnQ,OAAO8H,eAAekI,EAAUC,SAA4B,kBAAG,aAAc,CAC3ElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAyDC,WAC7EF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIyhB,mB,uBCjBrB,EAAQ,QACR,IAAIzhB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAmB,SAAI,GACjCpS,EAAIic,SAAW/J,EAAQI,cAAc,WAAY,CAAC,aAAc,eAChE,EAAQ,QACRnQ,OAAO8H,eAAekI,EAAUC,SAAmB,SAAG,aAAc,CAClElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA+CC,WAC1EF,EAAMuD,QAAU,EAAQ,QAA6CA,QAC9DvD,GAETpI,YAAY,EACZW,cAAc,IAEhB3I,OAAO8H,eAAekI,EAAUC,SAAmB,SAAG,aAAc,CAClElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA+CC,WAC1EF,EAAMuD,QAAU,EAAQ,QAA6CA,QAC9DvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIic,U,uBC7BrB,IAAIq4B,EAAa,EAAQ,QAErB14C,EAAO,EAAQ,QAEnB,SAASmP,EAASvB,EAAKvL,EAAMqE,GACvBA,SACF1G,EAAKmP,SAAShF,MAAM3J,KAAM0J,WAI9B,SAASqF,EAAiB3B,EAAKvL,GACxBuL,EAAIvN,YAAY2J,UAAU3H,IAC7BrC,EAAKuP,iBAAiBpF,MAAM3J,KAAM0J,WAItC,SAAS4M,EAAM7S,EAAO1D,EAASqY,GAC7BrY,EAAUA,GAAW,GAErB4O,EAAS3O,KAAM,QAASyD,EAAMA,OAC9BkL,EAAS3O,KAAM,MAAOD,EAAQwB,KAAK,GACnCoN,EAAS3O,KAAM,OAAQyD,EAAMlD,MAC7BoO,EAAS3O,KAAM,OAAQyD,EAAM00C,MAC7BxpC,EAAS3O,KAAM,MAAOyD,EAAM20C,KAC5BzpC,EAAS3O,KAAM,MAAOyD,EAAM40C,KAC5B1pC,EAAS3O,KAAM,UAAWyD,EAAMukB,SAChCrZ,EAAS3O,KAAM,WAAYyD,EAAMoiB,UAAY7lB,KAAK6lB,UAAY,QAC9DlX,EAAS3O,KAAM,OAAQA,KAAK6B,MAAQ4B,EAAM60C,SAAW70C,EAAM80C,WACzD90C,EAAMqiB,cAAgB1N,GACxBzJ,EAAS3O,KAAM,cAAeyD,EAAMurB,WAAahvB,KAAKynC,cAAe,GACrE94B,EAAS3O,KAAM,iBAAkByD,EAAM+0C,gBAAgB,GACvD7pC,EAAS3O,KAAM,cAAeyD,EAAMg1C,cAAe,GACnD9pC,EAAS3O,KAAM,WAAW,GAAM,GAChC2O,EAAS3O,KAAM,cAAe+/B,QAAQt8B,EAAM80C,YAAY,GACxD5pC,EAAS3O,KAAM,iBAAkB+/B,QAAQt8B,EAAMqiB,eAAe,GAC9DnX,EAAS3O,KAAM,gBAA2C,IAA3ByD,EAAMi1C,kBACrC/pC,EAAS3O,KAAM,eAAmC,IAApByD,EAAMk1C,WACpChqC,EAAS3O,KAAM,eAAmC,IAApByD,EAAMm1C,WAAsBn1C,EAAM+F,YAA2C,IAA9B/F,EAAM+F,UAAUovC,WAC7FjqC,EAAS3O,KAAM,gBAAiB+/B,QAAQt8B,EAAMo1C,cAAc,GAC5DlqC,EAAS3O,KAAM,UAAW+/B,QAAQt8B,EAAMilC,QAAQ,GAChD/5B,EAAS3O,KAAM,iBAAkB+/B,QAAQt8B,EAAMq1C,eAAe,GAC9DnqC,EAAS3O,KAAM,gBAAiB+/B,QAAQt8B,EAAMs1C,cAAc,GAC5DpqC,EAAS3O,KAAM,uBAAwB+/B,QAAQt8B,EAAMu1C,kBAAoBv1C,EAAM+F,YAAsD,IAAzC/F,EAAM+F,UAAUyvC,sBAA+B,GAC3ItqC,EAAS3O,KAAM,sBAAuB+/B,QAAQt8B,EAAMy1C,sBAAsB,GAC1EvqC,EAAS3O,KAAM,YAAa+/B,QAAQt8B,EAAMsyC,YAAY,GAElDh2C,EAAQo5C,gBACVxqC,EAAS3O,KAAM,gBAAiByD,EAAM01C,eACtCxqC,EAAS3O,KAAM,mBAAoByD,EAAM21C,mBAGvC31C,EAAM41C,cACR1qC,EAAS3O,KAAM,iBAAkByD,EAAM41C,eAAgB,GAIzD1qC,EAAS3O,KAAM,eAAgB,MAC/BA,KAAKmmB,aAAe,SAASjgB,GAC3B,OAAIA,QAA8C,GAC3CA,GAETlG,KAAKkY,OAAS,SAAShS,GAAS,OAAOA,GAsFzC,SAASozC,EAAe71C,GACtB6S,EAAM3M,MAAM3J,KAAM0J,WAClBiF,EAAS3O,KAAM,eAAe,GAE1ByD,EAAM2T,WACRzI,EAAS3O,KAAM,YAAayD,EAAM2T,YAAa,GAInD,SAASmiC,EAAe91C,EAAO1D,GAC7B,IAAIsR,EAAOrR,KACPw5C,EAAc,KAAMC,GAAaz5C,KAAK05C,QAE1CJ,EAAe3vC,MAAM3J,KAAM0J,WAEvB+vC,IACF9qC,EAAS3O,KAAM,gBAAgB,WAAa,MAAO,MACnD2O,EAAS3O,KAAM,UAAW,IAC1B2O,EAAS3O,KAAM,cAAe,IAC9B2O,EAAS3O,KAAM,WAAY,IAC3B2O,EAAS3O,KAAM,cAAc,WAAa,OAAO,MAG/CyD,EAAM6L,UACRX,EAAS3O,KAAM,UAAW,IAAIk4C,EAAWz0C,EAAM6L,QAASvP,GAAS,SAAS8B,EAAM8V,GAC9E,OAAOrB,EAAM0B,OAAOL,EAAQ5X,EAAS8B,OAEvCkN,EAAiB/O,KAAM,eAAe,WACpC,OAAOyD,EAAMk2C,UAAY5zC,OAAOC,KAAKvC,EAAM6L,YAGzC7L,EAAMilC,QACR35B,EAAiB/O,KAAM,0BAA0B,WAI/C,IAHA,IAAIsP,EAAU+B,EAAK/B,QACfsqC,EAAcvoC,EAAKuoC,YAEd/4C,EAAI,EAAGgW,EAAO+iC,EAAYh5C,OAAQC,EAAIgW,EAAMhW,IACnD,GAAIyO,EAAQsqC,EAAY/4C,IAAIg5C,eAC1B,OAAOD,EAAY/4C,MAKzBkO,EAAiB/O,KAAM,0BAA0B,WAK/C,IAJA,IAAIsP,EAAU+B,EAAK/B,QACfsqC,EAAcvoC,EAAKuoC,YACnBxS,EAAyB,GAEpBvmC,EAAI,EAAGgW,EAAO+iC,EAAYh5C,OAAQC,EAAIgW,EAAMhW,IAC/CyO,EAAQsqC,EAAY/4C,IAAIi5C,eAC1B1S,EAAuBjiC,KAAKy0C,EAAY/4C,IAG5C,OAAOumC,OAKT3jC,EAAMsvB,WACRpkB,EAAS3O,KAAM,WAAYyD,EAAMsvB,UACjCpkB,EAAS3O,KAAM,cAAc,SAAS6B,GACpC,IAAK23C,EAAa,CAChBA,EAAc,GACd,IAAK,IAAI34C,EAAI,EAAGA,EAAI4C,EAAMsvB,SAASnyB,OAAQC,IACzC24C,EAAY/1C,EAAMsvB,SAASlyB,KAAM,EAIrC,OAAO24C,EAAY33C,MAClB,GAAO,IAGZ8M,EAAS3O,KAAM,gBAAiByD,EAAMs2C,eAAiB,MAEnDt2C,EAAM0L,SACRR,EAAS3O,KAAM,UAAWyD,EAAM0L,SAGA,iBAAvB1L,EAAMu2C,aACfrrC,EAAS3O,KAAM,kBAAmByD,EAAMu2C,cACD,iBAAvBv2C,EAAMu2C,eACtBrrC,EAAS3O,KAAM,qBAAsByD,EAAMu2C,aAAaxiB,QACxD7oB,EAAS3O,KAAM,kBAAmByD,EAAMu2C,aAAanzB,MAIzD,SAASozB,EAAUx2C,EAAO1D,GACxB,IAAIsR,EAAOrR,KAAMy5C,GAAaz5C,KAAK05C,QAanC,GAZAJ,EAAe3vC,MAAM3J,KAAM0J,WAEvB+vC,GACF9qC,EAAS3O,KAAM,gBAAgB,WAAa,MAAO,MAGjDyD,EAAMkU,QACR5I,EAAiB/O,KAAM,UAAU,WAC/B,OAAOsW,EAAM0B,OAAOvU,EAAMkU,OAAQ5X,MAIlCC,KAAKoX,UAAW,CAClB,IAAI8iC,EAAUl6C,KAAK6B,KACnBkN,EAAiB/O,KAAM,QAAQ,WAC7B,OAAOqR,EAAKsG,OAAO9V,MAAQq4C,MAKjC,SAASC,EAAS12C,EAAO1D,GACvB,IAAI05C,GAAaz5C,KAAK05C,QACtBJ,EAAe3vC,MAAM3J,KAAM0J,WAEvB+vC,IACF9qC,EAAS3O,KAAM,gBAAgB,WAAa,MAAO,MACnD2O,EAAS3O,KAAM,MAAOsW,EAAM0B,OAAO,CAACzX,KAAM,UAAWR,IACrD4O,EAAS3O,KAAM,QAASsW,EAAM0B,OAAO,CAACzX,KAAM,UAAWR,KAGrD0D,EAAMsH,KACRgE,EAAiB/O,KAAM,OAAO,WAC5B,OAAOsW,EAAM0B,OAAOvU,EAAMsH,IAAKhL,MAG/B0D,EAAMyC,OACR6I,EAAiB/O,KAAM,SAAS,WAC9B,OAAOsW,EAAM0B,OAAOvU,EAAMyC,MAAOnG,MA2CvC,SAASq6C,IACP9jC,EAAM3M,MAAM3J,KAAM0J,WAElB,IAAI2wC,EAAoB,CAAC,WAAY,QAAS,OAC9Cr6C,KAAKkY,OAAS,SAAShS,GAGrB,OAFAA,EAAQlG,KAAKuB,KAAO84C,EAAkB7lC,QAAQxU,KAAKuB,IAAIopB,WAAa,EAClEzkB,GAAS,GAAKA,EACZlG,KAAK2nB,YACAhlB,KAAKC,MAAMsD,GAGbA,GAAmC,mBAAnBA,EAAMrD,SAC3BqD,EAAMrD,WAAaqD,GAGvBlG,KAAKmmB,aAAe,SAASjgB,GAC3B,OAAOlG,KAAK2nB,YAAchlB,KAAK0jB,UAAUngB,GAASA,GAwBtD,SAASo0C,IACPhkC,EAAM3M,MAAM3J,KAAM0J,WAClB1J,KAAKkY,OAAS,SAAShS,GACrB,IAAIqB,EAAM/H,EAAKmH,OAAOI,OAAOb,GAC7B,GAAIlG,KAAKu6C,aAAe/6C,EAAKkQ,UAAyC,mBAAtBlQ,EAAKyH,OAAOG,MAAsB,CAQhF,IAAIozC,EAAYh7C,EAAKyH,OAAOG,MAAMG,EAAI3G,OAAQ2G,GAC9CA,EAAID,KAAK,GACTC,EAAMizC,EAER,OAAOjzC,GAETvH,KAAKmmB,aAAe3mB,EAAKmH,OAAOC,OAGlC,SAAS6zC,IACPH,EAAY3wC,MAAM3J,KAAM0J,WAG1B,SAASgxC,IACPpkC,EAAM3M,MAAM3J,KAAM0J,WAElB1J,KAAKkY,OAAS,SAAShS,GACrB,MAAqB,kBAAVA,EAA4BA,EACnCA,QAA8C,KACjC,SAAVA,GA/TXoQ,EAAMqkC,gBAAkB,CACtBC,UAAW,SACXC,OAAQ,QACRC,KAAM,UACNC,MAAO,UACPC,WAAY,UACZC,WAAY,QACZC,KAAM,UAMR5kC,EAAMge,MAAQ,CACZ,UAAailB,EACb,KAAQU,EACR,IAAOE,EACP,QAAWO,EACX,UAgMF,SAAwBj3C,GACtB,IAAI4N,EAAOrR,KAGX,GAFAsW,EAAM3M,MAAM3J,KAAM0J,WAEdjG,EAAMu1C,gBACRrqC,EAAS3O,KAAM,kBAAmByD,EAAMu1C,sBACnC,GAAI3nC,EAAK4nC,sBAAwBj5C,KAAKg5C,gBAC3CrqC,EAAS3O,KAAM,kBAAmBA,KAAKg5C,sBAClC,GAAsB,WAAlBh5C,KAAK6lB,SACdlX,EAAS3O,KAAM,kBAAmB,eAC7B,GAAsB,gBAAlBA,KAAK6lB,SACdlX,EAAS3O,KAAM,kBAAmB,gBAC7B,GAAIA,KAAKuB,IACd,OAAQvB,KAAKuB,IAAIopB,UACf,IAAK,OACL,IAAK,YACHhc,EAAS3O,KAAM,kBAAmB,iBAClC,MACF,IAAK,WACL,IAAK,QACL,IAAK,MACH2O,EAAS3O,KAAM,kBAAmB,WAKxCA,KAAKkY,OAAS,SAAShS,GACrB,OAAIA,QAA8C,KACjB,mBAAtBA,EAAMkE,YAAmClE,EAC5B,iBAAVA,GAAuC,iBAAVA,EACpC1G,EAAKoK,KAAKW,eAAerE,GAAS,MAG3ClG,KAAKmmB,aAAe,SAASjgB,GAC3B,OAAO1G,EAAKoK,KAAKpE,OAAOU,EAAOmL,EAAK2nC,mBAjOtC,MAyPF,WACE1iC,EAAM3M,MAAM3J,KAAM0J,WAElB1J,KAAKkY,OAAS,SAAShS,GACrB,OAAIA,QAA8C,KAC3CkuB,WAAWluB,IAEpBlG,KAAKmmB,aAAenmB,KAAKkY,QA/PzB,QAkQF,WACE5B,EAAM3M,MAAM3J,KAAM0J,WAElB1J,KAAKkY,OAAS,SAAShS,GACrB,OAAIA,QAA8C,KAC3C4G,SAAS5G,EAAO,KAEzBlG,KAAKmmB,aAAenmB,KAAKkY,QAxQzB,OAAUkiC,EACV,OAAUK,EACV,OAAUH,GAGZhkC,EAAMhF,QAAU,SAAiB7N,EAAO1D,GACtC,GAAI0D,EAAMA,MAAO,CACf,IAAI03C,EAAWp7C,EAAQwB,IAAI65C,OAAO33C,EAAMA,OACxC,IAAK03C,EACH,MAAM,IAAI16C,MAAM,gCAAkCgD,EAAMA,OAG1D,OAAO03C,EAEP,OAAO,MAIX7kC,EAAM0B,OAAS,SAAgBvU,EAAO1D,EAASqY,GAC7C,GAAI3U,EAAMi2C,QAAS,OAAOj2C,EAE1B,IAAI03C,EAAW7kC,EAAMhF,QAAQ7N,EAAO1D,GACpC,GAAIo7C,EAAU,CACZ,IAAIE,EAAet1C,OAAOC,KAAKvC,GAC1B1D,EAAQo5C,gBACXkC,EAAeA,EAAa1L,QAAO,SAAS9tC,GAC1C,OAAQA,EAAKmH,MAAM,qBAKvB,IAAIsyC,EAAc,WAChBH,EAASt7C,YAAY4J,KAAKzJ,KAAMyD,EAAO1D,EAASqY,IAGlD,OADAkjC,EAAY9xC,UAAY2xC,EACjB,IAAIG,EAGN73C,EAAMlD,OACLkD,EAAM6L,QAAS7L,EAAMlD,KAAO,YACvBkD,EAAMkU,OAAQlU,EAAMlD,KAAO,OAC3BkD,EAAMsH,IAAKtH,EAAMlD,KAAO,MAC5BkD,EAAMlD,KAAO,UAIpB,IAAIg7C,EAAW93C,EAAMlD,KAKrB,GAJI+V,EAAMqkC,gBAAgBl3C,EAAMlD,QAC9BkD,EAAMlD,KAAO+V,EAAMqkC,gBAAgBl3C,EAAMlD,OAGvC+V,EAAMge,MAAM7wB,EAAMlD,MACpB,OAAO,IAAI+V,EAAMge,MAAM7wB,EAAMlD,MAAMkD,EAAO1D,EAASqY,GAEnD,MAAM,IAAI3X,MAAM,4BAA8B86C,IA2PpDjlC,EAAM8kC,OAAS,CACb7B,eAAgBA,EAChBU,UAAWA,EACXE,SAAUA,EACVC,YAAaA,EACbM,aAAcA,EACdD,YAAaA,GAMf15C,EAAOC,QAAUsV,G,ijFCrZjB,IAAI9W,EAAO,EAAQ,QAAWA,KAC1BsH,EAAWtH,EAAKqH,OAAOC,SAY3B,SAAS00C,EAAMC,GACX,GAAqB,IAAjBA,EAAM76C,OACN,MAAM,IAAIH,MAAM,yCAEfjB,EAAKyH,OAAOS,SAAS+zC,KAAQA,EAAQ30C,EAAS20C,IAEnDz7C,KAAKy7C,MAAQA,EAwDjB,SAASC,EAAOD,GACZ,IAAK,IAAI56C,EAAI,EAAGA,EAAI,EAAGA,IACnB46C,EAAM56C,IAAM,IAEhB,IAASA,EAAI,EAAGA,GAAK,IACjB46C,EAAM56C,KACW,IAAb46C,EAAM56C,IAFUA,MAnD5B26C,EAAMG,WAAa,SAASC,GACxB,GAAIA,EAAS,oBAAuBA,GAAU,mBAC1C,MAAM,IAAIn7C,MACNm7C,EAAS,uEAKjB,IADA,IAAIH,EAAQ,IAAIt0C,WAAW,GAEnBtG,EAAI,EAAGg7C,EAAY1rC,KAAKC,IAAID,KAAKujC,MAAMkI,IAC3C/6C,GAAK,GAAKg7C,EAAY,EACtBh7C,IAAKg7C,GAAa,IAElBJ,EAAM56C,GAAKg7C,EAOf,OAJID,EAAS,GACTF,EAAOD,GAGJ,IAAID,EAAMC,IAQrBD,EAAMhyC,UAAUg0B,QAAU,WACtB,IAAIie,EAAQz7C,KAAKy7C,MAAMzzC,MAAM,GACzB8zC,EAAsB,IAAXL,EAAM,GAKrB,OAJIK,GACAJ,EAAOD,GAGJ3uC,SAAS2uC,EAAM54C,SAAS,OAAQ,KAAOi5C,GAAY,EAAI,IAGlEN,EAAMhyC,UAAU3G,SAAW,WACvB,OAAOmL,OAAOhO,KAAKw9B,YAuBvBz8B,EAAOC,QAAU,CACbw6C,MAAOA,I,4qCC3FX,IAAIv0C,EAAS,EAAQ,QAAWA,OASL,oBAAhB0E,kBACuB,IAAvBA,YAAYowC,SAEnBpwC,YAAYowC,OAAS,SAAS3O,GAC1B,OAAO4O,EAAYxnC,QAAQzO,OAAOyD,UAAU3G,SAAS4G,KAAK2jC,KAAS,IAO3E,IAAI4O,EAAc,CACd,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,wBACA,qBA+BJj7C,EAAOC,QAAoB,CACvBi7C,YA1BJ,SAAqBz4C,GACjB,MAAoB,iBAATA,EACgB,IAAhBA,EAAK5C,OAEW,IAApB4C,EAAK4E,YAuBZ8zC,gBAjBJ,SAAyB14C,GAKrB,MAJoB,iBAATA,IACPA,EAAO,IAAIyD,EAAOzD,EAAM,SAGxBmI,YAAYowC,OAAOv4C,GACZ,IAAI2D,WAAW3D,EAAKqD,OAAQrD,EAAK24C,WAAY34C,EAAK4E,WAAajB,WAAWi1C,mBAG9E,IAAIj1C,WAAW3D,M,02JCvD1B,EAAQ,S,qBCAR,EAAQ,QACR,IAAII,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAA0B,gBAAI,GACxCpS,EAAIsb,gBAAkBpJ,EAAQI,cAAc,kBAAmB,CAAC,eAChE,EAAQ,QACRnQ,OAAO8H,eAAekI,EAAUC,SAA0B,gBAAG,aAAc,CACzElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAsDC,WACjFF,EAAMuD,QAAU,EAAQ,QAAoDA,QACrEvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIsb,iB,qBCnBrB,EAAQ,QACR,IAAItb,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAqB,WAAI,GACnCpS,EAAI+d,WAAa7L,EAAQI,cAAc,aAAc,CAAC,eACtDnQ,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAiDC,WACrEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI+d,Y,gutECjBrB,EAAQ,QACR,IAAI/d,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAqB,WAAI,GACnCpS,EAAI0d,WAAaxL,EAAQI,cAAc,aAAc,CAAC,eACtDnQ,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAiDC,WACrEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI0d,Y,8oHCFrB,IAAI1d,EAAM,EAAQ,QACdhE,EAAUgE,EAAIpE,KAAKI,QACnB0jC,EAAW,EAAQ,QAKvB,SAAS+Y,EAAgB95C,GACvB,IAAI8W,EAAS9W,EAAKc,QAAQi5C,QACtBC,EAAYljC,EAAO/V,OAAOi5C,UAC1BC,GAAkB,EAClB5Q,EAAQ,QAEZ2Q,EAAUjjC,SAAQ,SAASmjC,GACzB,IAAKD,EAAiB,CACpB,IAAIE,EAAUrjC,EAAOsjC,SAASF,EAASC,SACnCA,GAAWA,EAAQn6C,EAAMk6C,EAASG,SAAUH,EAASI,YACvDL,GAAkB,EAClB5Q,EAAQ6Q,EAAS7Q,YAKlB4Q,GAAmBj6C,EAAK/B,QAAOorC,EAAQ,WAE9B,YAAVA,EACFvyB,EAAOyjC,WAAWv6C,GAElB8W,EAAO0jC,SAASx6C,EAAgB,UAAVqpC,GAO1BhoC,EAAIisB,eAAiBjwB,EAAQ,CAU3BC,YAAa,SAAqB2B,EAASoqC,GACzC5rC,KAAKwB,QAAUA,EACfxB,KAAK4rC,MAAQA,EACb5rC,KAAKg9C,iBAAiBh9C,KAAK4rC,QAG7BpqC,QAAS,KAEToqC,MAAO,KAEPtoC,OAAQ,KAERq5C,SAAU,CACRj2C,KAAM,SAASnE,EAAMq6C,EAAUC,GAC7B,IACE,IAAIz2C,EAASk9B,EAASjlB,OAAO9b,EAAKiB,KAAMq5C,GACxC,MAAOzzC,GACP,OAAO,EAGT,OAAOk6B,EAAS2Z,gBAAgB72C,EAAOw2C,IAGzCM,QAAS,SAAS36C,EAAMq6C,EAAUC,GAChC,IACE,IAAIM,EAAU7Z,EAASjlB,OAAO9b,EAAKiB,KAAMq5C,GACzC,MAAOzzC,GACP,OAAO,EAGJ/C,MAAMC,QAAQ62C,KAAUA,EAAU,CAACA,IACxC,IAAIC,EAAaD,EAAQv8C,OACzB,IAAKw8C,EAAY,OAAO,EACxB,IAAK,IAAIpsC,EAAM,EAAIA,EAAMosC,EAAYpsC,IACnC,IAAKsyB,EAAS2Z,gBAAgBE,EAAQnsC,GAAM4rC,GAC1C,OAAO,EAGX,OAAO,GAGTS,QAAS,SAAS96C,EAAMq6C,EAAUC,GAChC,IACE,IAAIM,EAAU7Z,EAASjlB,OAAO9b,EAAKiB,KAAMq5C,GACzC,MAAOzzC,GACP,OAAO,EAGJ/C,MAAMC,QAAQ62C,KAAUA,EAAU,CAACA,IAExC,IADA,IAAIC,EAAaD,EAAQv8C,OAChBoQ,EAAM,EAAIA,EAAMosC,EAAYpsC,IACnC,GAAIsyB,EAAS2Z,gBAAgBE,EAAQnsC,GAAM4rC,GACzC,OAAO,EAGX,OAAO,GAGT1xB,OAAQ,SAAS3oB,EAAMq6C,GACrB,IAAI15C,EAAaX,EAAKC,aAAaU,WACnC,MAA8B,iBAAfA,GAA6BA,IAAe05C,GAG7Dp8C,MAAO,SAAS+B,EAAMq6C,GACpB,MAAwB,iBAAbA,GAAyBr6C,EAAK/B,MAChCo8C,IAAar6C,EAAK/B,MAAME,KAG1Bk8C,MAAer6C,EAAK/B,QAI/BmnC,WAAW,IAAI/jC,EAAIksB,oBAAqB+Y,mBAAkB,SAASyU,GACjEA,EAAI,cAAe,SAAS,SAAS/6C,GACnC,IAAI8W,EAAS9W,EAAKc,QAAQi5C,QACtB/5C,EAAK/B,OAA6B,qBAApB+B,EAAK/B,MAAME,OAC3B6B,EAAK/B,MAAM+8C,WAA0C,KAA5BlkC,EAAO/V,OAAOsP,OAAS,OAIpD0qC,EAAI,eAAgB,cAAejB,GAEnCiB,EAAI,cAAe,eAAgBjB,MAMrC9K,KAAM,SAAcnvC,EAAQ+G,GACJ,mBAAX/G,IACT+G,EAAW/G,EAAQA,OAASoF,GAG1BpF,GAAUA,EAAOo7C,UAEiB,iBADpCp7C,EAASwB,EAAIpE,KAAK2I,KAAK/F,IACLo7C,QAAQ5qC,QACxB5S,KAAKsD,OAAOsP,MAAQxQ,EAAOo7C,QAAQ5qC,OAEK,iBAA/BxQ,EAAOo7C,QAAQC,cACxBz9C,KAAKsD,OAAOm6C,YAAcr7C,EAAOo7C,QAAQC,oBAEpCr7C,EAAOo7C,SAGhB,IAAIn6C,EAAUrD,KAAKwB,QAAQ66B,YAAYr8B,KAAKsD,OAAO1B,UAAWQ,GAM9D,OALAiB,EAAQi5C,QAAUt8C,KAClBqD,EAAQ2b,SAAStM,WAAa1S,KAAKsD,OAAOm6C,YAC1Cp6C,EAAQolC,aAAazoC,KAAK2nC,WAEtBx+B,GAAU9F,EAAQ8oB,KAAKhjB,GACpB9F,GAGTy5C,WAAY,SAAoBv6C,GAC9BA,EAAK/B,MAAQ,KACb+B,EAAKiB,KAAOjB,EAAKiB,MAAQ,GACzBjB,EAAKc,QAAQ8+B,mBAAmB,gBAGlC4a,SAAU,SAAkBx6C,EAAMoQ,GAChCpQ,EAAKiB,KAAO,KACZjB,EAAK/B,MAAQoD,EAAIpE,KAAKgB,MAAM+B,EAAK/B,OAAS,IAAIC,MAAS,CACrDC,KAAM,mBACNC,QAAS,gCAAkCX,KAAK4rC,MAChDj5B,UAAWA,KASfqqC,iBAAkB,SAA0BpR,GAC1C,IAAK5rC,KAAKwB,QAAQD,IAAImY,QAAQkyB,GAC5B,MAAM,IAAIhoC,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CACpCC,KAAM,qBACNC,QAAS,SAAWirC,EAAQ,gBAIhC5rC,KAAKsD,OAASM,EAAIpE,KAAK2I,KAAKnI,KAAKwB,QAAQD,IAAImY,QAAQkyB,Q,iFCzMzD,EAAQ,QACR,IAAIhoC,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAsB,YAAI,GACpCpS,EAAIoe,YAAclM,EAAQI,cAAc,cAAe,CAAC,eACxDnQ,OAAO8H,eAAekI,EAAUC,SAAsB,YAAG,aAAc,CACrElH,IAAK,WAEH,OADY,EAAQ,SAGtBf,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIoe,a,qBChBrB,EAAQ,QACR,IAAIpe,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAsB,YAAI,GACpCpS,EAAIsd,YAAcpL,EAAQI,cAAc,cAAe,CAAC,eACxDnQ,OAAO8H,eAAekI,EAAUC,SAAsB,YAAG,aAAc,CACrElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAkDC,WACtEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIsd,a,qBCjBrB,IAAI0L,EAAM,EAAQ,QACdC,EAAc,EAAQ,QA2B1B9rB,EAAOC,QAzBP,SAAYjB,EAASwH,EAAKW,GACxB,IAAIrH,EAAI0G,GAAOW,GAAU,EAEF,iBAAb,IACRX,EAAkB,WAAZxH,EAAuB,IAAIsG,MAAM,IAAM,KAC7CtG,EAAU,MAIZ,IAAI2kC,GAFJ3kC,EAAUA,GAAW,IAEFkS,SAAWlS,EAAQ6sB,KAAOA,KAO7C,GAJA8X,EAAK,GAAgB,GAAVA,EAAK,GAAa,GAC7BA,EAAK,GAAgB,GAAVA,EAAK,GAAa,IAGzBn9B,EACF,IAAK,IAAIm2C,EAAK,EAAGA,EAAK,KAAMA,EAC1Bn2C,EAAI1G,EAAI68C,GAAMhZ,EAAKgZ,GAIvB,OAAOn2C,GAAOslB,EAAY6X,K,kiuBCzB5B,IAAI9gC,EAAM,EAAQ,QACdwE,EAAaxE,EAAIpE,KAAKgF,OAAO4D,WAC7BnB,EAASrD,EAAIpE,KAAKyH,OAoCtBrD,EAAIgS,GAAGooB,cAAgBp6B,EAAIpE,KAAKI,QAAQ,CA4CtCC,YAAa,SAAuBE,GAClC,IAAIsR,EAAOrR,KACX4D,EAAIksB,mBAAmBrmB,KAAK4H,GAC5BA,EAAKnP,KAAO,KACZmP,EAAK5F,QAAU,KACf4F,EAAKlI,SAAW,KAChBkI,EAAKrM,MAAQ,GACbqM,EAAKssC,aAAe,GACpBtsC,EAAKusC,UAAY,WACfvsC,EAAKlI,SAAS,IAAI1I,MAAM,mCAAqC4Q,EAAKnP,QAGpEmP,EAAKwsC,UAAU99C,IAMjB89C,UAAW,SAAmB99C,GAO5B,GANAA,EAAUA,GAAW,GACrBC,KAAK89C,SAAW99C,KAAK+9C,YAEjBh+C,EAAQi+C,YAAWh+C,KAAKg+C,UAAYj+C,EAAQi+C,WAC5Cj+C,EAAQ+9C,WAAU99C,KAAK89C,SAAW/9C,EAAQ+9C,UAC1C/9C,EAAQk+C,oBAAmBj+C,KAAKi+C,mBAAoB,GACpDl+C,EAAQm+C,KAAM,CAChB,IAAK73C,MAAMC,QAAQvG,EAAQm+C,MACzB,MAAM,IAAIz9C,MAAM,8CACPV,EAAQm+C,KAAO,cAE1Bl+C,KAAKk+C,KAAOn+C,EAAQm+C,KAGtB,GAAIl+C,KAAK89C,SAAW99C,KAAK+9C,YACvB,MAAM,IAAIt9C,MAAM,iCACAT,KAAK+9C,aAGvB/9C,KAAKwB,QAAUzB,EAAQyB,QACvBxB,KAAK6hC,kBAAkB9hC,EAAQqC,QAC/BpC,KAAKm+C,eACLn+C,KAAKo+C,oBAMPH,mBAAmB,EAKnBD,UAAW,EAKXF,SAAU,KAOVC,YAAa,QAMbM,cAAe,IAmBflyB,KAAM,SAAShjB,GACb,IAAIkI,EAAOrR,KACXqR,EAAKitC,QAAS,EACdjtC,EAAKlI,SAAWA,GAAY,SAASC,GAAO,GAAIA,EAAK,MAAMA,GAE3D,IAAIm1C,GAAU,EACd,GAAIltC,EAAK5F,QACP4F,EAAKusC,UAAYvsC,EAAKmtC,gBACjB,GAAI56C,EAAIpE,KAAKkQ,SAAU,CAC5B,IAAIC,EAAS/L,EAAIpE,KAAKoI,OAAO+H,OACzB0B,EAAKnP,gBAAgByN,IACvB4uC,GAAU,EACVltC,EAAKusC,UAAYvsC,EAAKotC,WACtBptC,EAAKqtC,YAAc,GACnBrtC,EAAKnP,KACH0J,GAAG,SAAS,SAASxC,GAAOiI,EAAKstC,QAAQv1C,MACzCwC,GAAG,YAAY,WAAayF,EAAKusC,eACjChyC,GAAG,OAAO,WACRyF,EAAKutC,gBAAiB,EACtBvtC,EAAKwtC,SAAWxtC,EAAKytC,iBACrBztC,EAAKusC,UAAUn0C,KAAK4H,GAEhBA,EAAKutC,gBAAkBvtC,EAAKytC,kBAAoB,GAAKztC,EAAK0tC,YAAc1tC,EAAKwtC,UAC/ExtC,EAAK2tC,sBAMXT,GAASltC,EAAKusC,UAAUn0C,KAAK4H,IAiDnC7E,MAAO,YAGuB,IAFjBxM,KAEF4+C,gBAAqD,IAFnD5+C,KAE8B8+C,kBAF9B9+C,KAE6Di/C,WAF7Dj/C,KAGJi/C,WAAWzyC,QAHPxM,KAKJ2+C,QAAQ/6C,EAAIpE,KAAKgB,MAAM,IAAIC,MAAM,2BAA4B,CAChEC,KAAM,sBAAuBiS,WAAW,MAQ9CwrC,aAAc,WAGZ,GAFWn+C,KACNkC,KADMlC,KACMwB,QAAQ8B,OAAOlB,OAAO62B,KACd,iBAFdj5B,KAEKkC,KAFLlC,KAGJkC,KAAO0B,EAAIpE,KAAKqH,OAAOC,SAHnB9G,KAGiCkC,WACrC,IAJIlC,KAIMkC,KACf,MAAM,IAAIzB,MAAM,2BALPT,KAONyL,QAAU7H,EAAIpE,KAAKkM,aAPb1L,KAO+BkC,OAM5C2/B,kBAAmB,SAA2Bz/B,GAC5CA,EAASA,GAAU,GAGnB,GAFWpC,KAEDwB,QAEH,CACL,IAAIA,EALKxB,KAKUwB,QACf8B,EAASM,EAAIpE,KAAK2I,KAAK3G,EAAQuzB,iBAAmB,IACtDzxB,EAAO6kB,iBAAmB3mB,EAAQozB,sBAPzB50B,KAQJwB,QAAU,IAAIA,EAAQ3B,YAAYyO,UAAUhL,GARxCtD,KASJwB,QAAQ8B,OAAOlB,OAClBwB,EAAIpE,KAAKyN,MAVFjN,KAUawB,QAAQ8B,OAAOlB,QAAU,GAAIA,QAV1CpC,KAGJwB,QAAU,IAAIoC,EAAIgS,GAAG,CAACxT,OAAQA,KAcvCg8C,iBAAkB,WAEhB,IADWp+C,KAEJk/C,WAAa92C,EAFTpI,KAEyBkC,MAClC,MAAOQ,IAGT,GANW1C,KAMFk/C,WAAY,CACnB,IAAIC,EAAchvC,KAAKivC,KAPdp/C,KAOwBk/C,WAPxBl/C,KAO0Cq+C,eAC/Cc,EARKn/C,KAQc89C,WARd99C,KAQ6B89C,SAAWqB,QARxCn/C,KAUJk/C,gBAAa13C,GAOtBo3C,gBAAgB,EAKhBS,QAAS,EAKTC,kBAAmB,EAKnBC,mBAAoB,EAKpBL,gBAAY13C,EAKZq3C,SAAU,EAKVC,iBAAkB,EAKlBU,YAAa,EAKbT,UAAW,EAKX/5C,MAAO,KAKP24C,aAAc,KAKdW,QAAQ,EAKRmB,aAAc,KAKdf,YAAa,KAKbgB,iBAAkB,EAKlBlB,WAAY,WACV,IACImB,EAAUv3C,EADHpI,KACmBkC,MAE9B,GAAgB,IAAZy9C,EAIF,OAPS3/C,KAIJ4+C,gBAAiB,EAJb5+C,KAKJ6+C,SAAW,OALP7+C,KAMJ4/C,UANI5/C,KAMWkC,MAItB,KAVWlC,KAUCw/C,YAVDx/C,KAUoBg+C,WAVpBh+C,KAUsCq/C,QAAUM,GAAS,CAClE,IAAIE,EAAS1vC,KAAKioC,IAXTp4C,KAWkBq/C,QAXlBr/C,KAWiC89C,SAAU6B,GAChDp4C,EAZKvH,KAYMyL,QAAQhC,KAZdzJ,KAYwBkC,KAZxBlC,KAYmCq/C,QAASQ,GAZ5C7/C,KAaJq/C,SAbIr/C,KAaY89C,UAEjB11C,EAAWb,GAfNvH,KAekB89C,UAflB99C,KAemCq/C,UAAYM,KAf/C3/C,KAgBF4+C,gBAAiB,EAhBf5+C,KAiBF6+C,SAjBE7+C,KAiBc8+C,iBAAmB,GAjBjC9+C,KAmBJ4/C,UAAUr4C,KAOnBk3C,WAAY,WAEV,KADWz+C,KACFw/C,aADEx/C,KACkBg+C,WAA7B,CAEA,IAAIz2C,EAHOvH,KAGIkC,KAAK49C,KAHT9/C,KAGmB89C,SAHnB99C,KAGmC0/C,mBAHnC1/C,KAIIkC,KAAK49C,OAOpB,GANIv4C,IALOvH,KAMJ0+C,YAAYv5C,KAAKoC,GANbvH,KAOJ0/C,kBAAoBn4C,EAAI3G,OAPpBZ,KAQJs/C,mBAAqB/3C,EAAI3G,QARrBZ,KAWF0/C,kBAXE1/C,KAWuB89C,SAAU,CAE1C,IAAIiC,EAAmC,IAb9B//C,KAaO0+C,YAAY99C,OAbnBZ,KAcF0+C,YAAY,GAAKz3C,EAAO5G,OAdtBL,KAckC0+C,aAK3C,GAnBS1+C,KAeJ0+C,YAAc,GAfV1+C,KAgBJ0/C,iBAAmB,EAGpBK,EAAKn/C,OAnBAZ,KAmBc89C,SAAU,CAC/B,IAAInc,EAAOoe,EAAK/3C,MApBThI,KAoBoB89C,UApBpB99C,KAqBF0+C,YAAYv5C,KAAKw8B,GArBf3hC,KAsBF0/C,kBAAoB/d,EAAK/gC,OAC9Bm/C,EAAOA,EAAK/3C,MAAM,EAvBXhI,KAuBmB89C,UAvBnB99C,KA0BJ4/C,UAAUG,GA1BN//C,KA6BF4+C,iBA7BE5+C,KA6BsBggD,gBAE/BD,EAAmC,IA/B1B//C,KA+BG0+C,YAAY99C,OA/BfZ,KAgCA0+C,YAAY,GAAKz3C,EAAO5G,OAhCxBL,KAgCoC0+C,aAhCpC1+C,KAiCJ0+C,YAAc,GAjCV1+C,KAkCJ0/C,iBAAmB,EAlCf1/C,KAmCJk/C,WAnCIl/C,KAmCcs/C,kBAnCdt/C,KAoCJggD,eAAgB,GAEC,IAtCbhgD,KAsCA6+C,UAAkBkB,EAAKn/C,OAAS,KAtChCZ,KAuCF6+C,WAvCE7+C,KAwCF4/C,UAAUG,KAxCR//C,KA4CNkC,KAAK49C,KAAK,KAMjBF,UAAW,SAAmB/zC,GAC5B,IAAIwF,EAAOrR,KACX,GAAIqR,EAAKitC,OAAQ,OAAO,KAExB,IAAI2B,IAAe5uC,EAAKytC,iBACxB,GAAIztC,EAAKutC,gBAAiC,IAAfqB,EAAkB,CAC3C,IAAI79C,EAAS,CAAC62B,KAAMptB,GAChB7L,KAAKk+C,OACP97C,EAAO89C,QAAUlgD,KAAKmgD,oBAExB,IAAI9+C,EAAMgQ,EAAK7P,QAAQ4+C,UAAUh+C,GAIjC,OAHAf,EAAIg/C,eAAiBhvC,EACrBhQ,EAAIuK,GAAG,qBAAsByF,EAAKivC,UAAUn0B,KAAK9a,EAAKkvC,kBACtDlvC,EAAK4tC,WAAa59C,EACX,KACF,GAAIgQ,EAAK7P,QAAQ8B,OAAOlB,OAAO43B,WAAY,CAChD,IAAI5wB,EAAMxF,EAAIpE,KAAKgB,MAAM,IAAIC,MAAM,oEAAqE,CACtGC,KAAM,gBAAiBiS,WAAW,IAIpC,OADAtB,EAAKstC,QAAQv1C,GACN,KAGT,GAAIiI,EAAKssC,aAAasC,IAAsD,OAAvC5uC,EAAKssC,aAAasC,GAAYO,KACjE,OAAO,KAGTnvC,EAAKmuC,cACAnuC,EAAK7P,QAAQ8B,OAAOlB,OAAOq+C,SAiB9BpvC,EAAKqvC,WAAW70C,EAAOo0C,GAflB5uC,EAAKouC,aAYRpuC,EAAKsvC,YAAY90C,EAAOo0C,IAXxB5uC,EAAKouC,aAAepuC,EAAK7P,QAAQo/C,wBACjCvvC,EAAKouC,aAAa7zC,GAAG,WAAW,SAASrJ,GACvC8O,EAAK7P,QAAQ8B,OAAOlB,OAAOq+C,SAAWl+C,EAAKiB,KAAKi9C,SAChDpvC,EAAKouC,aAAe,QAEtBpuC,EAAKsvC,YAAY90C,EAAOo0C,GACxB5uC,EAAKouC,aAAa7zC,GAAG,SAAS,SAASxC,GACrCiI,EAAKstC,QAAQv1C,MAEfiI,EAAKouC,aAAatzB,SAYxBg0B,iBAAkB,WAEhB,IADA,IAAIU,EAAgB,GACXhgD,EAAI,EAAGA,EAAIb,KAAKk+C,KAAKt9C,OAAQC,IACpCggD,EAAc17C,KAAKvB,EAAIpE,KAAK+E,UAAUvE,KAAKk+C,KAAKr9C,GAAGy2B,KAAO,IACxD1zB,EAAIpE,KAAK+E,UAAUvE,KAAKk+C,KAAKr9C,GAAGigD,QAGpC,OAAOD,EAAcz7C,KAAK,MAM5Bs7C,WAAY,SAAoB70C,EAAOo0C,GACrC,IAAI5uC,EAAOrR,KAEP+gD,EAAa,CACf9nB,KAAMptB,EACN8xB,cAAe/5B,EAAIpE,KAAKgF,OAAO4D,WAAWyD,GAC1Cm1C,WAAYf,GAGVgB,EAAW,CAACT,KAAM,KAAMQ,WAAYf,GACxC5uC,EAAKssC,aAAasC,GAAcgB,EAEhC,IAAI5/C,EAAMgQ,EAAK7P,QAAQk/C,WAAWK,GAClC1vC,EAAKrM,MAAMi7C,GAAc5+C,EACzBA,EAAI6/C,mBAAqB,EACzB7/C,EAAIg/C,eAAiBhvC,EACrBhQ,EAAIuK,GAAG,qBAAsByF,EAAKivC,UAClCj/C,EAAI8qB,MAAK,SAAS/iB,EAAK5F,GAIrB,UAHO6N,EAAKrM,MAAM+7C,EAAWC,YAC7B3vC,EAAKmuC,gBAEAp2C,GAAS5F,GAASA,EAAKg9C,MAAO,CACjC,IAAI7/C,EAAU,0CACViD,EAAIpE,KAAKuE,cACXpD,GAAW,oDAGbyI,EAAMxF,EAAIpE,KAAKgB,MAAM,IAAIC,MAAME,GAAU,CACvCD,KAAM,cAAeiS,WAAW,IAGpC,OAAIvJ,EAAYiI,EAAKstC,QAAQv1C,GAEzBiI,EAAKssC,aAAasC,IAAsD,OAAvC5uC,EAAKssC,aAAasC,GAAYO,KAAsB,MACzFS,EAAST,KAAOh9C,EAAKg9C,KACrBnvC,EAAK0tC,iBACD1tC,EAAKutC,gBAAkBvtC,EAAK0tC,YAAc1tC,EAAKwtC,SACjDxtC,EAAK2tC,kBAEL3tC,EAAKusC,UAAUn0C,KAAK4H,SAQ1BsvC,YAAa,SAAqB90C,EAAOo0C,GACvC,IAAI5uC,EAAOrR,KACXqR,EAAKouC,aAAa7zC,GAAG,WAAW,WAC9ByF,EAAKqvC,WAAW70C,EAAOo0C,OAO3BtB,QAAS,SAAiBv1C,GACbpJ,KACFs+C,SAGmC,mBAJjCt+C,KAIKkC,KAAKigC,oBACW,mBALrBniC,KAKKkC,KAAKi/C,SALVnhD,KAMJkC,KAAKigC,mBAAmB,YANpBniC,KAOJkC,KAAKigC,mBAAmB,OAPpBniC,KAQJkC,KAAKi/C,UARDnhD,KAYFy/C,eAZEz/C,KAaJy/C,aAAatd,mBAAmB,WAb5BniC,KAcJy/C,aAAatd,mBAAmB,SAd5BniC,KAeJy/C,aAAatd,mBAAmB,mBAf5BniC,KAgBGy/C,cAhBHz/C,KAmBFwB,QAAQ8B,OAAOlB,OAAOq+C,WAnBpBzgD,KAmBsCi+C,kBAnBtCj+C,KAoBJwB,QAAQ4/C,uBAAuBj1B,OApB3BnsB,KAqBKi+C,oBArBLj+C,KAsBJ4+C,gBAAiB,GAGxBh7C,EAAIpE,KAAKiN,KAzBEzM,KAyBQgF,OAAO,SAASi7C,EAAY/6C,GAC7CA,EAAKi9B,mBAAmB,YACxBj9B,EAAKsH,WA3BIxM,KA8BNw/C,YAAc,EA9BRx/C,KA+BNq/C,QAAU,EA/BJr/C,KAgCN6+C,SAAW,EAhCL7+C,KAiCN8+C,iBAAmB,EAjCb9+C,KAkCNgF,MAAQ,GAlCFhF,KAmCNs+C,QAAS,EAnCHt+C,KAoCNmJ,SAASC,KAMhB41C,gBAAiB,WACf,IAAI3tC,EAAOrR,KACPqhD,EAAiB,CAAEC,gBAAiB,CAAEC,MAAOlwC,EAAKssC,aAAa31C,MAAM,KACzEqJ,EAAK7P,QAAQggD,wBAAwBH,GAAgB,SAASj4C,EAAK5F,GACjE,GAAI4F,EACF,OAAOiI,EAAKstC,QAAQv1C,GAOtB,GAJI5F,GAAiC,iBAAlBA,EAAKi+C,WACtBj+C,EAAKi+C,SAAWj+C,EAAKi+C,SAAS/8C,QAAQ,OAAQ,MAG5C2B,MAAMC,QAAQ+K,EAAK6sC,MAAO,CAC5B,IAAK,IAAIr9C,EAAI,EAAGA,EAAIwQ,EAAK6sC,KAAKt9C,OAAQC,IACpCwQ,EAAK6sC,KAAKr9C,GAAGigD,MAAQ9yC,OAAOqD,EAAK6sC,KAAKr9C,GAAGigD,OAE3CzvC,EAAK7P,QAAQkgD,iBACX,CAACxB,QAAS,CAACyB,OAAQtwC,EAAK6sC,QACxB,SAASx7C,EAAGk/C,GACNl/C,EACF2O,EAAKlI,SAASzG,GAEd2O,EAAKlI,SAASzG,EAAGc,WAKvB6N,EAAKlI,SAASC,EAAK5F,OAQzB+8C,iBAAkB,SAA0Bn3C,EAAK5F,GAC/C,IAAIkoB,EAAS1rB,KAAKqD,QAAQg9C,eACtBwB,EAAU7hD,KAAKqD,QAAQ/B,YACvBoZ,EAAWmnC,EAAQnnC,SACvB,GAAItR,EAAK,OAAOsiB,EAAOviB,SAASC,GAChC5F,EAAKi+C,SACH,CAAC/mC,EAASiQ,SAAU,KAAMjQ,EAASC,KAAMknC,EAAQn7C,MAAMtB,KAAK,IAC9D5B,EAAKuH,IAAM/K,KAAKqD,QAAQjB,OAAOk1B,IAC/B9zB,EAAK8zB,IAAMt3B,KAAKqD,QAAQjB,OAAOk1B,IAC/B9zB,EAAK4yB,OAASp2B,KAAKqD,QAAQjB,OAAOg0B,OAClC1K,EAAOviB,SAASC,EAAK5F,IAMvB88C,SAAU,SAAkBwB,GAC1B,IAAIp2B,EAAS1rB,KAAKqgD,eACK,cAAnBrgD,KAAK4B,WACPkgD,EAAK58C,KAAO,EACZ48C,EAAK/2C,IAAM/K,KAAKoC,OAAOk1B,MAEvB5L,EAAO6zB,oBAAsBuC,EAAKC,OAAS/hD,KAAKkhD,mBAChDlhD,KAAKkhD,mBAAqBY,EAAKC,OAC/BD,EAAO,CACLC,OAAQr2B,EAAO6zB,mBACfyC,MAAOt2B,EAAOwzB,WACdh6C,KAAMlF,KAAKoC,OAAO4+C,WAClBj2C,IAAK/K,KAAKoC,OAAOk1B,MAGrB5L,EAAO3M,KAAK,qBAAsB,CAAC+iC,OAIvCl+C,EAAIpE,KAAK+O,MAAM3K,EAAIgS,GAAGooB,cAAep6B,EAAIksB,oBAKzClsB,EAAIgS,GAAGooB,cAAc9sB,mBAAqB,SAA4BN,GACpE5Q,KAAKwJ,UAAUqkC,QAAUjqC,EAAIpE,KAAK2R,gBAAgB,OAAQP,IAM5DhN,EAAIgS,GAAGooB,cAAc/sB,wBAA0B,kBACtCjR,KAAKwJ,UAAUqkC,SAGxBjqC,EAAIpE,KAAKkR,YAAY9M,EAAIgS,GAAGooB,eAK5Bj9B,EAAOC,QAAU4C,EAAIgS,GAAGooB,e,qBCrtBxB,IAAIp6B,EAAM,EAAQ,QAClB,EAAQ,QAERA,EAAIpE,KAAK2L,OAAOvH,EAAIic,SAASrW,UAAW,CAItC6T,sBAAuB,SAA+Bha,GAChDA,EAAQ7B,QAAQ8B,OAAO2iC,gBACzB5iC,EAAQqb,eAAe,cAAe9a,EAAI+a,eAAeyQ,KAAK6yB,cAC9D5+C,EAAQia,YAAY,cAAetd,KAAKkiD,YACxC7+C,EAAQia,YAAY,cAAe1Z,EAAI+a,eAAeyQ,KAAK6yB,gBAO/DC,WAAY,SAAoB3/C,GAC9B,IAAKA,EAAKC,aAAawsB,YAAczsB,EAAKc,QAAQ7B,QAAQ2gD,aAAa5/C,GAQrE,MAPAA,EAAKiB,KAAO,KACZjB,EAAK/B,MAAQoD,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CACvCC,KAAM,mBACNC,QAAS,+BACTgS,WAAW,IAEbpQ,EAAKc,QAAQuqC,sBACNrrC,EAAU,OAOrB4/C,aAAc,SAAsB5/C,GAClC,IAAIqI,EAAMrI,EAAKC,aAAaH,QAAQ,eACpC,OAAKuI,GACEkC,SAASlC,EAAK,MAAQhH,EAAIpE,KAAKgL,OAAOE,MAAMnI,EAAKC,aAAaN,OAMvE+uC,kBAAmB,GAKnBiD,YAAa,SAAqBriC,EAAYzI,GAC5C,IAAI0I,EAAoBlO,EAAIpE,KAAK2I,KAAKnI,KAAKsD,OAAOwO,mBAMlD,MAJsC,iBAA3BA,EAAkBE,OACzBF,EAAkBE,KAAO,IAEjBpO,EAAIpE,KAAKoS,oBAAoBC,EAAYC,EAAmB1I,O,qBCtD5E,EAAQ,QACR,IAAIxF,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAyB,eAAI,GACvCpS,EAAIugB,eAAiBrO,EAAQI,cAAc,iBAAkB,CAAC,eAC9DnQ,OAAO8H,eAAekI,EAAUC,SAAyB,eAAG,aAAc,CACxElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAqDC,WACzEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIugB,gB,ip9CCjBrB,IAAIvgB,EAAM,EAAQ,QACdwgB,EAAM,EAAQ,QAsElBxgB,EAAIw+C,8BAAgCx+C,EAAIpE,KAAKI,QAAQgE,EAAIktB,YAAa,CA6BpEjxB,YAAa,SAAuCE,GAClD6D,EAAIktB,YAAYrnB,KAAKzJ,MACrBD,EAAUA,GAAW,GACrBC,KAAK4mC,UAAY,+CACjB5mC,KAAKixB,SAAU,EACfjxB,KAAKqiD,YAAc,KAEnB,IAAIjgD,EAASwB,EAAIpE,KAAK2I,KAAKpI,EAAQqC,SAAW,GAI9C,GAHIA,EAAO8uB,UACT9uB,EAAO+uB,gBAAkB/uB,EAAO+uB,iBAAmB,yBAEjD/uB,EAAOkgD,aAAc,CACvB,IAAKviD,EAAQsiD,aAA+C,mBAAxBtiD,EAAQsiD,YAC1C,MAAM,IAAIz+C,EAAIpE,KAAKgB,MACjB,IAAIC,MAAM,oEACV,CAACC,KAAMV,KAAK4mC,YAGd5mC,KAAKqiD,YAActiD,EAAQsiD,YAG/B,IAAI/+C,EAASM,EAAIpE,KAAKyN,MACpB,CACE7K,OAAQA,EACRwX,YAAa7Z,EAAQgxB,mBAAqBntB,EAAIN,OAAOsW,aAEvD7Z,EAAQwhC,WAAa,IAEvBvhC,KAAKwB,QAAU,IAAI4iB,EAAI9gB,IAgBzB8tB,QAAS,SAAiBjoB,GACxBnJ,KAAKqxB,gBAAgBloB,GAAYvF,EAAIpE,KAAKyJ,GAAGE,WAO/CmoB,KAAM,SAAcnoB,GAClB,IAAIkI,EAAOrR,KACP4B,EAAYyP,EAAK7P,QAAQ8B,OAAOlB,OAAO8uB,QAAU,aAAe,kBACpElxB,KAAKuiD,cAAa,SAAUn5C,EAAKo5C,GAC/B,IAAIpgD,EAAS,GACTgH,EACFD,EAASC,IAGPo5C,IACFpgD,EAAOqgD,UAAYD,GAErBnxC,EAAK7P,QAAQI,GAAWQ,GAAQ,SAAUgH,EAAK5F,GACxC4F,GACHiI,EAAK7P,QAAQkwB,gBAAgBluB,EAAM6N,GAErClI,EAASC,WAQfm5C,aAAc,SAAsBp5C,GAClC,IAAIkI,EAAOrR,KACPA,KAAKqiD,YACPriD,KAAKqiD,YAAYriD,KAAKwB,QAAQ8B,OAAOlB,OAAOkgD,cAAc,SAAUl5C,EAAKs5C,GACvE,GAAIt5C,EAAK,CACP,IAAIzI,EAAUyI,EAUd,OATIA,aAAe3I,QACjBE,EAAUyI,EAAIzI,cAEhBwI,EACEvF,EAAIpE,KAAKgB,MACP,IAAIC,MAAM,6BAA+BE,GACzC,CAAED,KAAM2Q,EAAKu1B,aAKnBz9B,EAAS,KAAMu5C,MAGjBv5C,EAAS,U,qBCpMf,EAAQ,QACR,IAAIvF,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAA6B,mBAAI,GAC3CpS,EAAI0hB,mBAAqBxP,EAAQI,cAAc,qBAAsB,CAAC,eACtEnQ,OAAO8H,eAAekI,EAAUC,SAA6B,mBAAG,aAAc,CAC5ElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA0DC,WAC9EF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI0hB,oB,8zBCjBrB,EAAQ,QACR,IAAI1hB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAa,GAAI,GAC3BpS,EAAIgS,GAAKE,EAAQI,cAAc,KAAM,CAAC,eACtC,EAAQ,QACRnQ,OAAO8H,eAAekI,EAAUC,SAAa,GAAG,aAAc,CAC5DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAyCC,WACpEF,EAAMuD,QAAU,EAAQ,QAAuCA,QACxDvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIgS,I,qBCnBrB,EAAQ,QACR,IAAIhS,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAgB,MAAI,GAC9BpS,EAAI8e,MAAQ5M,EAAQI,cAAc,QAAS,CAAC,eAC5CnQ,OAAO8H,eAAekI,EAAUC,SAAgB,MAAG,aAAc,CAC/DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA6DC,WACxFF,EAAMuD,QAAU,EAAQ,QAA2DA,QAC5EvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI8e,O,w7BClBrB,IAAI9e,EAAM,EAAQ,QACdksB,EAAqB,EAAQ,QAC7B6yB,EAAoB,EAAQ,QAAuBhjB,iBAKvD/7B,EAAI+a,eAAiB,CAsDnBC,KAAM,IAcRhb,EAAI+a,eAAiB,CACnBC,MAAM,IAAIkR,GAAqB+Y,mBAAkB,SAASyU,EAAKsF,GAC7DA,EAAS,uBAAwB,YAC7B,SAA8BvhD,EAAKoO,GACrC,IAAKpO,EAAIG,QAAQD,IAAI4mB,mBAAqB9mB,EAAIG,QAAQ8B,OAAO6kB,iBAAkB,OAAO1Y,IACtFpO,EAAIG,QAAQ8B,OAAOu5B,gBAAe,SAASzzB,GACrCA,IACF/H,EAAI2d,SAASxe,MAAQoD,EAAIpE,KAAKgB,MAAM4I,EAClC,CAAC1I,KAAM,mBAAoBC,QAAS,wFAExC8O,UAIJ6tC,EAAI,kBAAmB,YAAY,SAAyBj8C,GAC1D,IAAKA,EAAIG,QAAQ6pC,iBAAkB,CACjC,IAAIwX,EAAe,IAAI37B,OAAO,4DACzB7lB,EAAIG,QAAQ8B,OAAOsR,OAGZiuC,EAAahvB,KAAKxyB,EAAIG,QAAQ8B,OAAOsR,UAC/CvT,EAAI2d,SAASxe,MAAQoD,EAAIpE,KAAKgB,MAAM,IAAIC,MACtC,CAACC,KAAM,cAAeC,QAAS,8BAJjCU,EAAI2d,SAASxe,MAAQoD,EAAIpE,KAAKgB,MAAM,IAAIC,MACtC,CAACC,KAAM,cAAeC,QAAS,iCAQvC28C,EAAI,2BAA4B,YAAY,SAAkCj8C,GAC5E,GAAKA,EAAIG,QAAQD,IAAII,WAArB,CAGA,IAAIC,EAAYP,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAC/C,GAAKA,EAAL,CAGA,IAAIkhD,EAAoBlhD,EAAUkhD,kBAClC,GAAKA,EAAkBliD,OAAvB,CAKA,IADA,IAAIwB,EAASwB,EAAIpE,KAAK2I,KAAK9G,EAAIe,QACtBvB,EAAI,EAAGgW,EAAOisC,EAAkBliD,OAAQC,EAAIgW,EAAMhW,IACpDuB,EAAO0gD,EAAkBjiD,MAE5BuB,EAAO0gD,EAAkBjiD,IAAM+C,EAAIpE,KAAK0T,KAAKC,MAGjD9R,EAAIe,OAASA,QAGfk7C,EAAI,sBAAuB,YAAY,SAA6Bj8C,GAClE,GAAKA,EAAIG,QAAQD,IAAII,WAArB,CAGA,IAAI0R,EAAQhS,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAAWI,MAClDswB,EAAajxB,EAAIG,QAAQ8B,OAAOwiC,gBACpC,IAAIliC,EAAIyuB,eAAeC,GAAYnyB,SAASkT,EAAOhS,EAAIe,YAGzDwgD,EAAS,iBAAkB,cAAc,SAAwBvhD,EAAKoO,GAEpE,GADApO,EAAIusC,sBACCvsC,EAAIG,QAAQD,IAAII,WAArB,CAGA,IAAIC,EAAYP,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAC3CoyC,EAAWpyC,EAAYA,EAAUoyC,SAAW,GAChD,IAAK3yC,EAAIG,QAAQD,IAAI4mB,mBAAqB6rB,IAAa3yC,EAAIG,QAAQ8B,OAAO6kB,iBAAkB,OAAO1Y,IACnG,GAAIpO,EAAIG,QAAQwc,eAAe3c,KAASuC,EAAIsR,QAAQS,GAAI,CACtD,IAAIzT,EAAOb,EAAIC,YAAYY,MAAQ,GACnC,GAAI8xC,EAASx/B,QAAQ,kBAAoB,EAEvC,OADAnT,EAAIC,YAAYe,QAAQ,wBAA0B,mBAC3CoN,IAET7L,EAAIpE,KAAKgQ,cAActN,GAAM,SAASkH,EAAK4G,GACrC5G,EACFqG,EAAKrG,IAGL/H,EAAIC,YAAYe,QAAQ,wBAA0B2N,EAClDP,aAIJA,QAIJ6tC,EAAI,qBAAsB,cAAc,SAA4Bj8C,GAClE,IAAI2yC,EAhGV,SAA8B3yC,GAC5B,IAAKA,EAAIG,QAAQD,IAAII,WACnB,MAAO,GAET,IAAIC,EAAYP,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAC/C,OAAOA,EAAYA,EAAUoyC,SAAW,GA2FrB+O,CAAqB1hD,GAChCgO,EAAgBzL,EAAIpE,KAAKgU,uBAAuBnS,GACpD,QAAkDmG,IAA9CnG,EAAIC,YAAYe,QAAQ,kBAC1B,IACE,IAAIzB,EAASgD,EAAIpE,KAAKgF,OAAO4D,WAAW/G,EAAIC,YAAYY,MACxDb,EAAIC,YAAYe,QAAQ,kBAAoBzB,EAC5C,MAAOwI,GACP,GAAIiG,GAAiBA,EAAco4B,YAAa,CAC9C,GAAIp4B,EAAcmpC,eAEhB,MAAMpvC,EACD,GAAI4qC,EAASx/B,QAAQ,kBAAoB,EAG9C,YADAnT,EAAIC,YAAYe,QAAQ,qBAAuB,WAG/C,MAAM+G,EAGV,MAAMA,MAKZk0C,EAAI,gBAAiB,cAAc,SAAuBj8C,GACxDA,EAAIC,YAAYe,QAAc,KAAIhB,EAAIC,YAAYoZ,SAASC,QAG7D2iC,EAAI,UAAW,WAAW,WACxB,IAAIl0C,EAAMpJ,KAAKgf,SAASxe,MACnB4I,GAAQA,EAAIuJ,YAEjB3S,KAAKsB,YAAc,IAAIsC,EAAIwqB,YACzBpuB,KAAKwB,QAAQkZ,SACb1a,KAAKwB,QAAQoT,QAGX5U,KAAKgf,SAASnN,WAAa7R,KAAKwB,QAAQ8B,OAAOoP,WACjD1S,KAAKgf,SAASnN,aAEd7R,KAAKgf,SAASxe,MAAQ,SAK1BoiD,EAAS,oBAAqB,OAAQD,GADtB,GAGhBC,EAAS,OAAQ,QAAQ,SAAcvhD,EAAKoO,GAC1C,IAAIjO,EAAUH,EAAIG,QAEdI,GADaP,EAAIG,QAAQD,IAAII,YAAc,IACpBN,EAAIO,WAC3BoyC,EAAWpyC,EAAYA,EAAUoyC,SAAW,GAChD,IAAKxyC,EAAQD,IAAI4mB,mBAAqB6rB,IAAaxyC,EAAQ8B,OAAO6kB,iBAAkB,OAAO1Y,IAE3FjO,EAAQ8B,OAAOu5B,gBAAe,SAAUzzB,EAAKwQ,GAC3C,GAAIxQ,EAEF,OADA/H,EAAI2d,SAASxe,MAAQ4I,EACdqG,IAGT,IACE,IAAI7F,EAAOpI,EAAQyc,uBAEf+kC,EAAS,IADKxhD,EAAQwc,eAAe3c,GAC5B,CAAgBA,EAAIC,YAC/BE,EAAQyzB,iBACR,CACE/M,eAAgB1mB,EAAQ8B,OAAO4kB,eAC/BtmB,UAAWA,EACXumB,iBAAkB3mB,EAAQD,IAAI4mB,mBAElC66B,EAAO5tC,mBAAmB5T,EAAQ2uC,kBAG3B9uC,EAAIC,YAAYe,QAAuB,qBACvChB,EAAIC,YAAYe,QAAc,YAC9BhB,EAAIC,YAAYe,QAAQ,cAG/B2gD,EAAOrpC,iBAAiBC,EAAahQ,GACrCvI,EAAI4hD,SAAWr5C,EACf,MAAOlH,GACPrB,EAAI2d,SAASxe,MAAQkC,EAEvB+M,UAIJ6tC,EAAI,oBAAqB,oBAAoB,SAA2B/6C,GAClEvC,KAAKwB,QAAQyyC,mBAAmB1xC,EAAMvC,OACxCuC,EAAKiB,KAAO,GACZjB,EAAK/B,MAAQ,OAEb+B,EAAKiB,KAAO,KACZjB,EAAK/B,MAAQoD,EAAIpE,KAAKgB,MAAM,IAAIC,MAC9B,CAACC,KAAM,eAAgBC,QAAS,mCAItCiiD,EAAS,OAAQ,QAAQ,SAAcrgD,EAAMkN,GAK3C,SAAStG,EAAS+5C,GAChB3gD,EAAKC,aAAaoF,OAASs7C,EAC3B,IAAIt7C,EAASrF,EAAKc,QAAQ/B,YAAYsG,OAClCpG,EAAUe,EAAKc,QAAQ7B,QACvBD,EAAMC,EAAQD,IACd2N,EAAgB3M,EAAKc,QAAQzB,UAC7BA,EAAYL,EAAII,WAAWuN,IAAkB,GAEjDg0C,EAASt3C,GAAG,WAAW,SAAmB1I,EAAYb,EAASc,GAM7D,GALAZ,EAAKc,QAAQ0b,KACX,cACA,CAAC7b,EAAYb,EAASE,EAAMY,KAGzBZ,EAAKC,aAAawsB,UACrB,GAAyC,IAArCprB,EAAI0O,WAAWma,kBAAyB,CAG1C,GAAI7qB,EAAUwN,gBAAkB5N,EAAQyyC,mBAAmB1xC,GAIzD,OAFAA,EAAKc,QAAQ0b,KAAK,iBAClBtP,IAIFyzC,EAASt3C,GAAG,YAAY,WACtB,IAAIpI,EAAO0/C,EAASpD,OACP,OAATt8C,GACFjB,EAAKc,QAAQ0b,KAAK,WAAY,CAACvb,EAAMjB,YAIzC2gD,EAASt3C,GAAG,QAAQ,SAAgBpI,GAClCjB,EAAKc,QAAQ0b,KAAK,WAAY,CAACvb,EAAMjB,UAM7C2gD,EAASt3C,GAAG,OAAO,WACjB,IAAKhE,IAAWA,EAAOikC,YAAa,CAClC,GAAyC,IAArCjoC,EAAI0O,WAAWma,mBAA4B7qB,EAAUwN,gBAAkB5N,EAAQyyC,mBAAmB1xC,GAEpG,OAEFA,EAAKc,QAAQ0b,KAAK,YAClBtP,QAeN,SAASjP,EAAM4I,GACb,GAAiB,wBAAbA,EAAI1I,KAAgC,CACtC,IAAIyiD,EAAuB,iBAAb/5C,EAAI1I,KAA0B0I,EAAI1I,KAAO,kBACvD0I,EAAMxF,EAAIpE,KAAKgB,MAAM4I,EAAK,CACxB1I,KAAMyiD,EACNvuC,OAAQrS,EAAKc,QAAQ/B,YAAYsT,OACjCgW,SAAUroB,EAAKc,QAAQ/B,YAAYoZ,SAASkQ,SAC5CjY,WAAW,IAGfpQ,EAAK/B,MAAQ4I,EACb7G,EAAKc,QAAQ0b,KAAK,YAAa,CAACxc,EAAK/B,MAAO+B,IAAO,WACjDkN,OAIJ,SAAS2zC,IACP,IA3BgBF,EA2BZ7wC,EAAOzO,EAAI0O,WAAWC,cACtBC,EAAcjQ,EAAKc,QAAQ7B,QAAQ8B,OAAOkP,aAAe,GAC7D,IACE,IAAI5K,EAASyK,EAAKW,cAAczQ,EAAKc,QAAQ/B,YAAakR,EAC1BrJ,EAAU3I,IA/B5B0iD,EAgCLt7C,GA/BFgE,GAAG,gBAAgB,SAAwB1F,GAClD3D,EAAKc,QAAQ0b,KAAK,qBAAsB,CAAC7Y,EAAO3D,OAGlD2gD,EAASt3C,GAAG,mBAAmB,SAA2B1F,GACxD3D,EAAKc,QAAQ0b,KAAK,uBAAwB,CAAC7Y,EAAO3D,OA2BlD,MAAO6G,GACP5I,EAAM4I,IAzFV7G,EAAKC,aAAaspC,eAAiBr8B,EACnClN,EAAK/B,MAAQ,KACb+B,EAAKiB,KAAO,MA0FIjB,EAAKc,QAAQ7B,QAAQyc,uBAAyBje,KAAKijD,UAAY,KAC/D,IACdjjD,KAAK+e,KAAK,OAAQ,CAAC/e,OAAO,SAASoJ,GAC7BA,EAAKqG,EAAKrG,GACTg6C,OAGPA,OAIJ9F,EAAI,eAAgB,eAChB,SAAsBp6C,EAAYb,EAASE,EAAMY,GACnDZ,EAAKC,aAAaU,WAAaA,EAC/BX,EAAKC,aAAaW,cAAgBA,EAClCZ,EAAKC,aAAaH,QAAUA,EAC5BE,EAAKC,aAAaN,KAAO0B,EAAIpE,KAAKqH,OAAOC,SAAS,IAClDvE,EAAKC,aAAayF,QAAU,GAC5B1F,EAAKC,aAAa6gD,SAAW,EAC7B,IAAIC,EAAajhD,EAAQuH,MAAQvH,EAAQ0H,KACrCvI,EAAUe,EAAKc,QAAQ7B,QAC3B,GAAI8hD,EAAY,CACd,IAAIpzC,EAAanG,KAAKnH,MAAM0gD,GACxB9hD,EAAQ8B,OAAOyiC,kBACZvkC,EAAQyO,cAAcC,IAC3B1O,EAAQ6O,iBAAiBH,OAK/BotC,EAAI,YAAa,YAAY,SAAmBzxC,EAAOtJ,GACrD,GAAIsJ,EAAO,CACT,GAAIjI,EAAIpE,KAAKkQ,SAAU,CACrBnN,EAAKC,aAAa6gD,UAAYx3C,EAAMjL,OAEpC,IAAIohD,EAAQz/C,EAAKC,aAAaH,QAAQ,kBAClCi+C,EAAW,CAAEyB,OAAQx/C,EAAKC,aAAa6gD,SAAUrB,MAAOA,GAC5Dz/C,EAAKc,QAAQ0b,KAAK,uBAAwB,CAACuhC,EAAU/9C,IAGvDA,EAAKC,aAAayF,QAAQ9C,KAAKvB,EAAIpE,KAAKqH,OAAOC,SAAS+E,QAI5DyxC,EAAI,YAAa,YAAY,SAAmB/6C,GAE9C,GAAIA,EAAKC,aAAayF,SAAW1F,EAAKC,aAAayF,QAAQrH,OAAS,EAAG,CACrE,IAAIsB,EAAO0B,EAAIpE,KAAKqH,OAAOxG,OAAOkC,EAAKC,aAAayF,SACpD1F,EAAKC,aAAaN,KAAOA,SAEpBK,EAAKC,aAAa6gD,gBAClB9gD,EAAKC,aAAayF,WAG3Bq1C,EAAI,iBAAkB,SAAS,SAAwB/6C,GACjDA,EAAKC,aAAaU,aACpBX,EAAK/B,MAAM0C,WAAaX,EAAKC,aAAaU,gBACbsE,IAAzBjF,EAAK/B,MAAMmS,YACbpQ,EAAK/B,MAAMmS,UAAY3S,KAAKwB,QAAQ44B,eAAe73B,EAAK/B,MAAOR,WAKrEs9C,EAAI,yBAA0B,SAAS,SAAgC/6C,GACrE,GAAKA,EAAK/B,MACV,OAAQ+B,EAAK/B,MAAME,MACjB,IAAK,iBACL,IAAK,wBACL,IAAK,eACH6B,EAAK/B,MAAMmS,WAAY,EACvBpQ,EAAKc,QAAQ7B,QAAQ8B,OAAOsW,YAAYqX,SAAU,MAIxDqsB,EAAI,oBAAqB,SAAS,SAA2B/6C,GAC3D,IAAI6G,EAAM7G,EAAK/B,MACV4I,GACmB,iBAAbA,EAAI1I,MAA4C,iBAAhB0I,EAAIzI,SACzCyI,EAAI1I,KAAKsI,MAAM,cAAgBI,EAAIzI,QAAQqI,MAAM,aACnDzG,EAAK/B,MAAMmS,WAAY,MAK7B2qC,EAAI,eAAgB,SAAS,SAAsB/6C,GAC5CA,EAAK/B,OACNR,KAAKwB,QAAQ+yC,eAAehyC,EAAK/B,QAC9BR,KAAKwB,QAAQ8B,OAAOyiC,mBACzBxjC,EAAK/B,MAAMmS,WAAY,MAI3B2qC,EAAI,WAAY,SAAS,SAAkB/6C,GACrCA,EAAK/B,OAAS+B,EAAK/B,MAAM0C,YAAc,KACvCX,EAAK/B,MAAM0C,WAAa,KAAOX,EAAKC,aAAaH,QAAkB,WACrErC,KAAKsB,YAAYoZ,SACf,IAAI9W,EAAIyb,SAAS9c,EAAKC,aAAaH,QAAkB,UACvDrC,KAAKsB,YAAYe,QAAc,KAAIrC,KAAKsB,YAAYoZ,SAASC,KAC7DpY,EAAK/B,MAAM+iD,UAAW,EACtBhhD,EAAK/B,MAAMmS,WAAY,MAI3B2qC,EAAI,cAAe,SAAS,SAAqB/6C,GAC3CA,EAAK/B,QACH+B,EAAK/B,MAAM+iD,UAAYhhD,EAAKihC,cAAgBjhC,EAAKmhC,aACnDnhC,EAAK/B,MAAM+8C,WAAa,EACfh7C,EAAKsP,WAAatP,EAAKmQ,aAChCnQ,EAAK/B,MAAM+8C,WAAav9C,KAAKwB,QAAQ0yC,YAAY3xC,EAAKsP,WAAYtP,EAAK/B,QAAU,OAKvFoiD,EAAS,oBAAqB,cAAc,SAA2BrgD,EAAMkN,GAC3E,IAAImD,EAAO4wC,GAAY,EAEnBjhD,EAAK/B,QACPoS,EAAQrQ,EAAK/B,MAAM+8C,YAAc,EAC7Bh7C,EAAK/B,MAAMmS,WAAapQ,EAAKsP,WAAatP,EAAKmQ,YACjDnQ,EAAKsP,aACL2xC,GAAY,GACHjhD,EAAK/B,MAAM+iD,UAAYhhD,EAAKihC,cAAgBjhC,EAAKmhC,eAC1DnhC,EAAKihC,gBACLggB,GAAY,IAKZA,GAAa5wC,GAAS,GACxBrQ,EAAK/B,MAAQ,KACbqS,WAAWpD,EAAMmD,IAEjBnD,UAKNgiC,UAAU,IAAI3hB,GAAqB+Y,mBAAkB,SAASyU,GAC5DA,EAAI,qBAAsB,cAAe15C,EAAIpE,KAAK8Q,kBAClDgtC,EAAI,qBAAsB,eAAgB15C,EAAIpE,KAAK8Q,kBAEnDgtC,EAAI,kBAAmB,aAAa,SAAyBl0C,GAO3D,GAAiB,oBAAbA,EAAI1I,MANR,SAAoB0I,GAClB,MAAqB,cAAdA,EAAIq6C,OACY,iBAAdr6C,EAAIq6C,OAC4B,mBAAhC7/C,EAAIpE,KAAKkkD,oBAChB,CAAC,aAAc,cAAclvC,QAAQ5Q,EAAIpE,KAAKkkD,mBAAmBt6C,EAAIq6C,QAAU,GAE7CE,CAAWv6C,GAAM,CACrD,IAAIzI,EAAU,uBAAyByI,EAAIwhB,SACzC,gDAAmDxhB,EAAIwL,OACvD,YACF5U,KAAKgf,SAASxe,MAAQoD,EAAIpE,KAAKgB,MAAM,IAAIC,MAAME,GAAU,CACvDD,KAAM,kBACNkU,OAAQxL,EAAIwL,OACZgW,SAAUxhB,EAAIwhB,SACdjY,WAAW,EACXhF,cAAevE,WAMvBsoC,QAAQ,IAAI5hB,GAAqB+Y,mBAAkB,SAASyU,GAC1DA,EAAI,cAAe,YAAY,SAAqB/6C,GAClD,IAAIlB,EAAMkB,EAAKc,QACXuiC,EAASvkC,EAAIG,QAAQ8B,OAAOsiC,OAChC,GAAKA,EAAL,CA8DA,IAAI98B,EA1BJ,WACE,IACI86C,GADOrhD,EAAKc,QAAQ7B,QAAQyc,uBAAuBjU,UACnC3I,EAAImqC,UAAUxhC,WAAa,IAC3C65C,IAAOje,EAAOke,MACd54B,EAAS3oB,EAAKC,aAAaU,WAC3B6gD,EAAiB1iD,EAAIe,OAEvBf,EAAIG,QAAQD,IAAII,YACZN,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,YAC/BP,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAAWI,QAG9C+hD,EA/CJ,SAASC,EAAmB5kB,EAAY37B,GACtC,IAAKA,EACH,OAAOA,EAET,GAAI27B,EAAWmb,YACb,MAAO,6BAET,OAAQnb,EAAW7+B,MACjB,IAAK,YACH,IAAIqlB,EAAS,GAQb,OAPAhiB,EAAIpE,KAAKiN,KAAKhJ,GAAO,SAASwgD,EAAcC,GACtCn+C,OAAOyD,UAAUmD,eAAelD,KAAK21B,EAAW9vB,QAAS20C,GAC3Dr+B,EAAOq+B,GAAgBD,EAAmB5kB,EAAW9vB,QAAQ20C,GAAeC,GAE5Et+B,EAAOq+B,GAAgBC,KAGpBt+B,EACT,IAAK,OACH,IAAI9lB,EAAO,GAIX,OAHA8D,EAAIpE,KAAKyF,UAAUxB,GAAO,SAASygD,EAAUl4C,GAC3ClM,EAAKqF,KAAK6+C,EAAmB5kB,EAAWznB,OAAQusC,OAE3CpkD,EACT,IAAK,MACH,IAAI+I,EAAM,GAIV,OAHAjF,EAAIpE,KAAKiN,KAAKhJ,GAAO,SAASsH,EAAK7E,GACjC2C,EAAIkC,GAAOi5C,EAAmB5kB,EAAWl5B,MAAOA,MAE3C2C,EACT,QACE,OAAOpF,GAgBQugD,CADA3iD,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAAWI,MACXX,EAAIe,SAEtD,IAAIA,EAAS,EAAQ,QAAQ+hD,QAAQJ,GAAgB,EAAM,MACvDpjD,EAAU,GAQd,OAPIkjD,IAAMljD,GAAW,SACrBA,GAAW,QAAUU,EAAIG,QAAQkQ,kBAAoB,IAAMwZ,EAC3DvqB,GAAW,IAAMijD,EAAM/gD,WAAa,KAAON,EAAKsP,WAAa,YACzDgyC,IAAMljD,GAAW,UACrBA,GAAW,IAAMiD,EAAIpE,KAAKgF,OAAOiE,WAAWpH,EAAIO,WAChDjB,GAAW,IAAMyB,EAAS,IACtByhD,IAAMljD,GAAW,QACdA,EAGEyjD,GACe,mBAAfxe,EAAOye,IAChBze,EAAOye,IAAIv7C,GACsB,mBAAjB88B,EAAO0e,OACvB1e,EAAO0e,MAAMx7C,EAAO,aAK1BsmB,MAAM,IAAIU,GAAqB+Y,mBAAkB,SAASyU,GACxD,IAAI5b,EAAM,EAAQ,QAClB4b,EAAI,QAAS,QAAS5b,EAAItgC,cAC1Bk8C,EAAI,eAAgB,cAAe5b,EAAIt+B,aACvCk6C,EAAI,gBAAiB,eAAgB5b,EAAIp/B,iBAG3C+sB,MAAM,IAAIS,GAAqB+Y,mBAAkB,SAASyU,GACxD,IAAI5b,EAAM,EAAQ,QAClB4b,EAAI,QAAS,QAAS5b,EAAItgC,cAC1Bk8C,EAAI,eAAgB,cAAe5b,EAAIt+B,aACvCk6C,EAAI,gBAAiB,eAAgB5b,EAAIp/B,iBAG3CgtB,UAAU,IAAIQ,GAAqB+Y,mBAAkB,SAASyU,GAC5D,IAAI5b,EAAM,EAAQ,QAClB4b,EAAI,QAAS,QAAS5b,EAAItgC,cAC1Bk8C,EAAI,eAAgB,cAAe5b,EAAIt+B,aACvCk6C,EAAI,gBAAiB,eAAgB5b,EAAIp/B,iBAG3CitB,SAAS,IAAIO,GAAqB+Y,mBAAkB,SAASyU,GAC3D,IAAI5b,EAAM,EAAQ,QAClB4b,EAAI,QAAS,QAAS5b,EAAItgC,cAC1Bk8C,EAAI,eAAgB,cAAe5b,EAAIt+B,aACvCk6C,EAAI,gBAAiB,eAAgB5b,EAAIp/B,iBAG3CmnB,OAAO,IAAIqG,GAAqB+Y,mBAAkB,SAASyU,GACzD,IAAI5b,EAAM,EAAQ,QAClB4b,EAAI,QAAS,QAAS5b,EAAItgC,cAC1Bk8C,EAAI,eAAgB,cAAe5b,EAAIt+B,aACvCk6C,EAAI,gBAAiB,eAAgB5b,EAAIp/B,mB,q0EChnB7C,EAAQ,QACR,IAAIsB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAyB,eAAI,GACvCpS,EAAIud,eAAiBrL,EAAQI,cAAc,iBAAkB,CAAC,eAC9DnQ,OAAO8H,eAAekI,EAAUC,SAAyB,eAAG,aAAc,CACxElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAqDC,WAChFF,EAAMuD,QAAU,EAAQ,QAAmDA,QACpEvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIud,gB,uy/CClBrB,IAAIvd,EAAM,EAAQ,QA4ClBA,EAAI6hC,wBAA0B7hC,EAAIpE,KAAKI,QAAQgE,EAAIktB,YAAa,CAM9DjxB,YAAa,SAAiC6lC,GAE1C1lC,KAAK0lC,UADHA,GAGe9hC,EAAI6hC,wBAAwB8e,iBAAiBv8C,MAAM,GAEtEhI,KAAKwkD,iBAAmB,IAwC1BlzC,QAAS,SAAiBnI,GACxB,IAAIkI,EAAOrR,KACX,GAA8B,IAA1BqR,EAAKq0B,UAAU9kC,OAEjB,OADAuI,EAAS,IAAI1I,MAAM,iBACZ4Q,EAGT,GAA6C,IAAzCA,EAAKmzC,iBAAiBr/C,KAAKgE,GAAiB,CAC9C,IAAI6C,EAAQ,EACR05B,EAAYr0B,EAAKq0B,UAAU19B,MAAM,IAErC,SAASy8C,EAAYr7C,EAAK67B,GACxB,IAAM77B,GAAO67B,GAAUj5B,IAAU05B,EAAU9kC,OAKzC,OAJAgD,EAAIpE,KAAKyF,UAAUoM,EAAKmzC,kBAAkB,SAAUr7C,GAClDA,EAASC,EAAK67B,WAEhB5zB,EAAKmzC,iBAAiB5jD,OAAS,GAIjC,IAAI8jD,EAAWhf,EAAU15B,MAEvBi5B,EADsB,mBAAbyf,EACDA,EAASj7C,OAETi7C,GAGA51C,IACRm2B,EAAMn2B,KAAI,SAAU61C,GAClBF,EAAYE,EAAQA,EAAS,KAAO1f,MAGtCwf,EAAY,KAAMxf,GAItBwf,GAGF,OAAOpzC,KA2BXzN,EAAI6hC,wBAAwB8e,iBAAmB,GAK/C3gD,EAAI6hC,wBAAwBv0B,mBAAqB,SAA4BN,GAC3E5Q,KAAKwJ,UAAUo7C,eAAiBhhD,EAAIpE,KAAK2R,gBAAgB,UAAWP,IAMtEhN,EAAI6hC,wBAAwBx0B,wBAA0B,kBAC7CjR,KAAKwJ,UAAUo7C,gBAGxBhhD,EAAIpE,KAAKkR,YAAY9M,EAAI6hC,0B,qBClLzB,EAAQ,QACR,IAAI7hC,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAIod,IAAMlL,EAAQI,cAAc,MAAO,CAAC,eACxCnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA0CC,WACrEF,EAAMuD,QAAU,EAAQ,QAAwCA,QACzDvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIod,K,qjBClBrB,IAAIpd,EAAM,EAAQ,QACdwgB,EAAM,EAAQ,QAsClBxgB,EAAIihD,gBAAkBjhD,EAAIpE,KAAKI,QAAQgE,EAAIktB,YAAa,CAYtDjxB,YAAa,SAAyBuC,GACpCwB,EAAIktB,YAAYrnB,KAAKzJ,MACrBA,KAAKixB,SAAU,EACfjxB,KAAKoC,OAASA,GAchBgvB,QAAS,SAAiBjoB,GACxBnJ,KAAKqxB,gBAAgBloB,GAAYvF,EAAIpE,KAAKyJ,GAAGE,WAM/CmoB,KAAM,SAAcnoB,GAClB,IAAIkI,EAAOrR,KACXqR,EAAKkgB,gBACLlgB,EAAK7P,QAAQsjD,oBAAmB,SAAU17C,EAAK5F,GACxC4F,GACHiI,EAAK7P,QAAQkwB,gBAAgBluB,EAAM6N,GAErClI,EAASC,OAObmoB,cAAe,WACbvxB,KAAKwB,QAAUxB,KAAKwB,SAAW,IAAI4iB,EAAI,CAAChiB,OAAQpC,KAAKoC,a,qBC1FzD,EAAQ,QACR,IAAIwB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAoC,0BAAI,GAClDpS,EAAIihB,0BAA4B/O,EAAQI,cAAc,4BAA6B,CAAC,eACpFnQ,OAAO8H,eAAekI,EAAUC,SAAoC,0BAAG,aAAc,CACnFlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAmEC,WACvFF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIihB,2B,uuuDCjBrB,EAAQ,QACR,IAAIjhB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAIogB,IAAMlO,EAAQI,cAAc,MAAO,CAAC,eACxCnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA0CC,WAC9DF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIogB,K,qBCjBrB,EAAQ,QACR,IAAIpgB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAgB,MAAI,GAC9BpS,EAAIyf,MAAQvN,EAAQI,cAAc,QAAS,CAAC,eAC5CnQ,OAAO8H,eAAekI,EAAUC,SAAgB,MAAG,aAAc,CAC/DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAsDC,WAC1EF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIyf,O,qBCjBrB,IAAIzf,EAAM,EAAQ,QAKdpC,EAAU,KAKVD,EAAM,CACN4mB,iBAAkB,KAClB4rB,YAAa,SACbpyC,WAAY,IAMZojD,EAA2B,CAC3BnwC,OAAQ,SACRgW,SAAU,SACVC,KAAM,SACNm6B,SAAU,UAMdphD,EAAI6f,IAAIwhC,OAASrhD,EAAIpE,KAAKI,QAAQ,CAoB9BC,YAAa,SAAgBE,GACzBC,KAAKD,QAAUA,GAAW,IAO9BmlD,sBAAuB,SAA+B5/C,GAGlD,GAA8B,IAA1BA,EAAIkP,QADO,YAEX,OAAOlP,EAAI+mB,UAFA,WAEmBzrB,SAmEtCukD,aAAc,SAAsBplD,EAASoJ,GAClB,mBAAZpJ,QAAuCyH,IAAb2B,IACjCA,EAAWpJ,EACXA,EAAU,IAEd,IAAIsR,EAAOrR,KACPolD,EAAkC,mBAAbj8C,EAEzBpJ,EAAU6D,EAAIpE,KAAKyN,MAAMjN,KAAKD,QAASA,GAEvC,IAAIslD,EAAoBrlD,KAAKslD,yBAAyBvlD,GACtD,IAA0B,IAAtBslD,EAA4B,CAC5B,GAAID,EACA,OAAOj8C,EAASk8C,EAAmB,MAEvC,MAAMA,EAIV,IAEIE,EAAiB,CACjB3wC,OAAQ7U,EAAQ6U,OAChB8F,SAAU,IAAI9W,EAAIyb,SAAStf,EAAQ6qB,SAAW,IAAM7qB,EAAQ8qB,MAC5Dib,iBAAiB,EACjB3d,iBAAkB,MAElBpoB,EAAQ6Z,cACR2rC,EAAe3rC,YAAc7Z,EAAQ6Z,cAEzCpY,EAAU,IAAIoC,EAAIkS,QAAQyvC,IAElBhkD,IAAMA,EAEd,IAAI8B,EAAU7B,EAAQ66B,cAItB,GAFAr8B,KAAKwlD,0BAA0BniD,EAAStD,IAEpCqlD,EAOG,CACH,IAAI9/C,EAAMjC,EAAQ6mB,QA3BR,KA4BV,OAAOlqB,KAAKklD,sBAAsB5/C,GARlCjC,EAAQ6mB,QApBE,KAoBe,SAAS9gB,EAAK9D,GAC/BA,IACAA,EAAM+L,EAAK6zC,sBAAsB5/C,IAErC6D,EAASC,EAAK9D,OAY1BkgD,0BAA2B,SAAmCniD,EAAStD,GACnEsD,EAAQuI,GAAG,QAASvI,EAAQsqC,YACVtqC,EAAQ/B,YACdY,KAAO0B,EAAIpE,KAAKoG,oBAAoB,CAC5C6/C,OAAQ,UACRC,OAAQ3lD,EAAQilD,YASxBM,yBAA0B,SAAkCvlD,GAExD,IAAIY,EAAU,GAEd,IAAK,IAAIoK,KADThL,EAAUA,GAAW,GACLglD,EACPh/C,OAAOyD,UAAUmD,eAAelD,KAAKs7C,EAA0Bh6C,WAGzDhL,EAAQgL,KAASg6C,EAAyBh6C,KACjDpK,GAAW,WAAcoK,EAAM,4BAAgCg6C,EAAyBh6C,GAAO,kBAAsBhL,EAAQgL,GAAO,QAG5I,OAAIpK,EAAQC,QACDgD,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAC/BC,KAAM,mBACNC,QAASA,Q,qBCpNzB,IAAInB,EAAO,EAAQ,QACfmjC,EAAU,EAAQ,QAAcA,QAChC6D,EAAU,EAAQ,QAAcA,QAEpC,SAASmf,KAST,SAASlc,EAAUhzB,EAAKvQ,EAAOzC,GAC7B,OAAQA,EAAMlD,MACZ,IAAK,YAAa,OAOtB,SAA4BkW,EAAKrU,EAAQqB,GACvCjE,EAAKyF,UAAUxB,EAAMm2C,aAAa,SAASxhC,GACzC,IAAIC,EAAc5U,EAAM6L,QAAQ8I,GAChC,GAA6B,SAAzBC,EAAYwN,SAAhB,CAEA,IAAI3f,EAAQ9D,EAAOgW,GACfvW,EAAOwW,EAAYxW,KACvB,GAAIqE,QACF,GAAImS,EAAYC,eACd7B,EAAIosB,aAAahhC,EAAMqE,QAClB,GAAImS,EAAYjB,UACrBqyB,EAAUhzB,EAAKvQ,EAAOmS,OACjB,CACL,IAAIutC,EAAU,IAAIjjB,EAAQ9gC,GAC1B4U,EAAIqsB,aAAa8iB,GACjBC,EAAgBD,EAASvtC,GACzBoxB,EAAUmc,EAAS1/C,EAAOmS,QAvBL4wB,CAAmBxyB,EAAKvQ,EAAOzC,GACxD,IAAK,MAAO,OA4BhB,SAAsBgT,EAAK5N,EAAKpF,GAC9B,IAAIwT,EAASxT,EAAMsH,IAAIlJ,MAAQ,MAC3BqV,EAAWzT,EAAMyC,MAAMrE,MAAQ,QAEnCrC,EAAKiN,KAAK5D,GAAK,SAASkC,EAAK7E,GAC3B,IAAI6wC,EAAQ,IAAIpU,EAAQl/B,EAAM2T,UAAY3T,EAAM5B,KAAO,SACvD4U,EAAIqsB,aAAaiU,GAEjB,IAAI+O,EAAW,IAAInjB,EAAQ1rB,GACvB8uC,EAAa,IAAIpjB,EAAQzrB,GAC7B6/B,EAAMjU,aAAagjB,GACnB/O,EAAMjU,aAAaijB,GAEnBtc,EAAUqc,EAAU/6C,EAAKtH,EAAMsH,KAC/B0+B,EAAUsc,EAAY7/C,EAAOzC,EAAMyC,UA1ChBsjC,CAAa/yB,EAAKvQ,EAAOzC,GAC5C,IAAK,OAAQ,OA6CjB,SAAuBgT,EAAK3W,EAAM2D,GAC5BA,EAAM2T,UACR5X,EAAKyF,UAAUnF,GAAM,SAASoG,GAC5B,IAAIrE,EAAO4B,EAAMkU,OAAO9V,MAAQ4B,EAAM5B,KAClC+jD,EAAU,IAAIjjB,EAAQ9gC,GAC1B4U,EAAIqsB,aAAa8iB,GACjBnc,EAAUmc,EAAS1/C,EAAOzC,EAAMkU,WAGlCnY,EAAKyF,UAAUnF,GAAM,SAASoG,GAC5B,IAAIrE,EAAO4B,EAAMkU,OAAO9V,MAAQ,SAC5B+jD,EAAU,IAAIjjB,EAAQ9gC,GAC1B4U,EAAIqsB,aAAa8iB,GACjBnc,EAAUmc,EAAS1/C,EAAOzC,EAAMkU,WA1Dd0xB,CAAc5yB,EAAKvQ,EAAOzC,GAC9C,QAAS,OA8Db,SAAyBgT,EAAKvQ,EAAOzC,GACnCgT,EAAIqsB,aACF,IAAI0D,EAAQ/iC,EAAM0iB,aAAajgB,KAhEf8/C,CAAgBvvC,EAAKvQ,EAAOzC,IAoEhD,SAASoiD,EAAgBpvC,EAAKhT,EAAOwiD,GACnC,IAAIp/B,EAAK2Q,EAAS,QACd/zB,EAAMyiD,iBACRr/B,EAAMpjB,EAAMyiD,gBACRziD,EAAM0iD,qBAAoB3uB,GAAU,IAAM/zB,EAAM0iD,qBAC3CF,GAAUxiD,EAAMlC,IAAI2kD,kBAC7Br/B,EAAMpjB,EAAMlC,IAAI2kD,iBAGdr/B,GAAKpQ,EAAIosB,aAAarL,EAAQ3Q,GAzFpC8+B,EAAWn8C,UAAU89B,MAAQ,SAASllC,EAAQqB,EAAO4jC,EAAa+e,GAChE,IAAI3vC,EAAM,IAAIksB,EAAQ0E,GAGtB,OAFAwe,EAAgBpvC,EAAKhT,GAAO,GAC5BgmC,EAAUhzB,EAAKrU,EAAQqB,GAChBgT,EAAImsB,SAAShiC,OAAS,GAAKwlD,EAAU3vC,EAAI5T,WAAa,IA2F/D9B,EAAOC,QAAU2kD,G,qBCrGjB,EAAQ,QACR,IAAI/hD,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAqB,WAAI,GACnCpS,EAAI2d,WAAazL,EAAQI,cAAc,aAAc,CAAC,eACtDnQ,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAiDC,WAC5EF,EAAMuD,QAAU,EAAQ,QAA+CA,QAChEvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI2d,Y,kjBClBrB,IAAIta,EAAS,EAAQ,QAAWA,OAC5Bo/C,EAAY,EAAQ,QAMd,IAAIC,YAAY,CACtB,WACA,YACA,YACA,YAcsBn2C,KAAK+B,IAAI,EAAG,IAKtC,SAASq0C,IACLvmD,KAAKwmD,GAAK,WACVxmD,KAAKymD,GAAK,WACVzmD,KAAK0mD,GAAK,WACV1mD,KAAK2mD,GAAK,UACV3mD,KAAK4mD,GAAK,WAEV5mD,KAAK6mD,MAAQ,IAAIP,YAAY,IAC7BtmD,KAAKkI,OAAS,EACdlI,KAAKgd,MAAQ,GACbhd,KAAK8mD,YAAc,EAMvB/lD,EAAOC,QAAoBulD,EAE3BA,EAAKQ,WA7CY,GA+CjBR,EAAK/8C,UAAU2B,OAAS,SAAU3H,GAC9B,GAAIxD,KAAKgnD,SACL,MAAM,IAAIvmD,MAAM,iDAGpB,GAAI4lD,EAAUpK,YAAYz4C,GACtB,OAAOxD,KAKX,IAAIY,GAFJ4C,EAAO6iD,EAAUnK,gBAAgB14C,IAEf5C,OAClBZ,KAAK8mD,aAAwB,EAATlmD,EACpB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,IACxBb,KAAKskD,MAAM9gD,EAAK3C,IAGpB,OAAOb,MAGXumD,EAAK/8C,UAAU86C,MAAQ,SAAe2C,GAClCjnD,KAAK6mD,MAAM7mD,KAAKkI,UAAmB,IAAP++C,IAAgBjnD,KAAKgd,MAC7Chd,KAAKgd,MACLhd,KAAKgd,OAAS,GAEdhd,KAAKkI,SACLlI,KAAKgd,MAAQ,IAGG,KAAhBhd,KAAKkI,QAAelI,KAAKknD,gBAGjCX,EAAK/8C,UAAUwB,OAAS,SAAUhE,GAE9BhH,KAAKskD,MAAM,MACPtkD,KAAKkI,OAAS,IAAuB,KAAhBlI,KAAKkI,QAAiBlI,KAAKgd,MAAQ,KAC1Dhd,KAAKknD,eAEPlnD,KAAKkI,OAAS,GACdlI,KAAKgd,MAAQ,GAGbhd,KAAKskD,MAAM,GACXtkD,KAAKskD,MAAM,GACXtkD,KAAKskD,MAAMtkD,KAAK8mD,YAAc,aAAe9mD,KAAK8mD,YAAc,cAAgB,GAChF9mD,KAAKskD,MAAMtkD,KAAK8mD,YAAc,WAAa9mD,KAAK8mD,YAAc,WAAc,GAC5E,IAAK,IAAIK,EAAI,GAAIA,GAAK,EAAGA,GAAK,EAC1BnnD,KAAKskD,MAAMtkD,KAAK8mD,aAAeK,GAInC,IAAIp7C,EAAM,IAAI9E,EAhGE,IAiGZmgD,EAAU,IAAIC,SAASt7C,EAAIlF,QAO/B,OANAugD,EAAQE,UAAU,EAAGtnD,KAAKwmD,IAAI,GAC9BY,EAAQE,UAAU,EAAGtnD,KAAKymD,IAAI,GAC9BW,EAAQE,UAAU,EAAGtnD,KAAK0mD,IAAI,GAC9BU,EAAQE,UAAU,GAAItnD,KAAK2mD,IAAI,GAC/BS,EAAQE,UAAU,GAAItnD,KAAK4mD,IAAI,GAExB5/C,EAAW+E,EAAIlJ,SAASmE,GAAY+E,GAG/Cw6C,EAAK/8C,UAAU09C,aAAe,WAE1B,IAAK,IAAIrmD,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAC5B,IAAI0mD,EAAIvnD,KAAK6mD,MAAMhmD,EAAI,GAAKb,KAAK6mD,MAAMhmD,EAAI,GAAKb,KAAK6mD,MAAMhmD,EAAI,IAAMb,KAAK6mD,MAAMhmD,EAAI,IACpFb,KAAK6mD,MAAMhmD,GAAM0mD,GAAK,EAAMA,IAAM,GAIpC,IAKIC,EAAG3/B,EALHsB,EAAInpB,KAAKwmD,GACTp9B,EAAIppB,KAAKymD,GACTpjB,EAAIrjC,KAAK0mD,GACT9E,EAAI5hD,KAAK2mD,GACTjkD,EAAI1C,KAAK4mD,GAIb,IAAK/lD,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACnBA,EAAI,IACN2mD,EAAI5F,EAAKx4B,GAAKia,EAAIue,GAClB/5B,EAAI,YAEGhnB,EAAI,IACX2mD,EAAIp+B,EAAIia,EAAIue,EACZ/5B,EAAI,YAEGhnB,EAAI,IACX2mD,EAAKp+B,EAAIia,EAAMue,GAAKx4B,EAAIia,GACxBxb,EAAI,aAGJ2/B,EAAIp+B,EAAIia,EAAIue,EACZ/5B,EAAI,YAEN,IAAI4/B,GAAQt+B,GAAK,EAAIA,IAAM,IAAMq+B,EAAI9kD,EAAImlB,GAAmB,EAAd7nB,KAAK6mD,MAAMhmD,IACzD6B,EAAIk/C,EACJA,EAAIve,EACJA,EAAKja,GAAK,GAAKA,IAAM,EACrBA,EAAID,EACJA,EAAIs+B,EAYN,IARAznD,KAAKwmD,GAAMxmD,KAAKwmD,GAAKr9B,EAAK,EAC1BnpB,KAAKymD,GAAMzmD,KAAKymD,GAAKr9B,EAAK,EAC1BppB,KAAK0mD,GAAM1mD,KAAK0mD,GAAKrjB,EAAK,EAC1BrjC,KAAK2mD,GAAM3mD,KAAK2mD,GAAK/E,EAAK,EAC1B5hD,KAAK4mD,GAAM5mD,KAAK4mD,GAAKlkD,EAAK,EAG1B1C,KAAKkI,OAAS,EACTrH,EAAI,EAAGA,EAAI,GAAIA,IAChBb,KAAK6mD,MAAMhmD,GAAK,I,27OCnKxB,EAAQ,QACR,IAAI+C,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAA+B,qBAAI,GAC7CpS,EAAI4hB,qBAAuB1P,EAAQI,cAAc,uBAAwB,CAAC,eAC1EnQ,OAAO8H,eAAekI,EAAUC,SAA+B,qBAAG,aAAc,CAC9ElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAoDC,WACxEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI4hB,sB,qBCjBrB,IAAI6gC,EAAY,EAAQ,QACpBp/C,EAAS,EAAQ,QAAWA,OAgBhC,SAASygD,IACL1nD,KAAK4rC,MAAQ,CACT,WACA,WACA,WACA,WAEJ5rC,KAAK6G,OAAS,IAAIwgD,SAAS,IAAI17C,YArBlB,KAsBb3L,KAAK2nD,aAAe,EACpB3nD,KAAK4nD,YAAc,EACnB5nD,KAAKgnD,UAAW,EAuIpB,SAASa,EAAIC,EAAG3+B,EAAGC,EAAG2+B,EAAGZ,EAAGa,GAExB,QADA7+B,GAAOA,EAAI2+B,EAAK,aAAgBC,EAAIC,EAAK,YAAe,aACzCb,EAAMh+B,IAAO,GAAKg+B,GAAO/9B,EAAK,WAGjD,SAAS6+B,EAAG9+B,EAAGC,EAAGia,EAAGue,EAAGmG,EAAGZ,EAAGa,GAC1B,OAAOH,EAAKz+B,EAAIia,GAAQja,EAAKw4B,EAAIz4B,EAAGC,EAAG2+B,EAAGZ,EAAGa,GAGjD,SAASE,EAAG/+B,EAAGC,EAAGia,EAAGue,EAAGmG,EAAGZ,EAAGa,GAC1B,OAAOH,EAAKz+B,EAAIw4B,EAAMve,GAAMue,EAAKz4B,EAAGC,EAAG2+B,EAAGZ,EAAGa,GAGjD,SAASG,EAAGh/B,EAAGC,EAAGia,EAAGue,EAAGmG,EAAGZ,EAAGa,GAC1B,OAAOH,EAAIz+B,EAAIia,EAAIue,EAAGz4B,EAAGC,EAAG2+B,EAAGZ,EAAGa,GAGtC,SAAStK,EAAGv0B,EAAGC,EAAGia,EAAGue,EAAGmG,EAAGZ,EAAGa,GAC1B,OAAOH,EAAIxkB,GAAKja,GAAMw4B,GAAKz4B,EAAGC,EAAG2+B,EAAGZ,EAAGa,GAnJ3CjnD,EAAOC,QAAoB0mD,EAE3BA,EAAIX,WAhCa,GAkCjBW,EAAIl+C,UAAU2B,OAAS,SAAUi9C,GAC7B,GAAI/B,EAAUpK,YAAYmM,GACtB,OAAOpoD,KACJ,GAAIA,KAAKgnD,SACZ,MAAM,IAAIvmD,MAAM,iDAGpB,IAAI+C,EAAO6iD,EAAUnK,gBAAgBkM,GACjCpgB,EAAW,EACX5/B,EAAa5E,EAAK4E,WAEtB,IADApI,KAAK4nD,aAAex/C,EACbA,EAAa,GAChBpI,KAAK6G,OAAOwhD,SAASroD,KAAK2nD,eAAgBnkD,EAAKwkC,MAC/C5/B,IA/CS,KAgDLpI,KAAK2nD,eACL3nD,KAAKsoD,aACLtoD,KAAK2nD,aAAe,GAI5B,OAAO3nD,MAGX0nD,EAAIl+C,UAAUwB,OAAS,SAAUhE,GAC7B,IAAKhH,KAAKgnD,SAAU,CAChB,IAAengD,EAAN7G,KAAkB6G,OAAQ0hD,EAA1BvoD,KAAiD2nD,aACtDa,EAA2B,EADtBxoD,KAAgF4nD,YAIzF,GAFA/gD,EAAOwhD,SAASroD,KAAK2nD,eAAgB,KAEjCY,EA/DK,IA+D6BxB,GAAgB,CAClD,IAAK,IAAIlmD,EAAIb,KAAK2nD,aAAc9mD,EAhE3B,GAgE2CA,IAC5CgG,EAAOwhD,SAASxnD,EAAG,GAEvBb,KAAKsoD,aACLtoD,KAAK2nD,aAAe,EAExB,IAAS9mD,EAAIb,KAAK2nD,aAAc9mD,EAAIkmD,GAAgBlmD,IAChDgG,EAAOwhD,SAASxnD,EAAG,GAEvBgG,EAAOygD,UAAUP,GAAgByB,IAAe,GAAG,GACnD3hD,EAAOygD,UAAUP,GAAgB52C,KAAKs4C,MAAMD,EAAa,aAAc,GACvExoD,KAAKsoD,aACLtoD,KAAKgnD,UAAW,EAEpB,IAAIj7C,EAAM,IAAIs7C,SAAS,IAAI17C,YA5EX,KA6EhB,IAAS9K,EAAI,EAAGA,EAAI,EAAGA,IACnBkL,EAAIu7C,UAAc,EAAJzmD,EAAOb,KAAK4rC,MAAM/qC,IAAI,GAExC,IAAI6nD,EAAO,IAAIzhD,EAAO8E,EAAIlF,OAAQkF,EAAIowC,WAAYpwC,EAAI3D,YACtD,OAAOpB,EAAW0hD,EAAK7lD,SAASmE,GAAY0hD,GAGhDhB,EAAIl+C,UAAU8+C,WAAa,WACvB,IAAezhD,EAAN7G,KAAkB6G,OAAQ+kC,EAA1B5rC,KAAqC4rC,MAC1CziB,EAAIyiB,EAAM,GAAIxiB,EAAIwiB,EAAM,GAAIvI,EAAIuI,EAAM,GAAIgW,EAAIhW,EAAM,GACxDziB,EAAI8+B,EAAG9+B,EAAGC,EAAGia,EAAGue,EAAG/6C,EAAO8hD,UAAU,GAAG,GAAO,EAAG,YACjD/G,EAAIqG,EAAGrG,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,GAAG,GAAO,GAAI,YAClDtlB,EAAI4kB,EAAG5kB,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,GAAG,GAAO,GAAI,WAClDv/B,EAAI6+B,EAAG7+B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDx/B,EAAI8+B,EAAG9+B,EAAGC,EAAGia,EAAGue,EAAG/6C,EAAO8hD,UAAU,IAAI,GAAO,EAAG,YAClD/G,EAAIqG,EAAGrG,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDtlB,EAAI4kB,EAAG5kB,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDv/B,EAAI6+B,EAAG7+B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDx/B,EAAI8+B,EAAG9+B,EAAGC,EAAGia,EAAGue,EAAG/6C,EAAO8hD,UAAU,IAAI,GAAO,EAAG,YAClD/G,EAAIqG,EAAGrG,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDtlB,EAAI4kB,EAAG5kB,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDv/B,EAAI6+B,EAAG7+B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDx/B,EAAI8+B,EAAG9+B,EAAGC,EAAGia,EAAGue,EAAG/6C,EAAO8hD,UAAU,IAAI,GAAO,EAAG,YAClD/G,EAAIqG,EAAGrG,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDtlB,EAAI4kB,EAAG5kB,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YAEnDx/B,EAAI++B,EAAG/+B,EADPC,EAAI6+B,EAAG7+B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACtCtlB,EAAGue,EAAG/6C,EAAO8hD,UAAU,GAAG,GAAO,EAAG,YACjD/G,EAAIsG,EAAGtG,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,IAAI,GAAO,EAAG,YAClDtlB,EAAI6kB,EAAG7kB,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,WACnDv/B,EAAI8+B,EAAG9+B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,GAAG,GAAO,GAAI,YAClDx/B,EAAI++B,EAAG/+B,EAAGC,EAAGia,EAAGue,EAAG/6C,EAAO8hD,UAAU,IAAI,GAAO,EAAG,YAClD/G,EAAIsG,EAAGtG,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,IAAI,GAAO,EAAG,UAClDtlB,EAAI6kB,EAAG7kB,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDv/B,EAAI8+B,EAAG9+B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDx/B,EAAI++B,EAAG/+B,EAAGC,EAAGia,EAAGue,EAAG/6C,EAAO8hD,UAAU,IAAI,GAAO,EAAG,WAClD/G,EAAIsG,EAAGtG,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,IAAI,GAAO,EAAG,YAClDtlB,EAAI6kB,EAAG7kB,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDv/B,EAAI8+B,EAAG9+B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDx/B,EAAI++B,EAAG/+B,EAAGC,EAAGia,EAAGue,EAAG/6C,EAAO8hD,UAAU,IAAI,GAAO,EAAG,YAClD/G,EAAIsG,EAAGtG,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,GAAG,GAAO,EAAG,YACjDtlB,EAAI6kB,EAAG7kB,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YAEnDx/B,EAAIg/B,EAAGh/B,EADPC,EAAI8+B,EAAG9+B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACtCtlB,EAAGue,EAAG/6C,EAAO8hD,UAAU,IAAI,GAAO,EAAG,YAClD/G,EAAIuG,EAAGvG,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDtlB,EAAI8kB,EAAG9kB,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDv/B,EAAI++B,EAAG/+B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDx/B,EAAIg/B,EAAGh/B,EAAGC,EAAGia,EAAGue,EAAG/6C,EAAO8hD,UAAU,GAAG,GAAO,EAAG,YACjD/G,EAAIuG,EAAGvG,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDtlB,EAAI8kB,EAAG9kB,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDv/B,EAAI++B,EAAG/+B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDx/B,EAAIg/B,EAAGh/B,EAAGC,EAAGia,EAAGue,EAAG/6C,EAAO8hD,UAAU,IAAI,GAAO,EAAG,WAClD/G,EAAIuG,EAAGvG,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,GAAG,GAAO,GAAI,YAClDtlB,EAAI8kB,EAAG9kB,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDv/B,EAAI++B,EAAG/+B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,UACnDx/B,EAAIg/B,EAAGh/B,EAAGC,EAAGia,EAAGue,EAAG/6C,EAAO8hD,UAAU,IAAI,GAAO,EAAG,YAClD/G,EAAIuG,EAAGvG,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDtlB,EAAI8kB,EAAG9kB,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,WAEnDx/B,EAAIu0B,EAAGv0B,EADPC,EAAI++B,EAAG/+B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,GAAG,GAAO,GAAI,YACrCtlB,EAAGue,EAAG/6C,EAAO8hD,UAAU,GAAG,GAAO,EAAG,YACjD/G,EAAIlE,EAAGkE,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDtlB,EAAIqa,EAAGra,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDv/B,EAAIs0B,EAAGt0B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDx/B,EAAIu0B,EAAGv0B,EAAGC,EAAGia,EAAGue,EAAG/6C,EAAO8hD,UAAU,IAAI,GAAO,EAAG,YAClD/G,EAAIlE,EAAGkE,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDtlB,EAAIqa,EAAGra,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDv/B,EAAIs0B,EAAGt0B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,GAAG,GAAO,GAAI,YAClDx/B,EAAIu0B,EAAGv0B,EAAGC,EAAGia,EAAGue,EAAG/6C,EAAO8hD,UAAU,IAAI,GAAO,EAAG,YAClD/G,EAAIlE,EAAGkE,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDtlB,EAAIqa,EAAGra,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDv/B,EAAIs0B,EAAGt0B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDx/B,EAAIu0B,EAAGv0B,EAAGC,EAAGia,EAAGue,EAAG/6C,EAAO8hD,UAAU,IAAI,GAAO,EAAG,YAClD/G,EAAIlE,EAAGkE,EAAGz4B,EAAGC,EAAGia,EAAGx8B,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnDtlB,EAAIqa,EAAGra,EAAGue,EAAGz4B,EAAGC,EAAGviB,EAAO8hD,UAAU,GAAG,GAAO,GAAI,WAClDv/B,EAAIs0B,EAAGt0B,EAAGia,EAAGue,EAAGz4B,EAAGtiB,EAAO8hD,UAAU,IAAI,GAAO,GAAI,YACnD/c,EAAM,GAAMziB,EAAIyiB,EAAM,GAAM,WAC5BA,EAAM,GAAMxiB,EAAIwiB,EAAM,GAAM,WAC5BA,EAAM,GAAMvI,EAAIuI,EAAM,GAAM,WAC5BA,EAAM,GAAMgW,EAAIhW,EAAM,GAAM,a,qBC/JhC,IAAIhoC,EAAM,EAAQ,QACd2wB,EAA+B,EAAQ,QAI3C3wB,EAAIpE,KAAK2L,OAAOvH,EAAIwgB,IAAI5a,UAAW,CA0BjCkoB,gBAAiB,SAAyBluB,EAAMoW,GAC9C,OAAKpW,GACAoW,IAAaA,EAAc,IAAIhW,EAAIitB,sBACxCjX,EAAYqX,SAAU,EACtBrX,EAAYM,YAAc1W,EAAKstB,YAAYge,YAC3Cl1B,EAAYW,gBAAkB/W,EAAKstB,YAAY83B,gBAC/ChvC,EAAYO,aAAe3W,EAAKstB,YAAYke,aAC5Cp1B,EAAY6E,WAAajb,EAAKstB,YAAYme,WACnCr1B,GAPW,MAUpB0nB,0BAA2B,SAAmCl/B,EAAQ+G,GACpE,OAAOnJ,KAAKumB,2BAA2B,4BAA6BnkB,EAAQ+G,IAG9E27C,mBAAoB,SAA4B1iD,EAAQ+G,GACtD,OAAOnJ,KAAKumB,2BAA2B,qBAAsBnkB,EAAQ+G,IAMvEkU,sBAAuB,SAA+Bha,GACpDA,EAAQia,YAAY,WAAYtd,KAAK6oD,uBAAuB,IAM9DA,sBAAuB,SAA+BxnD,GACpD,IAAIG,EAAUH,EAAIG,QACd8B,EAAS9B,EAAQ8B,OAMrB,GALAA,EAAO8iC,qBAAuB7R,EAA6B/yB,EAAQuzB,gBAAiB,CAClF4C,IA9D8B,6BA+D9BC,aA9DiC,yBA+DjCC,aAAc,yBAGkB,aAAhCv0B,EAAO8iC,sBACP5kC,EAAQ6pC,iBACR,CAEA,IAAK/nC,EAAOsR,OACV,MAAMhR,EAAIpE,KAAKgB,MAAM,IAAIC,MACvB,CAACC,KAAM,cAAeC,QAAS,6BAEnC,IAAIm3B,EAAcx0B,EAAOoX,SAASlG,QAAQ,kBACtCujB,EAAmBz0B,EAAOoX,SAAS2R,UAAU,EAAGyL,GAClD,IAAMx0B,EAAOsR,OAAStR,EAAOoX,SAAS2R,UAAUyL,GAClDz2B,EAAIC,YAAYstB,eAAemJ,GAC/B12B,EAAIC,YAAYsT,OAAStR,EAAOsR,Y,4mZCjFtC,IAAI3N,EAAS,EAAQ,QAAWA,OAC5Bo/C,EAAY,EAAQ,QAMpByC,EAAM,IAAIxC,YAAY,CACtB,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAcAyC,EAAsB54C,KAAK+B,IAAI,EAAG,IAAM,EAK5C,SAAS82C,IACLhpD,KAAK4rC,MAAQ,CACT,WACA,WACA,WACA,WACA,WACA,WACA,UACA,YAEJ5rC,KAAKynD,KAAO,IAAIwB,WAAW,IAC3BjpD,KAAK6G,OAAS,IAAIM,WAAW,IAC7BnH,KAAK2nD,aAAe,EACpB3nD,KAAK4nD,YAAc,EAInB5nD,KAAKgnD,UAAW,EAMpBjmD,EAAOC,QAAoBgoD,EAE3BA,EAAOjC,WAjHU,GAmHjBiC,EAAOx/C,UAAU2B,OAAS,SAAU3H,GAChC,GAAIxD,KAAKgnD,SACL,MAAM,IAAIvmD,MAAM,iDAGpB,GAAI4lD,EAAUpK,YAAYz4C,GACtB,OAAOxD,KAKX,IAAIgoC,EAAW,EACX5/B,GAHJ5E,EAAO6iD,EAAUnK,gBAAgB14C,IAGX4E,WAEtB,GADApI,KAAK4nD,aAAex/C,EACG,EAAnBpI,KAAK4nD,YAAkBmB,EACvB,MAAM,IAAItoD,MAAM,uCAGpB,KAAO2H,EAAa,GAChBpI,KAAK6G,OAAO7G,KAAK2nD,gBAAkBnkD,EAAKwkC,KACxC5/B,IAvIS,KAwILpI,KAAK2nD,eACL3nD,KAAKsoD,aACLtoD,KAAK2nD,aAAe,GAI5B,OAAO3nD,MAGXgpD,EAAOx/C,UAAUwB,OAAS,SAAUhE,GAChC,IAAKhH,KAAKgnD,SAAU,CAChB,IAAIwB,EAAgC,EAAnBxoD,KAAK4nD,YAClBsB,EAAa,IAAI7B,SAASrnD,KAAK6G,OAAOA,OAAQ7G,KAAK6G,OAAOs1C,WAAYn8C,KAAK6G,OAAOuB,YAClFmgD,EAAoBvoD,KAAK2nD,aAG7B,GAFAuB,EAAWb,SAASroD,KAAK2nD,eAAgB,KAErCY,EAxJK,IAwJ6BxB,GAAgB,CAClD,IAAK,IAAIlmD,EAAIb,KAAK2nD,aAAc9mD,EAzJ3B,GAyJ2CA,IAC5CqoD,EAAWb,SAASxnD,EAAG,GAE3Bb,KAAKsoD,aACLtoD,KAAK2nD,aAAe,EAExB,IAAS9mD,EAAIb,KAAK2nD,aAAc9mD,EAAIkmD,GAAgBlmD,IAChDqoD,EAAWb,SAASxnD,EAAG,GAE3BqoD,EAAW5B,UAAUP,GAAgB52C,KAAKs4C,MAAMD,EAAa,aAAc,GAC3EU,EAAW5B,UAAUP,GAAgByB,GACrCxoD,KAAKsoD,aACLtoD,KAAKgnD,UAAW,EAIpB,IAAIj7C,EAAM,IAAI9E,EAvKE,IAwKhB,IAASpG,EAAI,EAAGA,EAAI,EAAGA,IACnBkL,EAAQ,EAAJlL,GAAUb,KAAK4rC,MAAM/qC,KAAO,GAAM,IACtCkL,EAAQ,EAAJlL,EAAQ,GAAMb,KAAK4rC,MAAM/qC,KAAO,GAAM,IAC1CkL,EAAQ,EAAJlL,EAAQ,GAAMb,KAAK4rC,MAAM/qC,KAAO,EAAK,IACzCkL,EAAQ,EAAJlL,EAAQ,GAAMb,KAAK4rC,MAAM/qC,KAAO,EAAK,IAE7C,OAAOmG,EAAW+E,EAAIlJ,SAASmE,GAAY+E,GAG/Ci9C,EAAOx/C,UAAU8+C,WAAa,WAY1B,IAXA,IACIzhD,EADK7G,KACO6G,OACZ+kC,EAFK5rC,KAEM4rC,MACXud,EAASvd,EAAM,GACfwd,EAASxd,EAAM,GACfyd,EAASzd,EAAM,GACf0d,EAAS1d,EAAM,GACf2d,EAAS3d,EAAM,GACf4d,EAAS5d,EAAM,GACf6d,EAAS7d,EAAM,GACf8d,EAAS9d,EAAM,GACV/qC,EAAI,EAAGA,EA/LH,GA+LmBA,IAAK,CACjC,GAAIA,EAAI,GACJb,KAAKynD,KAAK5mD,IAAwB,IAAhBgG,EAAW,EAAJhG,KAAkB,IACf,IAAtBgG,EAAY,EAAJhG,EAAS,KAAc,IACT,IAAtBgG,EAAY,EAAJhG,EAAS,KAAc,EACV,IAAtBgG,EAAY,EAAJhG,EAAS,OAErB,CACD,IAAI8oD,EAAI3pD,KAAKynD,KAAK5mD,EAAI,GAClB+oD,GAAQD,IAAM,GAAKA,GAAK,KACvBA,IAAM,GAAKA,GAAK,IAChBA,IAAM,GAEPE,IADJF,EAAI3pD,KAAKynD,KAAK5mD,EAAI,OACA,EAAI8oD,GAAK,KACtBA,IAAM,GAAKA,GAAK,IAChBA,IAAM,EACX3pD,KAAKynD,KAAK5mD,IAAM+oD,EAAO5pD,KAAKynD,KAAK5mD,EAAI,GAAK,IACrCgpD,EAAO7pD,KAAKynD,KAAK5mD,EAAI,IAAM,GAEpC,IAAIipD,KAAUP,IAAW,EAAIA,GAAU,KAClCA,IAAW,GAAKA,GAAU,KAC1BA,IAAW,GAAKA,GAAU,KACvBA,EAASC,GAAYD,EAASE,GAAY,IAC1CC,GAAWZ,EAAIjoD,GAAKb,KAAKynD,KAAK5mD,GAAM,GAAM,GAAM,EACpDkpD,IAAQZ,IAAW,EAAIA,GAAU,KAChCA,IAAW,GAAKA,GAAU,KAC1BA,IAAW,GAAKA,GAAU,MAASA,EAASC,EAAWD,EAASE,EAAWD,EAASC,GAAY,EACrGK,EAASD,EACTA,EAASD,EACTA,EAASD,EACTA,EAAUD,EAASQ,EAAM,EACzBR,EAASD,EACTA,EAASD,EACTA,EAASD,EACTA,EAAUW,EAAKC,EAAM,EAEzBne,EAAM,IAAMud,EACZvd,EAAM,IAAMwd,EACZxd,EAAM,IAAMyd,EACZzd,EAAM,IAAM0d,EACZ1d,EAAM,IAAM2d,EACZ3d,EAAM,IAAM4d,EACZ5d,EAAM,IAAM6d,EACZ7d,EAAM,IAAM8d,I,4ZC7OhB,IAAI9lD,EAAM,EAAQ,QACd6wB,EAAa,EAAQ,QAErBD,EAAS,CAIX2B,aAAc,SAAsB90B,EAAKwxB,GACvC,IACIm3B,IADc3oD,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,YAAc,IAAII,OAAS,IAC9CsN,SAAW,GACzC,SAAKjO,EAAIe,OAAOywB,KAAem3B,EAAan3B,KACrCjvB,EAAIpE,KAAK+U,IAAIpU,SAASkB,EAAIe,OAAOywB,KAM1C8D,mBAAoB,SAA4Bt1B,GAC9C,IAAI4oD,EAAY5oD,EAAIG,QAAQ2zB,WAE5B,GAA0B,OAAtB80B,EAAUzoD,SAA0C,gBAAtByoD,EAAUzoD,QAC1C,MAAMoC,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,aACNC,QAAS,2DAQf+1B,mBAAoB,SAA4Br1B,GAC9C,IAAI4oD,EAAY5oD,EAAIG,QAAQ2zB,WAE5B,IAAK,YAAY+0B,KAAKD,EAAUp1C,WAC9B,MAAMjR,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,aACNC,QAAS,oDAQf01B,yBAA0B,SAAkCh1B,GAC1D,IAAI4oD,EAAY5oD,EAAIG,QAAQ2zB,WAGxBg1B,EAAYF,EAAUn1C,SAAS,cAAclU,QAEjD,GAAmD,IAA/CqpD,EAAUn1C,SAASrS,MAAM0nD,GAAWvpD,OACtC,MAAMgD,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,aACNC,QAAS,4EAIb,IAAIm4B,EAAcmxB,EAAUn1C,SAASrS,MAAM0nD,GAAW,GAClDC,EAAoBtxB,EAAc,IAAMmxB,EAAUp1C,UACtD,IAAK2f,EAAO2F,wBAAwBiwB,IAAsBA,EAAkBphD,MAAM,MAChF,MAAMpF,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,aACNC,QAAS,2DAA6Dm4B,IAK1Ez3B,EAAIG,QAAQ2zB,WAAW2D,YAAcA,GAMvCtC,oBAAqB,SAA6Bn1B,GAChD,IAAI4oD,EAAY5oD,EAAIG,QAAQ2zB,WAE5B,GAC6C,IAA3C80B,EAAUn1C,SAASN,QAAQ,aACgB,IAA3Cy1C,EAAUn1C,SAASN,QAAQ,YAE3B,MAAM5Q,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,aACNC,QAAS,8CAKb,IAAIwpD,EAAYF,EAAUn1C,SAAS,UAAUlU,QACzC43B,EAAYyxB,EAAUn1C,SAASrS,MAAM0nD,GAAW,GAEpD,IADmB,IAAIjjC,OAAO,4DACZ2M,KAAK2E,GACrB,MAAM50B,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,aACNC,QAAS,sDAAwD63B,IAGrEn3B,EAAIG,QAAQ2zB,WAAWqD,UAAYA,GAMrCjC,+BAAgC,SAAwCl1B,GACtE,IAAI4oD,EAAY5oD,EAAIG,QAAQ2zB,WAGxBg1B,EAAYF,EAAUn1C,SAAS,UAAUlU,QAE7C,GAAmD,IAA/CqpD,EAAUn1C,SAASrS,MAAM0nD,GAAWvpD,OACtC,MAAMgD,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,aACNC,QAAS,6FAIb,IAAIm4B,EAAcmxB,EAAUn1C,SAASrS,MAAM0nD,GAAW,GAClDC,EAAoBtxB,EAAc,IAAMmxB,EAAUp1C,UACtD,IAAK2f,EAAO2F,wBAAwBiwB,IAAsBA,EAAkBphD,MAAM,MAChF,MAAMpF,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,aACNC,QAAS,2DAA6Dm4B,IAK1Ez3B,EAAIG,QAAQ2zB,WAAW2D,YAAcA,GAMvCrC,kBAAmB,SAA2Bp1B,GAC5C,IAAIu3B,EAAepE,EAAO61B,uBAAuBhpD,GAC7CipD,EAAgBjpD,EAAIG,QAAQ2zB,WAAWvgB,OACvC21C,EAAelpD,EAAIG,QAAQ8B,OAAOsR,OAEtC,IAAK01C,EACH,MAAM1mD,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,aACNC,QAAS,wBAIb,GACE4pD,EAAa/1C,QAAQ,SAAW,GAChC81C,EAAc91C,QAAQ,SAAW,EAEjC,MAAM5Q,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,uBACNC,QAAS,oDAIb,IAAKi4B,GAAgB0xB,IAAkBC,EACrC,MAAM3mD,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,uBACNC,QAAS,yDAEN,GACLi4B,GACAnE,EAAWkE,kBAAkB2xB,KAAmB71B,EAAWkE,kBAAkB4xB,GAE7E,MAAM3mD,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,uBACNC,QAAS,oEAIb,GAAIU,EAAIG,QAAQ8B,OAAO20B,sBACrB,MAAMr0B,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,uBACNC,QAAS,wEAIb,GAAuC,gBAAnCU,EAAIG,QAAQ2zB,WAAW3zB,SAA6BH,EAAIG,QAAQ8B,OAAO40B,aACzE,MAAMt0B,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,uBACNC,QAAS,yEAKf0pD,uBAAwB,SAAgChpD,GACtD,IAAImpD,EAAU,wBACVC,EAAa,oBACb7xB,GAAe,EACf2J,EAAiBlhC,EAAIG,QAAQuzB,iBAAmB,GACpD,QAA0CvtB,IAAtCnG,EAAIG,QAAQ8B,OAAOu1B,eACrB,OAAOx3B,EAAIG,QAAQ8B,OAAOu1B,eACrB,QAAsCrxB,IAAlC+6B,EAAe1J,eACxBD,GAAiD,IAAlC2J,EAAe1J,oBACzB,GAAIj1B,EAAIpE,KAAKkQ,SAElB,GAAI,gGAAY86C,GAAU,CACxB,IAAItkD,EAAQ,gGAAYskD,GAAS/sC,OAAO/U,cACxC,GAAI,CAAC,QAAS,QAAQ8L,QAAQtO,GAAS,EACrC,MAAMtC,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,uBACNC,QAAS6pD,EAAU,oCAAsC,gGAAYA,GACrE73C,WAAW,IAGfimB,EAAyB,SAAV1yB,MACV,CACL,IACIu8B,EAAU,GACd,IAEEA,EADW7+B,EAAIpE,KAAKiU,4BAA4B7P,EAAIpE,KAAKkU,WACtC,gGAAY4sB,aAAe18B,EAAIpE,KAAKwV,gBACvD,MAAOtS,IACT,GAAI+/B,EAAQgoB,GAAa,CACvB,GAAI,CAAC,QAAS,QAAQj2C,QAAQiuB,EAAQgoB,GAAYhtC,OAAO/U,eAAiB,EACxE,MAAM9E,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,uBACNC,QAAS8pD,EAAa,oCAAsChoB,EAAQgoB,GACpE93C,WAAW,IAGfimB,EAA4D,SAA7C6J,EAAQgoB,GAAYhtC,OAAO/U,eAKhD,OADArH,EAAIG,QAAQ8B,OAAOu1B,eAAiBD,EAC7BA,GAMT/B,2BAA4B,SAAoCx1B,GAC9D,GAAIA,EAAIG,QAAQuzB,iBAAmB1zB,EAAIG,QAAQuzB,gBAAgBra,SAC7D,MAAM9W,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,uBACNC,QAAS,4DAIb,GAAIU,EAAIG,QAAQ8B,OAAO42B,iBACrB,MAAMt2B,EAAIpE,KAAKgB,MAAM,IAAIC,MAAS,CAChCC,KAAM,uBACNC,QAAS,4DAWfw5B,wBAAyB,SAAiCF,GACxD,IAAI7Q,EAAI6Q,EACJwQ,EAAS,IAAIvjB,OAAO,wCACpBwjC,EAAY,IAAIxjC,OAAO,iBACvByjC,EAAO,IAAIzjC,OAAO,QACtB,SAAQkC,EAAEpgB,MAAMyhC,IAAYrhB,EAAEpgB,MAAM0hD,IAAethC,EAAEpgB,MAAM2hD,MAO/D5pD,EAAOC,QAAUwzB,G,qBCzQjB,IAAI5wB,EAAM,EAAQ,QACdpE,EAAO,EAAQ,QACfspC,EAAuB,EAAQ,QAC/BxyB,EAAQ,EAAQ,QAChBnV,EAAqB,EAAQ,QAAaA,mBAqG9CJ,EAAOC,QAAU,CACfI,aApGF,SAAsBC,GACpB,IAAIO,EAAYP,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAC3CN,EAAcD,EAAIC,YACtBA,EAAYe,QAAQ,gBAClB,mDACFf,EAAYc,OAAS,CACnB0vC,QAASzwC,EAAIG,QAAQD,IAAIi+B,WACzBimB,OAAQ7jD,EAAUC,OAKN,IAAIinC,GACVW,UAAUpoC,EAAIe,OAAQR,EAAUI,OAAO,SAASH,EAAMqE,GAC5D5E,EAAYc,OAAOP,GAAQqE,KAE7B5E,EAAYY,KAAO1C,EAAKoG,oBAAoBtE,EAAYc,QAExDjB,EAAmBE,IAmFnBiB,aAhFF,SAAsBC,GACpB,IAAIiB,EAAMtB,EAAOK,EAAKC,aAAaN,KAAKW,WACxC,GAAIX,EAAK8G,MAAM,8BACbxF,EAAO,CACLT,KAAM,mBACNE,QAAS,qBAAuBV,EAAKc,QAAQzB,gBAG/C,IACE4B,GAAO,IAAII,EAAIumB,IAAIC,QAASxnB,MAAMV,GAClC,MAAOQ,GACPc,EAAO,CACLT,KAAMR,EAAKC,aAAaU,WACxBD,QAASV,EAAKC,aAAaW,eAK7BK,EAAK+M,YAAchO,EAAKgO,YAAWhO,EAAKgO,UAAY/M,EAAK+M,WACzD/M,EAAK6mB,SAAQ7mB,EAAOA,EAAK6mB,QACzB7mB,EAAK/C,QAAO+C,EAAOA,EAAK/C,OACxB+C,EAAKT,KACPR,EAAK/B,MAAQhB,EAAKgB,MAAM,IAAIC,MAAS,CACnCC,KAAM8C,EAAKT,KACXpC,QAAS6C,EAAKP,UAGhBV,EAAK/B,MAAQhB,EAAKgB,MAAM,IAAIC,MAAS,CACnCC,KAAM6B,EAAKC,aAAaU,WACxBvC,QAAS,QAoDbyC,YA/CF,SAAqBb,GACnB,IAAIlB,EAAMkB,EAAKc,QAEXI,EADYpC,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WACzB8B,QAAU,GAC5BknD,EAAYnnD,EAEhB,GAAImnD,EAAU7Q,cAAe,CAC3B,IAAI8Q,EAAMv0C,EAAM0B,OAAO,CAACzX,KAAM,cAC9BsqD,EAAIv7C,QAAQs7C,EAAU7Q,eAAiBt2C,EACvConD,EAAIjR,YAAc,CAACgR,EAAU7Q,eAC7Bv6C,EAAKmP,SAASlL,EAAO,OAAQA,EAAMs2C,eACnCt2C,EAAQonD,EAGV,IAAIlnD,EAAS,IAAIC,EAAIumB,IAAIC,OAGzB,GAAI3mB,GAASA,EAAM6L,UAAY7L,EAAM6L,QAAQw7C,eAAgB,CAC3D,IAAIC,EAAiBz0C,EAAM0B,OACzB,CAAEzX,KAAM,UACR,CAAEgB,IAAK,CAAEopB,SAAU,UACnB,aAEFlnB,EAAM6L,QAAQw7C,eAAiBC,EAGjC,IAAIvnD,EAAOG,EAAOf,MAAML,EAAKC,aAAaN,KAAKW,WAAYY,GAC3DlB,EAAKgO,UAAY/M,EAAKsnD,gBAAkBtnD,EAAK+M,UAEzC/M,EAAKsnD,uBAAuBtnD,EAAKsnD,eAEjCF,EAAU7Q,eACRv2C,EAAKonD,EAAU7Q,iBACjBv6C,EAAK2L,OAAO3H,EAAMA,EAAKonD,EAAU7Q,uBAC1Bv2C,EAAKonD,EAAU7Q,gBAI1Bx3C,EAAKiB,KAAOA,K,4qCCnGd,EAAQ,QACR,IAAII,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAkB,QAAI,GAChCpS,EAAI6gB,QAAU3O,EAAQI,cAAc,UAAW,CAAC,eAChDnQ,OAAO8H,eAAekI,EAAUC,SAAkB,QAAG,aAAc,CACjElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA8CC,WAClEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI6gB,S,mnNCjBrB,EAAQ,QACR,IAAI7gB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAmB,SAAI,GACjCpS,EAAI2gB,SAAWzO,EAAQI,cAAc,WAAY,CAAC,eAClDnQ,OAAO8H,eAAekI,EAAUC,SAAmB,SAAG,aAAc,CAClElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA+CC,WACnEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI2gB,U,211UCjBrB,IAAI3gB,EAAM,EAAQ,QACd0B,EAAM1B,EAAIpE,KAAK8F,IACfkF,EAAS5G,EAAIpE,KAAKgL,OAAOS,IACzB+/C,EAAepnD,EAAIpE,KAAKmH,OAAOC,OAC/BhH,EAAUgE,EAAIpE,KAAKI,QAEnBqrD,EAAc,SAAUzmD,GACxB,IAAI0mD,EAAe,CACf,IAAK,IACL,IAAK,IACL,IAAK,KAET,OAAO1mD,EAAOE,QAAQ,YAAY,SAAUsE,GACxC,OAAOkiD,EAAaliD,OAIxBmiD,EAAa,SAAUC,EAAQC,GAC/B,IAAI7sC,EAAOhU,EAAO8gD,WAAW,YAE7B,OADA9sC,EAAK8lC,MAAM8G,GACJH,EAAYzsC,EAAKA,KAAK6sC,EAAY,YAGzCE,EAAuB,SAAUjmD,EAAKwY,EAAS0tC,EAAWH,GAC1D,IAAID,EAASzoD,KAAK0jB,UAAU,CACxBolC,UAAW,CACP,CACIC,SAAUpmD,EACVqmD,UAAW,CAAEC,aAAc,CAAE,gBAAiB9tC,QAK1D,MAAO,CACHse,QAASte,EACT,cAAe0tC,EACfnxC,UAAW8wC,EAAWC,EAAOvoD,WAAYwoD,KAI7CQ,EAAuB,SAAUT,EAAQI,EAAWH,GAGpD,OAFAD,EAASA,EAAO1mD,QAAQ,OAAQ,IAEzB,CACH44B,OAAQ2tB,EAAYD,EAAaI,IACjC,cAAeI,EACfnxC,UAAW8wC,EAAWC,EAAQC,KAIlCS,EAAkB,SAAUxmD,GAC5B,IAAIN,EAAQM,EAAI7C,MAAM,OACtB,GAAIuC,EAAMpE,OAAS,EACf,MAAM,IAAIH,MAAM,gBAGpB,OAAOuE,EAAM,GAAGN,QAAQ,IAAK,KAG7BqnD,EAAa,SAAUC,GACvB,IAAIC,EAAS3mD,EAAI1C,MAAMopD,GACvB,OAAOC,EAAOvlD,KAAKhC,QAAQ,MAAO,KAAOunD,EAAO5gD,MAAQ,KAgBxD6gD,EAAc,SAAU9iD,EAAKD,GAC7B,IAAKA,GAAgC,mBAAbA,EACpB,MAAMC,EAGVD,EAASC,IAGT+iD,EAAgB,SAAU/lD,EAAQ+C,GAClC,IAAKA,GAAgC,mBAAbA,EACpB,OAAO/C,EAGX+C,EAAS,KAAM/C,IAGnBxC,EAAIwd,WAAW6jC,OAASrlD,EAAQ,CAW5BC,YAAa,SAAgB2rD,EAAWH,GACpC,QAAkB,IAAdG,QAAuC,IAAfH,EACxB,MAAM,IAAI5qD,MAAM,8CAGpBT,KAAKwrD,UAAYA,EACjBxrD,KAAKqrD,WAAaA,GAwBtBe,gBAAiB,SAAUrsD,EAASqS,GAChC,IAAIi6C,EAAgB,WAAYtsD,EAC1B8rD,EAAqB9rD,EAAQqrD,OAAQprD,KAAKwrD,UAAWxrD,KAAKqrD,YAC1DE,EAAqBxrD,EAAQuF,IAAKvF,EAAQ+d,QAAS9d,KAAKwrD,UAAWxrD,KAAKqrD,YAE1EiB,EAAa,GACjB,IAAK,IAAIvhD,KAAOshD,EACRtmD,OAAOyD,UAAUmD,eAAelD,KAAK4iD,EAAethD,KACpDuhD,EAAW,cAAgBvhD,GAAOshD,EAActhD,IAIxD,OAAOohD,EAAcG,EAAYl6C,IA6BrC+pB,aAAc,SAAUp8B,EAASqS,GAC7B,IACI,IAAI0C,EAjHE,SAAUxP,GACxB,OAAQwmD,EAAgBxmD,IACpB,IAAK,OACL,IAAK,QACD,OAAOA,EACX,IAAK,OACD,OAAOymD,EAAWzmD,GACtB,QACI,MAAM,IAAI7E,MAAM,mEAyGD8rD,CAAYxsD,EAAQuF,KACrC,MAAO8D,GACL,OAAO8iD,EAAY9iD,EAAKgJ,GAG5B,IAAI+L,EAAY7Y,EAAI1C,MAAM7C,EAAQuF,KAAK,GACnC+mD,EAAgBtmD,OAAOyD,UAAUmD,eAAelD,KAAK1J,EAAS,UACxD8rD,EAAqB9rD,EAAQqrD,OAAQprD,KAAKwrD,UAAWxrD,KAAKqrD,YAC1DE,EAAqBz2C,EAAU/U,EAAQ+d,QAAS9d,KAAKwrD,UAAWxrD,KAAKqrD,YAG/E,IAAK,IAAItgD,KADToT,EAAUE,OAAS,KACHguC,EACRtmD,OAAOyD,UAAUmD,eAAelD,KAAK4iD,EAAethD,KACpDoT,EAAUwQ,MAAM5jB,GAAOshD,EAActhD,IAI7C,IACI,IAAIyhD,EAA6C,SAAjCV,EAAgB/rD,EAAQuF,KAC9BymD,EAAWzmD,EAAIE,OAAO2Y,IACtB7Y,EAAIE,OAAO2Y,GACvB,MAAO/U,GACL,OAAO8iD,EAAY9iD,EAAKgJ,GAG5B,OAAO+5C,EAAcK,EAAWp6C,MAOxCrR,EAAOC,QAAU4C,EAAIwd,WAAW6jC,Q,+iyFCjNhC,EAAQ,QACR,IAAIrhD,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAA2B,iBAAI,GACzCpS,EAAI4d,iBAAmB1L,EAAQI,cAAc,mBAAoB,CAAC,cAAe,eACjFnQ,OAAO8H,eAAekI,EAAUC,SAA2B,iBAAG,aAAc,CAC1ElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA6CC,WACjEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI4d,kB,qBCjBrB,EAAQ,QACR,IAAI5d,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAIqf,IAAMnN,EAAQI,cAAc,MAAO,CAAC,eACxCnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA0CC,WAC9DF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIqf,K,qBCjBrB,EAAQ,QACR,IAAIrf,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAuB,aAAI,GACrCpS,EAAImhB,aAAejP,EAAQI,cAAc,eAAgB,CAAC,eAC1DnQ,OAAO8H,eAAekI,EAAUC,SAAuB,aAAG,aAAc,CACtElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAmDC,WACvEF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAImhB,c,qBCjBrB,IAAIzO,EAAQ,EAAQ,QAEhB9W,EAAO,EAAQ,QACfmP,EAAWnP,EAAKmP,SAChBI,EAAmBvP,EAAKuP,iBA4G5BhO,EAAOC,QA1GP,SAAmBa,EAAMD,EAAW7B,GAClC,IAAIsR,EAAOrR,KACXD,EAAUA,GAAW,GAErB4O,EAAS3O,KAAM,OAAQ4B,EAAUC,MAAQA,GACzC8M,EAAS3O,KAAM,MAAOD,EAAQwB,KAAK,GAEnCK,EAAUyQ,KAAOzQ,EAAUyQ,MAAQ,GACnC1D,EAAS3O,KAAM,WAAY4B,EAAU8Y,UACrC/L,EAAS3O,KAAM,aAAc4B,EAAUyQ,KAAKoI,QAAU,QACtD9L,EAAS3O,KAAM,WAAY4B,EAAUyQ,KAAKo6C,YAAc,KACxD99C,EAAS3O,KAAM,WAAY4B,EAAUoyC,UAAY,IACjDrlC,EACE3O,KACA,4BACA4B,EAAU8qD,kBACP9qD,EAAU8qD,kBAAkB35B,SAAW,WAAa,WACvD,QAGFhkB,EAAiB/O,KAAM,SAAS,WAC9B,OAAK4B,EAAUI,MAGRsU,EAAM0B,OAAOpW,EAAUI,MAAOjC,GAF5B,IAAIuW,EAAM0B,OAAO,CAACzX,KAAM,aAAcR,MAKjDgP,EAAiB/O,KAAM,UAAU,WAC/B,OAAK4B,EAAU8B,OAGR4S,EAAM0B,OAAOpW,EAAU8B,OAAQ3D,GAF7B,IAAIuW,EAAM0B,OAAO,CAACzX,KAAM,aAAcR,MAKjDgP,EAAiB/O,KAAM,UAAU,WAC/B,IAAIF,EAAO,GACX,IAAK8B,EAAU4wB,OAAQ,OAAO,KAE9B,IAAK,IAAI3xB,EAAI,EAAGA,EAAIe,EAAU4wB,OAAO5xB,OAAQC,IAC3Cf,EAAKqF,KAAKmR,EAAM0B,OAAOpW,EAAU4wB,OAAO3xB,GAAId,IAG9C,OAAOD,KAGTiP,EAAiB/O,KAAM,aAAa,WAClC,OAAOD,EAAQwB,IAAI6U,WAAWvU,MAG5B9B,EAAQo5C,gBACVxqC,EAAS3O,KAAM,gBAAiB4B,EAAUu3C,eAC1CxqC,EAAS3O,KAAM,mBAAoB4B,EAAUw3C,mBAI/CrqC,EAAiB/O,KAAM,qBAAqB,WAC1C,IAAI8iD,EAAoB,GACpB9gD,EAAQqP,EAAKrP,MACbsN,EAAUtN,EAAMsN,QACpB,IAAKtN,EAAMsN,QACT,OAAOwzC,EAET,IAAK,IAAIjhD,KAAQyN,EACVA,EAAQ3C,eAAe9K,KAGO,IAA/ByN,EAAQzN,GAAM8qD,cAChB7J,EAAkB39C,KAAKtD,GAG3B,OAAOihD,KAGT/zC,EAAiB/O,KAAM,kBAAkB,WAEvC,OAIJ,SAAwB4sD,GACtB,IAAIt9C,EAAUs9C,EAAct9C,QACxBH,EAAUy9C,EAAcz9C,QAE5B,IAAKy9C,EAAct9C,QACjB,OAAO,EAGT,GAAIH,EAAS,CAEX,OADoBG,EAAQH,GACPq4B,cAIvB,IAAK,IAAI3lC,KAAQyN,EACf,IAAKA,EAAQ3C,eAAe9K,KACU,IAAhCyN,EAAQzN,GAAM2lC,cAChB,OAAO,EAIb,OAAO,EAzBEqlB,CADMx7C,EAAK3N,a,qmrFChFtB3C,EAAOC,QAAU,CAEfya,IAAK,WACH,MAA2B,oBAAhBqxC,aAA0D,mBAApBA,YAAYrxC,IACpDqxC,YAAYrxC,MAEd1R,KAAK0R,S,oYCNhB,EAAQ,QACR,IAAI7X,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAImf,IAAMjN,EAAQI,cAAc,MAAO,CAAC,eACxCnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA0CC,WAC9DF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAImf,K,qBCjBrB,EAAQ,QACR,IAAInf,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAiC,uBAAI,GAC/CpS,EAAIqd,uBAAyBnL,EAAQI,cAAc,yBAA0B,CAAC,eAC9EnQ,OAAO8H,eAAekI,EAAUC,SAAiC,uBAAG,aAAc,CAChFlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA8DC,WAClFF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIqd,wB,qBCjBrB,IAAIzhB,EAAO,EAAQ,QACfuwC,EAAe,EAAQ,QA2B3B,SAASgd,EAAYvrD,EAAS8B,GAC5B9D,EAAKiN,KAAKnJ,GAAQ,SAASyH,EAAK7E,GAClB,mBAAR6E,SACwBvD,IAAxBhG,EAAQ8B,OAAOyH,IAA8C,OAAxBvJ,EAAQ8B,OAAOyH,KACtDvJ,EAAQ8B,OAAOyH,GAAO7E,OA+D5BnF,EAAOC,QAAU,CACfovC,kBA3DF,SAA2B5uC,GAEzB,IADA,IAAIwE,EA3BN,SAAqBxE,GACnB,IAAIoT,EAASpT,EAAQ8B,OAAOsR,OACxBo4C,EAVN,SAA8Bp4C,GAC5B,IAAKA,EAAQ,OAAO,KAEpB,IAAI5P,EAAQ4P,EAAOnS,MAAM,KACzB,OAAIuC,EAAMpE,OAAS,EAAU,KACtBoE,EAAMgD,MAAM,EAAGhD,EAAMpE,OAAS,GAAGwE,KAAK,KAAO,KAKjC6nD,CAAqBr4C,GACpCm9B,EAAiBvwC,EAAQD,IAAIwwC,eAEjC,MAAO,CACL,CAACn9B,EAAQm9B,GACT,CAACib,EAAcjb,GACf,CAACn9B,EAAQ,KACT,CAACo4C,EAAc,KACf,CAAC,IAAKjb,GACN,CAAC,IAAK,MACNlpC,KAAI,SAASrC,GACb,OAAOA,EAAK,IAAMA,EAAK,GAAKA,EAAKpB,KAAK,KAAO,QAcpC8nD,CAAY1rD,GACdX,EAAI,EAAGA,EAAImF,EAAKpF,OAAQC,IAAK,CACpC,IAAIkK,EAAM/E,EAAKnF,GACf,GAAKkK,GAEDhF,OAAOyD,UAAUmD,eAAelD,KAAKsmC,EAAa18B,MAAOtI,GAAM,CACjE,IAAIzH,EAASysC,EAAa18B,MAAMtI,GAyBhC,MAxBsB,iBAAXzH,IACTA,EAASysC,EAAaod,SAAS7pD,IAI7B9B,EAAQ8B,OAAO40B,cAAgB14B,EAAKgS,qBAAqBhQ,MAC3D8B,EAAS9D,EAAK2I,KAAK7E,IACZoX,SAAWpX,EAAOoX,SAAShW,QAChC,2BACA,kCAKJlD,EAAQ6pC,mBAAqB/nC,EAAOw6B,eAChCx6B,EAAOgoC,gBACT9pC,EAAQ8pC,cAAgBhoC,EAAOgoC,eAI5BhoC,EAAO6kB,mBAAkB7kB,EAAO6kB,iBAAmB,WAGxD4kC,EAAYvrD,EAAS8B,MA6BzBq1B,kBAvBF,SAA2B/jB,GAUzB,IATA,IAAIw4C,EAAgB,CAClB,sCAAuC,gBACvC,qBAAsB,mBACtB,2BAA4B,gBAC5B,2BAA4B,aAC5B,4BAA6B,iBAG3BC,EAAUtnD,OAAOC,KAAKonD,GACjBvsD,EAAI,EAAGA,EAAIwsD,EAAQzsD,OAAQC,IAAK,CACvC,IAAIysD,EAAgBpmC,OAAOmmC,EAAQxsD,IAC/B63B,EAAY00B,EAAcC,EAAQxsD,IACtC,GAAIysD,EAAcz5B,KAAKjf,GAAS,OAAO8jB,EAEzC,MAPoB,mB,qBClFtB,IAAI90B,EAAM,EAAQ,QACdm9B,EAAa,EAAQ,QACrBphC,EAAc,EAAQ,QAsC1BiE,EAAIic,SAAS0tC,eAAiB3pD,EAAIpE,KAAKI,QAAQ,CAoB7CC,YAAa,SAAwBE,GACxBC,KACND,QAAUA,GAAW,GADfC,KAEN69C,UAFM79C,KAESD,UAMtB89C,UAAW,SAAmB99C,GACjBC,KACNwB,QAAUzB,EAAQyB,QADZxB,KAEN6hC,kBAAkB9hC,GAFZC,KAGNghC,UAAYjhC,EAAQihC,UAHdhhC,KAIJwB,QAAQD,IAAII,WAAW6rD,QAAQxrD,MAAMsN,QAAQm+C,KAAKvnD,MAAMzC,OAMjEo+B,kBAAmB,SAA2B9hC,GAI5C,GAFAA,EAAUA,GAAW,GADVC,KAGDwB,QAEH,CACL,IAAI8B,EAASM,EAAIpE,KAAK2I,KANbnI,KAMuBwB,QAAQ8B,QAN/BtD,KAOJwB,QAAU,IAPNxB,KAOewB,QAAQ3B,YAAYyO,UAAUhL,GAP7CtD,KAQJwB,QAAQ8B,OAAOlB,OAClBwB,EAAIpE,KAAKyN,MATFjN,KASawB,QAAQ8B,OAAOlB,QAAU,GAAIrC,EAAQqC,aATlDpC,KAIJwB,QAAU,IAAIoC,EAAIic,SAAS9f,IAYpC2tD,mBAAoB,SAAS9rD,EAAWQ,EAAQ+G,GAC9C,IACI9F,EADOrD,KACQwB,QAAQI,GAAWQ,GAMtC,OAPWpC,KAEN2tD,aAAatqD,GAFPrD,KAGN4tD,cAAcvqD,GACK,mBAAb8F,GACT9F,EAAQ8oB,KAAKhjB,GAER9F,GAMTwqD,2BAA4B,CAC1BC,SAAU,eACVC,WAAY,iBACZC,OAAQ,aACRl/C,IAAK,UACLsM,IAAK,UACLuT,MAAO,QACPs/B,KAAM,OACN9iD,OAAQ,aACR+iD,YAAa,mBACbC,cAAe,sBAsCjBL,SAAU,SAAS1rD,EAAQ+G,GACzB,IAAIvH,EAAY5B,KAAK6tD,2BAAqC,SAC1D,OAAO7tD,KAAK0tD,mBAAmB9rD,EAAWQ,EAAQ+G,IA2CpD4kD,WAAY,SAAS3rD,EAAQ+G,GAC3B,IAAIvH,EAAY5B,KAAK6tD,2BAAuC,WAC5D,OAAO7tD,KAAK0tD,mBAAmB9rD,EAAWQ,EAAQ+G,IA4BpD6kD,OAAQ,SAAS5rD,EAAQ+G,GACvB,IAAIvH,EAAY5B,KAAK6tD,2BAAmC,OACxD,OAAO7tD,KAAK0tD,mBAAmB9rD,EAAWQ,EAAQ+G,IA2BpD2F,IAAK,SAAS1M,EAAQ+G,GACpB,IAAIvH,EAAY5B,KAAK6tD,2BAAgC,IACrD,OAAO7tD,KAAK0tD,mBAAmB9rD,EAAWQ,EAAQ+G,IAgCpDiS,IAAK,SAAShZ,EAAQ+G,GACpB,IAAIvH,EAAY5B,KAAK6tD,2BAAgC,IACrD,OAAO7tD,KAAK0tD,mBAAmB9rD,EAAWQ,EAAQ+G,IAiCpDgC,OAAQ,SAAS/I,EAAQ+G,GACvB,IAAIvH,EAAY5B,KAAK6tD,2BAAmC,OACxD,OAAO7tD,KAAK0tD,mBAAmB9rD,EAAWQ,EAAQ+G,IA0BpD8kD,KAAM,SAAS7rD,EAAQ+G,GACrB,IAAIvH,EAAY5B,KAAK6tD,2BAAiC,KACtD,OAAO7tD,KAAK0tD,mBAAmB9rD,EAAWQ,EAAQ+G,IA6BpDwlB,MAAO,SAASvsB,EAAQ+G,GACtB,IAAIvH,EAAY5B,KAAK6tD,2BAAkC,MACvD,OAAO7tD,KAAK0tD,mBAAmB9rD,EAAWQ,EAAQ+G,IA6CpDglD,cAAe,SAAS/rD,EAAQ+G,GAC9B,IAAIvH,EAAY5B,KAAK6tD,2BAA0C,cAC/D,OAAO7tD,KAAK0tD,mBAAmB9rD,EAAWQ,EAAQ+G,IAmCpD+kD,YAAa,SAAS9rD,EAAQ+G,GAC5B,IAAIvH,EAAY5B,KAAK6tD,2BAAwC,YAC7D,OAAO7tD,KAAK0tD,mBAAmB9rD,EAAWQ,EAAQ+G,IA8BpDilD,UAAW,SAAStuD,EAAMC,GAExB,OAAO,IAAIJ,EAAYG,EADvBC,EAAUA,GAAW,KAOvBsuD,cAAe,WACb,OAAO,IAAIttB,EAAW/gC,KAAKD,UAM7B4tD,aAAc,SAAsBtqD,GAClC,IACIirD,EADOtuD,KACWquD,gBAClBzsD,EAAYyB,EAAQzB,UACpBw9B,EAAa/7B,EAAQ7B,QAAQD,IAAII,WAAWC,GAAWI,MAC3DqB,EAAQqkC,QAAQvnC,SAASwlC,SAAQ,SAAStkC,GACxCA,EAAIktD,UAAY3qD,EAAIpE,KAAK2I,KAAK9G,EAAIe,QAClCf,EAAIe,OAASksD,EAAWrtB,eAAe5/B,EAAIktD,UAAWnvB,OAO1DwuB,cAAe,SAAuBvqD,GACpC,IAAIgO,EAAOrR,KACPsuD,EAAaj9C,EAAKg9C,gBAClBG,EAAcn9C,EAAK7P,QAAQD,IAAII,WAAW0B,EAAQzB,WAAW8B,OACjEL,EAAQuI,GAAG,eAAe,SAASoT,GACjCA,EAASxb,KAAO8qD,EAAWntB,gBAAgBniB,EAASxb,KAAMgrD,MAG7CnrD,EAAQ2b,SACd2kB,SAAW,SAASvxB,GAC3B,IAEI9O,EADAjC,EADOrB,KACIqD,QAEX7B,EAAUH,EAAIG,QACdI,EAAYP,EAAIO,UACpB,IACE0B,EAAS9B,EAAQoiC,iBAAiBhiC,GAAW,GAC7C,MAAOc,GAPE1C,KAOQQ,MAAQkC,EAE3B,IATW1C,KASD6jC,cAAe,CACvB,GAAIzxB,EAAIA,EAVCpS,KAUOQ,MAAO,WAClB,GAXIR,KAWKQ,MAAO,MAXZR,KAWuBQ,MAChC,OAAO,KAGT,IAAI4B,EAASwB,EAAIpE,KAAK2I,KAAK9G,EAAIktD,WAC/B,GAhBWvuD,KAgBD8jC,eAEH,CACL,IAAIC,EAAczgC,EAAO0gC,WACE,iBAAhBD,IAA0BA,EAAc,CAACA,IACpD,IAAK,IAAIljC,EAAI,EAAGA,EAAIkjC,EAAYnjC,OAAQC,IACtCuB,EAAO2hC,EAAYljC,IAtBZb,KAsBuB8jC,eAAejjC,GAE/C,OAAOwQ,EAAKzP,GAAWQ,EAAQgQ,GAP/B,OAAOA,EAAKA,EAAG,KAAM,MAAQ,SAiBrCrR,EAAOC,QAAU4C,EAAIic,SAAS0tC,gB,iFCpkB9B,IAAI/tD,EAAO,EAAQ,QAAWA,KAkB9B,SAASivD,EAASjrD,GAChB,IAAI8wB,EAAQ,CACV,SAAU,OAAQ,OAAQ,cAAe,WACzC,YAAa,aAAc,oBAC3B,aAAc,cAAe,aAAc,cAC3C,eAAgB,gBAElB,GAAI90B,EAAKkQ,SAAU,CACjB,IAAIC,EAASnQ,EAAKoI,OAAO+H,OACzB,GAAInQ,EAAKyH,OAAOS,SAASlE,IAASA,aAAgBmM,EAChD,OAAO,EAIX,IAAK,IAAI9O,EAAI,EAAGA,EAAIyzB,EAAM1zB,OAAQC,IAChC,QAAa2G,IAAThE,GAAsBA,EAAK3D,YAAa,CAC1C,GAAIL,EAAKgO,OAAOhK,EAAM8wB,EAAMzzB,IAAK,OAAO,EACxC,GAAIrB,EAAKiO,SAASjK,EAAK3D,eAAiBy0B,EAAMzzB,GAAI,OAAO,EAI7D,OAAO,EAMTE,EAAOC,QAAU,CACfvB,OA5CF,SAAgB+D,GACd,OAAa,OAATA,GAAiC,iBAATA,EACnB,YACWgE,IAAThE,GAAsBirD,EAASjrD,GACjC,cACWgE,IAAThE,GAAsBA,EAAK3D,YAC7B2D,EAAKvD,aAAeT,EAAKiO,SAASjK,EAAK3D,kBAC5B2H,IAAThE,GAAsC,iBAATA,EAG/B,SAEA,aAiCTirD,SAAUA,I,8+BC/CZ,EAAQ,QACR,IAAI7qD,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAIwe,IAAMtM,EAAQI,cAAc,MAAO,CAAC,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,eAC5N,EAAQ,QACRnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA0CC,WACrEF,EAAMuD,QAAU,EAAQ,QAAwCA,QACzDvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIwe,K,ynfCnBrB,IAAIo5B,EAAQ,EAAQ,QAAWA,MAE3B9D,EAAe,EAAQ,QAAmBA,aAiB9C,SAASrsB,EAAahpB,GAGlB,IAFA,IAAI0J,EAAM,GACNi8B,EAAW,EACRA,EAAW3lC,EAAQzB,QAAQ,CAC9B,IAAI8tD,EAAarsD,EAAQwI,UAAUm9B,KAC/BnmC,EAAOQ,EAAQ2F,MAAMggC,EAAUA,EAAW0mB,GAAY7rD,WAE1D,OADAmlC,GAAY0mB,EACJrsD,EAAQwI,UAAUm9B,MACtB,KAAK,EACDj8B,EAAIlK,GAAQ,CACRtB,KAzBF,UA0BE2F,OAAO,GAEX,MACJ,KAAK,EACD6F,EAAIlK,GAAQ,CACRtB,KA/BF,UAgCE2F,OAAO,GAEX,MACJ,KAAK,EACD6F,EAAIlK,GAAQ,CACRtB,KApCL,OAqCK2F,MAAO7D,EAAQssD,SAAS3mB,MAE5B,MACJ,KAAK,EACDj8B,EAAIlK,GAAQ,CACRtB,KAzCJ,QA0CI2F,MAAO7D,EAAQusD,YAAY5mB,IAE/BA,GAAY,EACZ,MACJ,KAAK,EACDj8B,EAAIlK,GAAQ,CACRtB,KA/CN,UAgDM2F,MAAO7D,EAAQwsD,YAAY7mB,IAE/BA,GAAY,EACZ,MACJ,KAAK,EACDj8B,EAAIlK,GAAQ,CACRtB,KArDL,OAsDK2F,MAAO,IAAIs1C,EAAMn5C,EAAQ2F,MAAMggC,EAAUA,EAAW,KAExDA,GAAY,EACZ,MACJ,KAAK,EACD,IAAI8mB,EAAezsD,EAAQ0sD,aAAa/mB,GACxCA,GAAY,EACZj8B,EAAIlK,GAAQ,CACRtB,KA7DH,SA8DG2F,MAAO7D,EAAQ2F,MAAMggC,EAAUA,EAAW8mB,IAE9C9mB,GAAY8mB,EACZ,MACJ,KAAK,EACD,IAAIE,EAAe3sD,EAAQ0sD,aAAa/mB,GACxCA,GAAY,EACZj8B,EAAIlK,GAAQ,CACRtB,KArEH,SAsEG2F,MAAO7D,EAAQ2F,MACXggC,EACAA,EAAWgnB,GACbnsD,YAENmlC,GAAYgnB,EACZ,MACJ,KAAK,EACDjjD,EAAIlK,GAAQ,CACRtB,KA9EA,YA+EA2F,MAAO,IAAI6D,KACP,IAAIyxC,EAAMn5C,EAAQ2F,MAAMggC,EAAUA,EAAW,IACxCxK,YAGbwK,GAAY,EACZ,MACJ,KAAK,EACD,IAAIinB,EAAY5sD,EAAQ2F,MAAMggC,EAAUA,EAAW,IAC9CnlC,SAAS,OACdmlC,GAAY,GACZj8B,EAAIlK,GAAQ,CACRtB,KA1FL,OA2FK2F,MAAO+oD,EAAUzmD,OAAO,EAAG,GAAK,IAC5BymD,EAAUzmD,OAAO,EAAG,GAAK,IACzBymD,EAAUzmD,OAAO,GAAI,GAAK,IAC1BymD,EAAUzmD,OAAO,GAAI,GAAK,IAC1BymD,EAAUzmD,OAAO,KAEzB,MACJ,QACI,MAAM,IAAI/H,MAAM,iCAG5B,OAAOsL,EAWXhL,EAAOC,QAAU,CACbylC,aATJ,SAAsB9lC,GAClB,IAAIsrD,EAASvU,EAAa/2C,GAC1B,MAAO,CAAE0B,QAASgpB,EAAa4gC,EAAO5pD,SAAUH,KAAM+pD,EAAO/pD,S,sxlCCvHjE,EAAQ,QACR,IAAI0B,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAA4B,kBAAI,GAC1CpS,EAAIgf,kBAAoB9M,EAAQI,cAAc,oBAAqB,CAAC,eACpEnQ,OAAO8H,eAAekI,EAAUC,SAA4B,kBAAG,aAAc,CAC3ElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAwDC,WACnFF,EAAMuD,QAAU,EAAQ,QAAsDA,QACvEvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIgf,mB,qBClBrB,EAAQ,QACR,IAAIhf,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAIse,IAAMpM,EAAQI,cAAc,MAAO,CAAC,eACxCnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA0CC,WAC9DF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIse,K,qBCjBrB,IAAIgtC,EAAO,EAAQ,QACfxH,EAAM,EAAQ,QACdnB,EAAO,EAAQ,QACfyC,EAAS,EAAQ,QAKrBjoD,EAAOC,QAAoB,CACvBwK,WAAY,SAAoB2jD,GAE9B,GAAY,SADZA,EAAMA,EAAIzmD,eAER,OAAO,IAAIg/C,EACN,GAAY,WAARyH,EACT,OAAO,IAAInG,EACN,GAAY,SAARmG,EACT,OAAO,IAAI5I,EAGb,MAAM,IAAI9lD,MAAM,kBAAoB0uD,EAAM,yCAE5CjkD,WAAY,SAAoBikD,EAAKpkD,GAEnC,GAAY,SADZokD,EAAMA,EAAIzmD,eAER,OAAO,IAAIwmD,EAAKxH,EAAK38C,GAChB,GAAY,WAARokD,EACT,OAAO,IAAID,EAAKlG,EAAQj+C,GACnB,GAAY,SAARokD,EACT,OAAO,IAAID,EAAK3I,EAAMx7C,GAGxB,MAAM,IAAItK,MAAM,kBAAoB0uD,EAAM,yCAE5C7D,WAAY,WACV,MAAM,IAAI7qD,MAAM,mD,qiNClCtB,EAAQ,QACR,IAAImD,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAuC,6BAAI,GACrDpS,EAAIwf,6BAA+BtN,EAAQI,cAAc,+BAAgC,CAAC,eAC1FnQ,OAAO8H,eAAekI,EAAUC,SAAuC,6BAAG,aAAc,CACtFlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAAmEC,WACvFF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIwf,8B,qBCjBrB,IAAIxf,EAAM,EAAQ,QAClB,EAAQ,QAIP,IAAIwrD,EAAwB,CAAC,iBAAkB,8BAA+B,kBAAmB,yBAEjGxrD,EAAIpE,KAAK2L,OAAOvH,EAAI6f,IAAIja,UAAW,CAIjC6T,sBAAuB,SAA+Bha,GACpD,IAA0D,IAAtD+rD,EAAsB56C,QAAQnR,EAAQzB,YACtCyB,EAAQjB,OAAO4nB,aAEjB,GADA3mB,EAAQjB,OAASwB,EAAIpE,KAAK2I,KAAK9E,EAAQjB,QACnCiB,EAAQjB,OAAOitD,cACfhsD,EAAQjB,OAAO4nB,eAAiBhqB,KAAKsD,OAAOsR,cACvCvR,EAAQjB,OAAO4nB,iBACjB,CACL,IAAIslC,IAAwBtvD,KAAKsD,OAAOwiC,gBAEpCwpB,GACFjsD,EAAQqb,eAAe,WAAY9a,EAAI+a,eAAeC,KAAKmgB,qBAE7D17B,EAAQsmB,QAAQ,WAAY3pB,KAAKuvD,8BAC7BD,GACFjsD,EAAQia,YAAY,WAAY1Z,EAAI+a,eAAeC,KAAKmgB,uBAShEwwB,6BAA8B,SAAsCluD,EAAKoO,GACvE,IAAInM,EAASM,EAAIpE,KAAK2I,KAAK9G,EAAIG,QAAQ8B,QACvCA,EAAOsR,OAASvT,EAAIe,OAAO4nB,oBACpB3oB,EAAIe,OAAO4nB,oBACX1mB,EAAOoX,gBAEPpX,EAAOlB,OACdkB,EAAO6kB,iBAAmB,KAC1B,IAAIqnC,EAAoBnuD,EAAIG,QAAQ8B,OAAOsR,OAGvCqV,EADM,IAAI5oB,EAAIG,QAAQ3B,YAAYyD,GACrBjC,EAAIO,WAAWgC,EAAIpE,KAAK2I,KAAK9G,EAAIe,SAClD6nB,EAAOre,GAAG,SAAS,SAAmCvI,GACpD,IAAI/B,EAAc+B,EAAQ/B,YAC1BA,EAAYc,OAAO2nB,kBAAoBylC,EACvCluD,EAAYY,KAAO0B,EAAIpE,KAAKoG,oBAAoBtE,EAAYc,WAE9D6nB,EAAOC,SAAQ,SAAS9gB,EAAK9D,GACvB8D,EAAKqG,EAAKrG,IAEZ/H,EAAIe,OAAOitD,aAAe/pD,EAC1BmK,Y,6tkBCxDT,IAAIyoC,EAAa,EAAQ,QACrBvoB,EAAY,EAAQ,QACpBrZ,EAAQ,EAAQ,QAChBsZ,EAAY,EAAQ,QACpBC,EAAiB,EAAQ,QACzBpe,EAAW,EAAQ,QAEnBjS,EAAO,EAAQ,QACfmP,EAAWnP,EAAKmP,SAChBI,EAAmBvP,EAAKuP,iBA8E5BhO,EAAOC,QA5EP,SAAaO,EAAKxB,GAChB,IAAIsR,EAAOrR,KACXuB,EAAMA,GAAO,IACbxB,EAAUA,GAAW,IACbwB,IAAMvB,KAEduB,EAAIkQ,SAAWlQ,EAAIkQ,UAAY,GAE/B,IAAIC,EAAoB3R,EAAQ2R,yBACzB3R,EAAQ2R,kBAEf/C,EAAS3O,KAAM,SAAS,GAAM,GAC9B2O,EAAS3O,KAAM,aAAcuB,EAAIkQ,SAAS+tB,YAC1C7wB,EAAS3O,KAAM,iBAAkBuB,EAAIkQ,SAASsgC,gBAC9CpjC,EAAS3O,KAAM,cAAeuB,EAAIkQ,SAASsiC,aAC3CplC,EAAS3O,KAAM,iBAAkBuB,EAAIkQ,SAASqsB,gBAC9CnvB,EAAS3O,KAAM,mBAAoBuB,EAAIkQ,SAAS0W,kBAChDxZ,EAAS3O,KAAM,cAAeuB,EAAIkQ,SAAS1P,aAC3C4M,EAAS3O,KAAM,eAAgBuB,EAAIkQ,SAAS/P,cAC5CiN,EAAS3O,KAAM,WAAYuB,EAAIkQ,SAASkZ,UACxChc,EAAS3O,KAAM,kBAAmBuB,EAAIkQ,SAASunC,iBAC/CrqC,EAAS3O,KAAM,kBAAmBuB,EAAIkQ,SAASuoC,cAC/CrrC,EAAS3O,KAAM,eAAgBuB,EAAIkQ,SAASg+C,qBAC5C9gD,EAAS3O,KAAM,WAAYuB,EAAIkQ,SAASi+C,iBACxC/gD,EAAS3O,KAAM,YAAauB,EAAIkQ,SAAS2sB,WACrC1sB,GAAqBD,EAASC,IAC9B/C,EAAS3O,KAAM,oBAAqByR,EAASC,GAAmB+G,mBAAmB,GAGvF1J,EAAiB/O,KAAM,aAAa,WAClC,IAAI6B,EAAON,EAAIkQ,SAASg+C,qBAAuBluD,EAAIkQ,SAASi+C,gBAC5D,OAAK7tD,GAGQ,0BADbA,EAAOA,EAAK6C,QAAQ,+BAAgC,OACf7C,EAAO,OACrCA,GAJW,QAoBpB8M,EAAS3O,KAAM,aAAc,IAAIk4C,EAAW32C,EAAII,WAAY5B,GAAS,SAAS8B,EAAMD,GAClF,OAAO,IAAI+tB,EAAU9tB,EAAMD,EAAW7B,KACrCP,EAAKgF,OAAOiE,YAff,SAA8B5G,EAAMD,IACE,IAAhCA,EAAU+tD,mBACZhhD,EAAS0C,EAAM,oBAAqB7R,EAAKgF,OAAOiE,WAAW5G,IAEzDD,EAAU8qD,oBAAsBr7C,EAAKovB,8BACvC9xB,EACE0C,EACA,gCACyC,IAAzCzP,EAAU8qD,kBAAkB35B,cASlCpkB,EAAS3O,KAAM,SAAU,IAAIk4C,EAAW32C,EAAI65C,OAAQr7C,GAAS,SAAS8B,EAAM4B,GAC1E,OAAO6S,EAAM0B,OAAOvU,EAAO1D,OAG7B4O,EAAS3O,KAAM,aAAc,IAAIk4C,EAAW32C,EAAI6U,WAAYrW,GAAS,SAAS8B,EAAM8vB,GAClF,OAAO,IAAI/B,EAAU/tB,EAAM8vB,EAAW5xB,OAGxC4O,EAAS3O,KAAM,UAAW,IAAIk4C,EAAW32C,EAAImY,QAAS3Z,GAAS,SAAS8B,EAAMwX,GAC5E,OAAO,IAAIwW,EAAehuB,EAAMwX,EAAQtZ,KACvCP,EAAKgF,OAAOiE,aAEX1I,EAAQo5C,gBACVxqC,EAAS3O,KAAM,gBAAiBuB,EAAI43C,eACpCxqC,EAAS3O,KAAM,mBAAoBuB,EAAI63C,qB,mBCrD3Cr4C,EAAOC,QAAU,CACbysB,oBAvBJ,SAA6B5mB,GAKzB,IAHA,IAAIuuB,EAAW,GACXltB,EAAS,EAENA,EAASrB,EAAOjG,QAAQ,CAC3B,IAAIkmD,EAAcjgD,EAAOgoD,YAAY3mD,GAGjCvH,EAAUkG,EAAOmB,MAAME,EAAQ4+C,EAAc5+C,GAEjDA,GAAU4+C,EAEV1xB,EAASjwB,KAAKxE,GAGlB,OAAOy0B,K,ywlCCrBX,EAAQ,QACR,IAAIxxB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAqB,WAAI,GACnCpS,EAAIge,WAAa9L,EAAQI,cAAc,aAAc,CAAC,eACtDnQ,OAAO8H,eAAekI,EAAUC,SAAqB,WAAG,aAAc,CACpElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAiDC,WAC5EF,EAAMuD,QAAU,EAAQ,QAA+CA,QAChEvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIge,Y,qBClBrB,EAAQ,QACR,IAAIhe,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAIwgB,IAAMtO,EAAQI,cAAc,MAAO,CAAC,eACxC,EAAQ,QACRnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA0CC,WAC9DF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIwgB,K,80xDClBrB,IAAIxgB,EAAM,EAAQ,QAwClBA,EAAIktB,YAAcltB,EAAIpE,KAAKI,QAAQ,CAwBjCC,YAAa,WAOX,GALA+D,EAAIpE,KAAKgP,eAAexO,KAAM,CAAC,oBAE/BA,KAAKixB,SAAU,EACfjxB,KAAKye,WAAa,KAClBze,KAAK4vD,iBAAmB,GACC,IAArBlmD,UAAU9I,QAAwC,iBAAjB8I,UAAU,GAAiB,CAC9D,IAAIu7B,EAAQv7B,UAAU,GAAGkQ,aAAelQ,UAAU,GAClD1J,KAAKka,YAAc+qB,EAAM/qB,YACzBla,KAAKua,gBAAkB0qB,EAAM1qB,gBAC7Bva,KAAKma,aAAe8qB,EAAM9qB,kBAE1Bna,KAAKka,YAAcxQ,UAAU,GAC7B1J,KAAKua,gBAAkB7Q,UAAU,GACjC1J,KAAKma,aAAezQ,UAAU,IAQlCmmD,aAAc,GAOdC,aAAc,WACZ,IAAIC,EAAcnsD,EAAIpE,KAAKoK,KAAKC,UAAUG,UACtCgmD,EAAe,IAAIjmD,KAAKgmD,EAAkC,IAApB/vD,KAAK6vD,cAE/C,SAAI7vD,KAAKye,YAAcuxC,EAAehwD,KAAKye,cAGlCze,KAAKixB,UAAYjxB,KAAKka,cAAgBla,KAAKua,kBAiBtDzL,IAAK,SAAa3F,GAChB,IAAIkI,EAAOrR,KACPA,KAAK8vD,eACP9vD,KAAKoxB,SAAQ,SAAShoB,GACfA,IAAKiI,EAAK4f,SAAU,GACrB9nB,GAAUA,EAASC,MAEhBD,GACTA,KAkEJioB,QAAS,SAAiBjoB,GACxBnJ,KAAKixB,SAAU,EACf9nB,KAOFkoB,gBAAiB,SAAyBloB,EAAU8mD,GAClD,IAAI5+C,EAAOrR,KACkC,IAAzCqR,EAAKu+C,iBAAiBzqD,KAAKgE,IAC7BkI,EAAKigB,MAAK,SAAgBloB,GACxBxF,EAAIpE,KAAKyF,UAAUoM,EAAKu+C,kBAAkB,SAASzmD,GAC7C8mD,EACF9mD,EAASC,GAGTxF,EAAIpE,KAAKyT,OAAM,WACb9J,EAASC,SAIfiI,EAAKu+C,iBAAiBhvD,OAAS,MASrC0wB,KAAM,SAAcnoB,GAClBA,OAOJvF,EAAIktB,YAAY5f,mBAAqB,SAA4BN,GAC/D5Q,KAAKwJ,UAAU0mD,WAAatsD,EAAIpE,KAAK2R,gBAAgB,MAAOP,GAC5D5Q,KAAKwJ,UAAU2mD,eAAiBvsD,EAAIpE,KAAK2R,gBAAgB,UAAWP,IAMtEhN,EAAIktB,YAAY7f,wBAA0B,kBACjCjR,KAAKwJ,UAAU0mD,kBACflwD,KAAKwJ,UAAU2mD,gBAGxBvsD,EAAIpE,KAAKkR,YAAY9M,EAAIktB,c,4lCCrPzB,EAAQ,QACR,IAAIltB,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAIqgB,IAAMnO,EAAQI,cAAc,MAAO,CAAC,eACxC,EAAQ,QACRnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAEpB,OADAA,EAAMC,WAAa,EAAQ,QAA0CC,WAC9DF,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAIqgB,K,mBClBrB,SAASumB,EAAqBiB,EAAQG,GACpC5rC,KAAK46B,aAAegR,GAAS,KAC7B5rC,KAAKyrC,OAASA,GAAU,GAG1BjB,EAAqBhhC,UAAUmiC,MAAQ,SAAeykB,EAAY3gD,EAAM4gD,EAAYC,GACxD,mBAAfF,IACTE,EAAaD,EAAYA,EAAa5gD,EACtCA,EAAO2gD,EAAYA,EAAa,MAGlC,IAAI/+C,EAAOrR,KACP4rC,EAAQv6B,EAAKo6B,OAAOp6B,EAAKupB,cAC7BgR,EAAM3iC,GAAGQ,KAAK4mD,GAAch/C,EAAMi/C,GAAY,SAASlnD,GACrD,GAAIA,EAAK,CACP,IAAIwiC,EAAMjZ,KACL,OAAOljB,EAAOA,EAAKhG,KAAK4mD,EAAYjnD,GAAO,KADhCiI,EAAKupB,aAAegR,EAAMjZ,SAErC,CACL,IAAIiZ,EAAM2kB,OACL,OAAO9gD,EAAOA,EAAKhG,KAAK4mD,GAAc,KADzBh/C,EAAKupB,aAAegR,EAAM2kB,OAG9C,GAAIl/C,EAAKupB,eAAiBw1B,EACxB,OAAO3gD,EAAOA,EAAKhG,KAAK4mD,EAAYjnD,GAAO,KAG7CiI,EAAKs6B,MAAMykB,EAAY3gD,EAAM4gD,EAAYjnD,OAI7CohC,EAAqBhhC,UAAU4hC,SAAW,SAAkBvpC,EAAM2uD,EAAaC,EAAWxnD,GASxF,MAR2B,mBAAhBunD,GACTvnD,EAAKunD,EAAaA,EAAc,KAAMC,EAAY,MACpB,mBAAdA,IAChBxnD,EAAKwnD,EAAWA,EAAY,MAGzBzwD,KAAK46B,eAAc56B,KAAK46B,aAAe/4B,GAC5C7B,KAAKyrC,OAAO5pC,GAAQ,CAAE0uD,OAAQC,EAAa79B,KAAM89B,EAAWxnD,GAAIA,GACzDjJ,MAMTe,EAAOC,QAAUwpC,G,qBC5CjB,IAAIhrC,EAAO,EAAQ,QACf6vB,EAAO,EAAQ,QACfD,EAAO,EAAQ,QACfnuB,EAAc,EAAQ,QACtBC,EAAa,EAAQ,QA8BzB,SAASwvD,EAAuBrvD,EAAKotD,GACnBptD,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WACzBI,MAEtB,IAAKX,EAAIC,YAAYe,QAAQ,gBAAiB,CAC5C,IAAI9B,EAAOkuD,EAAW,sBAAwB,mBAC9CptD,EAAIC,YAAYe,QAAQ,gBAAkB9B,GAsD9CQ,EAAOC,QAAU,CACfI,aAnDF,SAAsBC,GACpBguB,EAAKjuB,aAAaC,GAGd,CAAC,OAAQ,UAAUmT,QAAQnT,EAAIC,YAAYmZ,QAAU,GA1C3D,SAAsBpZ,GACpB,IAAIY,EAAU,IAAIhB,EACde,EAAQX,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAAWI,MAEtD,GAAIA,EAAMmN,QAAS,CACjB,IAAI/M,EACA8kC,EAAellC,EAAMsN,QAAQtN,EAAMmN,SAEvC,QAAe3H,KADfpF,EAASf,EAAIe,OAAOJ,EAAMmN,UACA,OAEA,cAAtB+3B,EAAa3mC,MACfc,EAAIC,YAAYY,KAAOD,EAAQE,MAAMC,EAAQ8kC,GAC7CwpB,EAAuBrvD,KAEvBA,EAAIC,YAAYY,KAAOE,GACG,WAAtB8kC,EAAa3mC,MAAqB2mC,EAAaO,cACjDipB,EAAuBrvD,GAAK,QAG3B,CACL,IAAIa,EAAOD,EAAQE,MAAMd,EAAIe,OAAQJ,GACxB,OAATE,GAA4C,QAA3Bb,EAAIC,YAAYmZ,SACnCpZ,EAAIC,YAAYY,KAAOA,GAEzBwuD,EAAuBrvD,IAmBvBkmC,CAAalmC,IA+CfiB,aA3CF,SAAsBC,GACpB6sB,EAAK9sB,aAAaC,IA2ClBa,YAxCF,SAAqBb,GACnB8sB,EAAKjsB,YAAYb,GAEjB,IAAIlB,EAAMkB,EAAKc,QACXzB,EAAYP,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAC3CyR,EAAQhS,EAAIG,QAAQD,IAAII,WAAWN,EAAIO,WAAW8B,QAAU,GAIhE,GAFqB9B,EAAUwN,eAE3BiE,EAAMlE,QAAS,CACjB,IAAIE,EAAgBgE,EAAM/D,QAAQ+D,EAAMlE,SACpCjN,EAAOK,EAAKC,aAAaN,KAC7B,GAAImN,EAAcm4B,cAChB7jC,EAAS,IAAIzC,EACbqB,EAAKiB,KAAK2L,SAAW3P,EAAKmuB,kBACa,IAArC/pB,IAAI0O,WAAWma,kBAA0BlqB,EAAKC,aAAaoF,OAAS1F,EACpEyB,EACA0L,QAEG,GAA2B,cAAvBA,EAAc9O,MAA+C,SAAvB8O,EAAc9O,KAAiB,CAC9E,IAAIoD,EAAS,IAAIzC,EACjBqB,EAAKiB,KAAK6P,EAAMlE,SAAWxL,EAAOf,MAAMV,EAAMmN,OACd,WAAvBA,EAAc9O,MAAqB8O,EAAco4B,YAC1DllC,EAAKiB,KAAK6P,EAAMlE,SAAWjN,EAE3BK,EAAKiB,KAAK6P,EAAMlE,SAAWE,EAAc6I,OAAOhW,OAE7C,CACL,IAAIsB,EAAOjB,EAAKiB,KAChB4rB,EAAKhsB,YAAYb,GACjBA,EAAKiB,KAAOhE,EAAKyN,MAAMzJ,EAAMjB,EAAKiB,U,6kJCvFtC,EAAQ,QACR,IAAII,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAsB,YAAI,GACpCpS,EAAI4e,YAAc1M,EAAQI,cAAc,cAAe,CAAC,cAAe,cAAe,cAAe,cAAe,eACpHnQ,OAAO8H,eAAekI,EAAUC,SAAsB,YAAG,aAAc,CACrElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAkDC,WAC7EF,EAAMuD,QAAU,EAAQ,QAAgDA,QACjEvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI4e,a,qBClBrB,EAAQ,QACR,IAAI5e,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAA2B,iBAAI,GACzCpS,EAAI6e,iBAAmB3M,EAAQI,cAAc,mBAAoB,CAAC,eAClEnQ,OAAO8H,eAAekI,EAAUC,SAA2B,iBAAG,aAAc,CAC1ElH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAAuDC,WAClFF,EAAMuD,QAAU,EAAQ,QAAqDA,QACtEvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAI6e,kB,oimDClBrB,IAAI4jC,EAAY,EAAQ,QAKxB,SAAS6I,EAAKyB,EAAU//B,GACpB5wB,KAAKqL,KAAO,IAAIslD,EAChB3wD,KAAK4wD,MAAQ,IAAID,EAEjB,IAAIE,EA6CR,SAA0BF,EAAU//B,GAChC,IAAI5uB,EAAQqkD,EAAUnK,gBAAgBtrB,GACtC,GAAI5uB,EAAMoG,WAAauoD,EAAS5J,WAAY,CACxC,IAAI+J,EAAa,IAAIH,EACrBG,EAAW3lD,OAAOnJ,GAClBA,EAAQ8uD,EAAW9lD,SAEvB,IAAInE,EAAS,IAAIM,WAAWwpD,EAAS5J,YAErC,OADAlgD,EAAOsZ,IAAIne,GACJ6E,EAtDKkqD,CAAiBJ,EAAU//B,GACnCggC,EAAQ,IAAIzpD,WAAWwpD,EAAS5J,YACpC6J,EAAMzwC,IAAI0wC,GAEV,IAAK,IAAIhwD,EAAI,EAAGA,EAAI8vD,EAAS5J,WAAYlmD,IACrCgwD,EAAMhwD,IAAM,GACZ+vD,EAAM/vD,IAAM,GAGhBb,KAAKqL,KAAKF,OAAO0lD,GACjB7wD,KAAK4wD,MAAMzlD,OAAOylD,GAGlB,IAAS/vD,EAAI,EAAGA,EAAIgwD,EAAMzoD,WAAYvH,IAClCgwD,EAAMhwD,GAAK,EAOnBE,EAAOC,QAAoBkuD,EAE3BA,EAAK1lD,UAAU2B,OAAS,SAAU6lD,GAC9B,GAAI3K,EAAUpK,YAAY+U,IAAWhxD,KAAKQ,MACtC,OAAOR,KAGX,IACIA,KAAKqL,KAAKF,OAAOk7C,EAAUnK,gBAAgB8U,IAC7C,MAAOtuD,GACL1C,KAAKQ,MAAQkC,EAGjB,OAAO1C,MAGXkvD,EAAK1lD,UAAUwB,OAAS,SAAUhE,GAK9B,OAJKhH,KAAK4wD,MAAM5J,UACZhnD,KAAK4wD,MAAMzlD,OAAOnL,KAAKqL,KAAKL,UAGzBhL,KAAK4wD,MAAM5lD,OAAOhE,K,gvqBCnD7B,EAAQ,QACR,IAAIpD,EAAM,EAAQ,QACdkS,EAAUlS,EAAIkS,QACdC,EAAYnS,EAAImS,UAEpBA,EAAUC,SAAc,IAAI,GAC5BpS,EAAImgB,IAAMjO,EAAQI,cAAc,MAAO,CAAC,eACxCnQ,OAAO8H,eAAekI,EAAUC,SAAc,IAAG,aAAc,CAC7DlH,IAAK,WACH,IAAIqH,EAAQ,EAAQ,QAGpB,OAFAA,EAAMC,WAAa,EAAQ,QAA4CC,WACvEF,EAAMuD,QAAU,EAAQ,QAA0CA,QAC3DvD,GAETpI,YAAY,EACZW,cAAc,IAGhB3N,EAAOC,QAAU4C,EAAImgB,K","file":"js/npm.aws-sdk.9f1c2e5f.js","sourcesContent":["var util = require('../core').util;\nvar typeOf = require('./types').typeOf;\n\n/**\n * @api private\n */\nvar memberTypeToSetType = {\n  'String': 'String',\n  'Number': 'Number',\n  'NumberValue': 'Number',\n  'Binary': 'Binary'\n};\n\n/**\n * @api private\n */\nvar DynamoDBSet = util.inherit({\n\n  constructor: function Set(list, options) {\n    options = options || {};\n    this.wrapperName = 'Set';\n    this.initialize(list, options.validate);\n  },\n\n  initialize: function(list, validate) {\n    var self = this;\n    self.values = [].concat(list);\n    self.detectType();\n    if (validate) {\n      self.validate();\n    }\n  },\n\n  detectType: function() {\n    this.type = memberTypeToSetType[typeOf(this.values[0])];\n    if (!this.type) {\n      throw util.error(new Error(), {\n        code: 'InvalidSetType',\n        message: 'Sets can contain string, number, or binary values'\n      });\n    }\n  },\n\n  validate: function() {\n    var self = this;\n    var length = self.values.length;\n    var values = self.values;\n    for (var i = 0; i < length; i++) {\n      if (memberTypeToSetType[typeOf(values[i])] !== self.type) {\n        throw util.error(new Error(), {\n          code: 'InvalidType',\n          message: self.type + ' Set contains ' + typeOf(values[i]) + ' value'\n        });\n      }\n    }\n  },\n\n  /**\n   * Render the underlying values only when converting to JSON.\n   */\n  toJSON: function() {\n    var self = this;\n    return self.values;\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = DynamoDBSet;\n","var util = require('../util');\nvar JsonBuilder = require('../json/builder');\nvar JsonParser = require('../json/parser');\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\n\nfunction buildRequest(req) {\n  var httpRequest = req.httpRequest;\n  var api = req.service.api;\n  var target = api.targetPrefix + '.' + api.operations[req.operation].name;\n  var version = api.jsonVersion || '1.0';\n  var input = api.operations[req.operation].input;\n  var builder = new JsonBuilder();\n\n  if (version === 1) version = '1.0';\n  httpRequest.body = builder.build(req.params || {}, input);\n  httpRequest.headers['Content-Type'] = 'application/x-amz-json-' + version;\n  httpRequest.headers['X-Amz-Target'] = target;\n\n  populateHostPrefix(req);\n}\n\nfunction extractError(resp) {\n  var error = {};\n  var httpResponse = resp.httpResponse;\n\n  error.code = httpResponse.headers['x-amzn-errortype'] || 'UnknownError';\n  if (typeof error.code === 'string') {\n    error.code = error.code.split(':')[0];\n  }\n\n  if (httpResponse.body.length > 0) {\n    try {\n      var e = JSON.parse(httpResponse.body.toString());\n      var code = e.__type || e.code || e.Code;\n      if (code) {\n        error.code = code.split('#').pop();\n      }\n      if (error.code === 'RequestEntityTooLarge') {\n        error.message = 'Request body must be less than 1 MB';\n      } else {\n        error.message = (e.message || e.Message || null);\n      }\n    } catch (e) {\n      error.statusCode = httpResponse.statusCode;\n      error.message = httpResponse.statusMessage;\n    }\n  } else {\n    error.statusCode = httpResponse.statusCode;\n    error.message = httpResponse.statusCode.toString();\n  }\n\n  resp.error = util.error(new Error(), error);\n}\n\nfunction extractData(resp) {\n  var body = resp.httpResponse.body.toString() || '{}';\n  if (resp.request.service.config.convertResponseTypes === false) {\n    resp.data = JSON.parse(body);\n  } else {\n    var operation = resp.request.service.api.operations[resp.request.operation];\n    var shape = operation.output || {};\n    var parser = new JsonParser();\n    resp.data = parser.parse(body, shape);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n","/* eslint guard-for-in:0 */\nvar AWS;\n\n/**\n * A set of utility methods for use with the AWS SDK.\n *\n * @!attribute abort\n *   Return this value from an iterator function {each} or {arrayEach}\n *   to break out of the iteration.\n *   @example Breaking out of an iterator function\n *     AWS.util.each({a: 1, b: 2, c: 3}, function(key, value) {\n *       if (key == 'b') return AWS.util.abort;\n *     });\n *   @see each\n *   @see arrayEach\n * @api private\n */\nvar util = {\n  environment: 'nodejs',\n  engine: function engine() {\n    if (util.isBrowser() && typeof navigator !== 'undefined') {\n      return navigator.userAgent;\n    } else {\n      var engine = process.platform + '/' + process.version;\n      if (process.env.AWS_EXECUTION_ENV) {\n        engine += ' exec-env/' + process.env.AWS_EXECUTION_ENV;\n      }\n      return engine;\n    }\n  },\n\n  userAgent: function userAgent() {\n    var name = util.environment;\n    var agent = 'aws-sdk-' + name + '/' + require('./core').VERSION;\n    if (name === 'nodejs') agent += ' ' + util.engine();\n    return agent;\n  },\n\n  uriEscape: function uriEscape(string) {\n    var output = encodeURIComponent(string);\n    output = output.replace(/[^A-Za-z0-9_.~\\-%]+/g, escape);\n\n    // AWS percent-encodes some extra non-standard characters in a URI\n    output = output.replace(/[*]/g, function(ch) {\n      return '%' + ch.charCodeAt(0).toString(16).toUpperCase();\n    });\n\n    return output;\n  },\n\n  uriEscapePath: function uriEscapePath(string) {\n    var parts = [];\n    util.arrayEach(string.split('/'), function (part) {\n      parts.push(util.uriEscape(part));\n    });\n    return parts.join('/');\n  },\n\n  urlParse: function urlParse(url) {\n    return util.url.parse(url);\n  },\n\n  urlFormat: function urlFormat(url) {\n    return util.url.format(url);\n  },\n\n  queryStringParse: function queryStringParse(qs) {\n    return util.querystring.parse(qs);\n  },\n\n  queryParamsToString: function queryParamsToString(params) {\n    var items = [];\n    var escape = util.uriEscape;\n    var sortedKeys = Object.keys(params).sort();\n\n    util.arrayEach(sortedKeys, function(name) {\n      var value = params[name];\n      var ename = escape(name);\n      var result = ename + '=';\n      if (Array.isArray(value)) {\n        var vals = [];\n        util.arrayEach(value, function(item) { vals.push(escape(item)); });\n        result = ename + '=' + vals.sort().join('&' + ename + '=');\n      } else if (value !== undefined && value !== null) {\n        result = ename + '=' + escape(value);\n      }\n      items.push(result);\n    });\n\n    return items.join('&');\n  },\n\n  readFileSync: function readFileSync(path) {\n    if (util.isBrowser()) return null;\n    return require('fs').readFileSync(path, 'utf-8');\n  },\n\n  base64: {\n    encode: function encode64(string) {\n      if (typeof string === 'number') {\n        throw util.error(new Error('Cannot base64 encode number ' + string));\n      }\n      if (string === null || typeof string === 'undefined') {\n        return string;\n      }\n      var buf = util.buffer.toBuffer(string);\n      return buf.toString('base64');\n    },\n\n    decode: function decode64(string) {\n      if (typeof string === 'number') {\n        throw util.error(new Error('Cannot base64 decode number ' + string));\n      }\n      if (string === null || typeof string === 'undefined') {\n        return string;\n      }\n      return util.buffer.toBuffer(string, 'base64');\n    }\n\n  },\n\n  buffer: {\n    /**\n     * Buffer constructor for Node buffer and buffer pollyfill\n     */\n    toBuffer: function(data, encoding) {\n      return (typeof util.Buffer.from === 'function' && util.Buffer.from !== Uint8Array.from) ?\n        util.Buffer.from(data, encoding) : new util.Buffer(data, encoding);\n    },\n\n    alloc: function(size, fill, encoding) {\n      if (typeof size !== 'number') {\n        throw new Error('size passed to alloc must be a number.');\n      }\n      if (typeof util.Buffer.alloc === 'function') {\n        return util.Buffer.alloc(size, fill, encoding);\n      } else {\n        var buf = new util.Buffer(size);\n        if (fill !== undefined && typeof buf.fill === 'function') {\n          buf.fill(fill, undefined, undefined, encoding);\n        }\n        return buf;\n      }\n    },\n\n    toStream: function toStream(buffer) {\n      if (!util.Buffer.isBuffer(buffer)) buffer =  util.buffer.toBuffer(buffer);\n\n      var readable = new (util.stream.Readable)();\n      var pos = 0;\n      readable._read = function(size) {\n        if (pos >= buffer.length) return readable.push(null);\n\n        var end = pos + size;\n        if (end > buffer.length) end = buffer.length;\n        readable.push(buffer.slice(pos, end));\n        pos = end;\n      };\n\n      return readable;\n    },\n\n    /**\n     * Concatenates a list of Buffer objects.\n     */\n    concat: function(buffers) {\n      var length = 0,\n          offset = 0,\n          buffer = null, i;\n\n      for (i = 0; i < buffers.length; i++) {\n        length += buffers[i].length;\n      }\n\n      buffer = util.buffer.alloc(length);\n\n      for (i = 0; i < buffers.length; i++) {\n        buffers[i].copy(buffer, offset);\n        offset += buffers[i].length;\n      }\n\n      return buffer;\n    }\n  },\n\n  string: {\n    byteLength: function byteLength(string) {\n      if (string === null || string === undefined) return 0;\n      if (typeof string === 'string') string = util.buffer.toBuffer(string);\n\n      if (typeof string.byteLength === 'number') {\n        return string.byteLength;\n      } else if (typeof string.length === 'number') {\n        return string.length;\n      } else if (typeof string.size === 'number') {\n        return string.size;\n      } else if (typeof string.path === 'string') {\n        return require('fs').lstatSync(string.path).size;\n      } else {\n        throw util.error(new Error('Cannot determine length of ' + string),\n          { object: string });\n      }\n    },\n\n    upperFirst: function upperFirst(string) {\n      return string[0].toUpperCase() + string.substr(1);\n    },\n\n    lowerFirst: function lowerFirst(string) {\n      return string[0].toLowerCase() + string.substr(1);\n    }\n  },\n\n  ini: {\n    parse: function string(ini) {\n      var currentSection, map = {};\n      util.arrayEach(ini.split(/\\r?\\n/), function(line) {\n        line = line.split(/(^|\\s)[;#]/)[0]; // remove comments\n        var section = line.match(/^\\s*\\[([^\\[\\]]+)\\]\\s*$/);\n        if (section) {\n          currentSection = section[1];\n        } else if (currentSection) {\n          var item = line.match(/^\\s*(.+?)\\s*=\\s*(.+?)\\s*$/);\n          if (item) {\n            map[currentSection] = map[currentSection] || {};\n            map[currentSection][item[1]] = item[2];\n          }\n        }\n      });\n\n      return map;\n    }\n  },\n\n  fn: {\n    noop: function() {},\n    callback: function (err) { if (err) throw err; },\n\n    /**\n     * Turn a synchronous function into as \"async\" function by making it call\n     * a callback. The underlying function is called with all but the last argument,\n     * which is treated as the callback. The callback is passed passed a first argument\n     * of null on success to mimick standard node callbacks.\n     */\n    makeAsync: function makeAsync(fn, expectedArgs) {\n      if (expectedArgs && expectedArgs <= fn.length) {\n        return fn;\n      }\n\n      return function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        var callback = args.pop();\n        var result = fn.apply(null, args);\n        callback(result);\n      };\n    }\n  },\n\n  /**\n   * Date and time utility functions.\n   */\n  date: {\n\n    /**\n     * @return [Date] the current JavaScript date object. Since all\n     *   AWS services rely on this date object, you can override\n     *   this function to provide a special time value to AWS service\n     *   requests.\n     */\n    getDate: function getDate() {\n      if (!AWS) AWS = require('./core');\n      if (AWS.config.systemClockOffset) { // use offset when non-zero\n        return new Date(new Date().getTime() + AWS.config.systemClockOffset);\n      } else {\n        return new Date();\n      }\n    },\n\n    /**\n     * @return [String] the date in ISO-8601 format\n     */\n    iso8601: function iso8601(date) {\n      if (date === undefined) { date = util.date.getDate(); }\n      return date.toISOString().replace(/\\.\\d{3}Z$/, 'Z');\n    },\n\n    /**\n     * @return [String] the date in RFC 822 format\n     */\n    rfc822: function rfc822(date) {\n      if (date === undefined) { date = util.date.getDate(); }\n      return date.toUTCString();\n    },\n\n    /**\n     * @return [Integer] the UNIX timestamp value for the current time\n     */\n    unixTimestamp: function unixTimestamp(date) {\n      if (date === undefined) { date = util.date.getDate(); }\n      return date.getTime() / 1000;\n    },\n\n    /**\n     * @param [String,number,Date] date\n     * @return [Date]\n     */\n    from: function format(date) {\n      if (typeof date === 'number') {\n        return new Date(date * 1000); // unix timestamp\n      } else {\n        return new Date(date);\n      }\n    },\n\n    /**\n     * Given a Date or date-like value, this function formats the\n     * date into a string of the requested value.\n     * @param [String,number,Date] date\n     * @param [String] formatter Valid formats are:\n     #   * 'iso8601'\n     #   * 'rfc822'\n     #   * 'unixTimestamp'\n     * @return [String]\n     */\n    format: function format(date, formatter) {\n      if (!formatter) formatter = 'iso8601';\n      return util.date[formatter](util.date.from(date));\n    },\n\n    parseTimestamp: function parseTimestamp(value) {\n      if (typeof value === 'number') { // unix timestamp (number)\n        return new Date(value * 1000);\n      } else if (value.match(/^\\d+$/)) { // unix timestamp\n        return new Date(value * 1000);\n      } else if (value.match(/^\\d{4}/)) { // iso8601\n        return new Date(value);\n      } else if (value.match(/^\\w{3},/)) { // rfc822\n        return new Date(value);\n      } else {\n        throw util.error(\n          new Error('unhandled timestamp format: ' + value),\n          {code: 'TimestampParserError'});\n      }\n    }\n\n  },\n\n  crypto: {\n    crc32Table: [\n     0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419,\n     0x706AF48F, 0xE963A535, 0x9E6495A3, 0x0EDB8832, 0x79DCB8A4,\n     0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07,\n     0x90BF1D91, 0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,\n     0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7, 0x136C9856,\n     0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9,\n     0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4,\n     0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,\n     0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3,\n     0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 0x26D930AC, 0x51DE003A,\n     0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599,\n     0xB8BDA50F, 0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,\n     0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D, 0x76DC4190,\n     0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F,\n     0x9FBFE4A5, 0xE8B8D433, 0x7807C9A2, 0x0F00F934, 0x9609A88E,\n     0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,\n     0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED,\n     0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950,\n     0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3,\n     0xFBD44C65, 0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,\n     0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A,\n     0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5,\n     0xAA0A4C5F, 0xDD0D7CC9, 0x5005713C, 0x270241AA, 0xBE0B1010,\n     0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,\n     0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17,\n     0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6,\n     0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615,\n     0x73DC1683, 0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,\n     0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 0xF00F9344,\n     0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB,\n     0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0, 0x10DA7A5A,\n     0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,\n     0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1,\n     0xA6BC5767, 0x3FB506DD, 0x48B2364B, 0xD80D2BDA, 0xAF0A1B4C,\n     0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF,\n     0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,\n     0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 0xC5BA3BBE,\n     0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31,\n     0x2CD99E8B, 0x5BDEAE1D, 0x9B64C2B0, 0xEC63F226, 0x756AA39C,\n     0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,\n     0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B,\n     0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242,\n     0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1,\n     0x18B74777, 0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,\n     0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 0xA00AE278,\n     0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7,\n     0x4969474D, 0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC, 0x40DF0B66,\n     0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,\n     0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605,\n     0xCDD70693, 0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8,\n     0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B,\n     0x2D02EF8D],\n\n    crc32: function crc32(data) {\n      var tbl = util.crypto.crc32Table;\n      var crc = 0 ^ -1;\n\n      if (typeof data === 'string') {\n        data = util.buffer.toBuffer(data);\n      }\n\n      for (var i = 0; i < data.length; i++) {\n        var code = data.readUInt8(i);\n        crc = (crc >>> 8) ^ tbl[(crc ^ code) & 0xFF];\n      }\n      return (crc ^ -1) >>> 0;\n    },\n\n    hmac: function hmac(key, string, digest, fn) {\n      if (!digest) digest = 'binary';\n      if (digest === 'buffer') { digest = undefined; }\n      if (!fn) fn = 'sha256';\n      if (typeof string === 'string') string = util.buffer.toBuffer(string);\n      return util.crypto.lib.createHmac(fn, key).update(string).digest(digest);\n    },\n\n    md5: function md5(data, digest, callback) {\n      return util.crypto.hash('md5', data, digest, callback);\n    },\n\n    sha256: function sha256(data, digest, callback) {\n      return util.crypto.hash('sha256', data, digest, callback);\n    },\n\n    hash: function(algorithm, data, digest, callback) {\n      var hash = util.crypto.createHash(algorithm);\n      if (!digest) { digest = 'binary'; }\n      if (digest === 'buffer') { digest = undefined; }\n      if (typeof data === 'string') data = util.buffer.toBuffer(data);\n      var sliceFn = util.arraySliceFn(data);\n      var isBuffer = util.Buffer.isBuffer(data);\n      //Identifying objects with an ArrayBuffer as buffers\n      if (util.isBrowser() && typeof ArrayBuffer !== 'undefined' && data && data.buffer instanceof ArrayBuffer) isBuffer = true;\n\n      if (callback && typeof data === 'object' &&\n          typeof data.on === 'function' && !isBuffer) {\n        data.on('data', function(chunk) { hash.update(chunk); });\n        data.on('error', function(err) { callback(err); });\n        data.on('end', function() { callback(null, hash.digest(digest)); });\n      } else if (callback && sliceFn && !isBuffer &&\n                 typeof FileReader !== 'undefined') {\n        // this might be a File/Blob\n        var index = 0, size = 1024 * 512;\n        var reader = new FileReader();\n        reader.onerror = function() {\n          callback(new Error('Failed to read data.'));\n        };\n        reader.onload = function() {\n          var buf = new util.Buffer(new Uint8Array(reader.result));\n          hash.update(buf);\n          index += buf.length;\n          reader._continueReading();\n        };\n        reader._continueReading = function() {\n          if (index >= data.size) {\n            callback(null, hash.digest(digest));\n            return;\n          }\n\n          var back = index + size;\n          if (back > data.size) back = data.size;\n          reader.readAsArrayBuffer(sliceFn.call(data, index, back));\n        };\n\n        reader._continueReading();\n      } else {\n        if (util.isBrowser() && typeof data === 'object' && !isBuffer) {\n          data = new util.Buffer(new Uint8Array(data));\n        }\n        var out = hash.update(data).digest(digest);\n        if (callback) callback(null, out);\n        return out;\n      }\n    },\n\n    toHex: function toHex(data) {\n      var out = [];\n      for (var i = 0; i < data.length; i++) {\n        out.push(('0' + data.charCodeAt(i).toString(16)).substr(-2, 2));\n      }\n      return out.join('');\n    },\n\n    createHash: function createHash(algorithm) {\n      return util.crypto.lib.createHash(algorithm);\n    }\n\n  },\n\n  /** @!ignore */\n\n  /* Abort constant */\n  abort: {},\n\n  each: function each(object, iterFunction) {\n    for (var key in object) {\n      if (Object.prototype.hasOwnProperty.call(object, key)) {\n        var ret = iterFunction.call(this, key, object[key]);\n        if (ret === util.abort) break;\n      }\n    }\n  },\n\n  arrayEach: function arrayEach(array, iterFunction) {\n    for (var idx in array) {\n      if (Object.prototype.hasOwnProperty.call(array, idx)) {\n        var ret = iterFunction.call(this, array[idx], parseInt(idx, 10));\n        if (ret === util.abort) break;\n      }\n    }\n  },\n\n  update: function update(obj1, obj2) {\n    util.each(obj2, function iterator(key, item) {\n      obj1[key] = item;\n    });\n    return obj1;\n  },\n\n  merge: function merge(obj1, obj2) {\n    return util.update(util.copy(obj1), obj2);\n  },\n\n  copy: function copy(object) {\n    if (object === null || object === undefined) return object;\n    var dupe = {};\n    // jshint forin:false\n    for (var key in object) {\n      dupe[key] = object[key];\n    }\n    return dupe;\n  },\n\n  isEmpty: function isEmpty(obj) {\n    for (var prop in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  arraySliceFn: function arraySliceFn(obj) {\n    var fn = obj.slice || obj.webkitSlice || obj.mozSlice;\n    return typeof fn === 'function' ? fn : null;\n  },\n\n  isType: function isType(obj, type) {\n    // handle cross-\"frame\" objects\n    if (typeof type === 'function') type = util.typeName(type);\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']';\n  },\n\n  typeName: function typeName(type) {\n    if (Object.prototype.hasOwnProperty.call(type, 'name')) return type.name;\n    var str = type.toString();\n    var match = str.match(/^\\s*function (.+)\\(/);\n    return match ? match[1] : str;\n  },\n\n  error: function error(err, options) {\n    var originalError = null;\n    if (typeof err.message === 'string' && err.message !== '') {\n      if (typeof options === 'string' || (options && options.message)) {\n        originalError = util.copy(err);\n        originalError.message = err.message;\n      }\n    }\n    err.message = err.message || null;\n\n    if (typeof options === 'string') {\n      err.message = options;\n    } else if (typeof options === 'object' && options !== null) {\n      util.update(err, options);\n      if (options.message)\n        err.message = options.message;\n      if (options.code || options.name)\n        err.code = options.code || options.name;\n      if (options.stack)\n        err.stack = options.stack;\n    }\n\n    if (typeof Object.defineProperty === 'function') {\n      Object.defineProperty(err, 'name', {writable: true, enumerable: false});\n      Object.defineProperty(err, 'message', {enumerable: true});\n    }\n\n    err.name = String(options && options.name || err.name || err.code || 'Error');\n    err.time = new Date();\n\n    if (originalError) err.originalError = originalError;\n\n    return err;\n  },\n\n  /**\n   * @api private\n   */\n  inherit: function inherit(klass, features) {\n    var newObject = null;\n    if (features === undefined) {\n      features = klass;\n      klass = Object;\n      newObject = {};\n    } else {\n      var ctor = function ConstructorWrapper() {};\n      ctor.prototype = klass.prototype;\n      newObject = new ctor();\n    }\n\n    // constructor not supplied, create pass-through ctor\n    if (features.constructor === Object) {\n      features.constructor = function() {\n        if (klass !== Object) {\n          return klass.apply(this, arguments);\n        }\n      };\n    }\n\n    features.constructor.prototype = newObject;\n    util.update(features.constructor.prototype, features);\n    features.constructor.__super__ = klass;\n    return features.constructor;\n  },\n\n  /**\n   * @api private\n   */\n  mixin: function mixin() {\n    var klass = arguments[0];\n    for (var i = 1; i < arguments.length; i++) {\n      // jshint forin:false\n      for (var prop in arguments[i].prototype) {\n        var fn = arguments[i].prototype[prop];\n        if (prop !== 'constructor') {\n          klass.prototype[prop] = fn;\n        }\n      }\n    }\n    return klass;\n  },\n\n  /**\n   * @api private\n   */\n  hideProperties: function hideProperties(obj, props) {\n    if (typeof Object.defineProperty !== 'function') return;\n\n    util.arrayEach(props, function (key) {\n      Object.defineProperty(obj, key, {\n        enumerable: false, writable: true, configurable: true });\n    });\n  },\n\n  /**\n   * @api private\n   */\n  property: function property(obj, name, value, enumerable, isValue) {\n    var opts = {\n      configurable: true,\n      enumerable: enumerable !== undefined ? enumerable : true\n    };\n    if (typeof value === 'function' && !isValue) {\n      opts.get = value;\n    }\n    else {\n      opts.value = value; opts.writable = true;\n    }\n\n    Object.defineProperty(obj, name, opts);\n  },\n\n  /**\n   * @api private\n   */\n  memoizedProperty: function memoizedProperty(obj, name, get, enumerable) {\n    var cachedValue = null;\n\n    // build enumerable attribute for each value with lazy accessor.\n    util.property(obj, name, function() {\n      if (cachedValue === null) {\n        cachedValue = get();\n      }\n      return cachedValue;\n    }, enumerable);\n  },\n\n  /**\n   * TODO Remove in major version revision\n   * This backfill populates response data without the\n   * top-level payload name.\n   *\n   * @api private\n   */\n  hoistPayloadMember: function hoistPayloadMember(resp) {\n    var req = resp.request;\n    var operationName = req.operation;\n    var operation = req.service.api.operations[operationName];\n    var output = operation.output;\n    if (output.payload && !operation.hasEventOutput) {\n      var payloadMember = output.members[output.payload];\n      var responsePayload = resp.data[output.payload];\n      if (payloadMember.type === 'structure') {\n        util.each(responsePayload, function(key, value) {\n          util.property(resp.data, key, value, false);\n        });\n      }\n    }\n  },\n\n  /**\n   * Compute SHA-256 checksums of streams\n   *\n   * @api private\n   */\n  computeSha256: function computeSha256(body, done) {\n    if (util.isNode()) {\n      var Stream = util.stream.Stream;\n      var fs = require('fs');\n      if (typeof Stream === 'function' && body instanceof Stream) {\n        if (typeof body.path === 'string') { // assume file object\n          var settings = {};\n          if (typeof body.start === 'number') {\n            settings.start = body.start;\n          }\n          if (typeof body.end === 'number') {\n            settings.end = body.end;\n          }\n          body = fs.createReadStream(body.path, settings);\n        } else { // TODO support other stream types\n          return done(new Error('Non-file stream objects are ' +\n                                'not supported with SigV4'));\n        }\n      }\n    }\n\n    util.crypto.sha256(body, 'hex', function(err, sha) {\n      if (err) done(err);\n      else done(null, sha);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  isClockSkewed: function isClockSkewed(serverTime) {\n    if (serverTime) {\n      util.property(AWS.config, 'isClockSkewed',\n        Math.abs(new Date().getTime() - serverTime) >= 300000, false);\n      return AWS.config.isClockSkewed;\n    }\n  },\n\n  applyClockOffset: function applyClockOffset(serverTime) {\n    if (serverTime)\n      AWS.config.systemClockOffset = serverTime - new Date().getTime();\n  },\n\n  /**\n   * @api private\n   */\n  extractRequestId: function extractRequestId(resp) {\n    var requestId = resp.httpResponse.headers['x-amz-request-id'] ||\n                     resp.httpResponse.headers['x-amzn-requestid'];\n\n    if (!requestId && resp.data && resp.data.ResponseMetadata) {\n      requestId = resp.data.ResponseMetadata.RequestId;\n    }\n\n    if (requestId) {\n      resp.requestId = requestId;\n    }\n\n    if (resp.error) {\n      resp.error.requestId = requestId;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  addPromises: function addPromises(constructors, PromiseDependency) {\n    var deletePromises = false;\n    if (PromiseDependency === undefined && AWS && AWS.config) {\n      PromiseDependency = AWS.config.getPromisesDependency();\n    }\n    if (PromiseDependency === undefined && typeof Promise !== 'undefined') {\n      PromiseDependency = Promise;\n    }\n    if (typeof PromiseDependency !== 'function') deletePromises = true;\n    if (!Array.isArray(constructors)) constructors = [constructors];\n\n    for (var ind = 0; ind < constructors.length; ind++) {\n      var constructor = constructors[ind];\n      if (deletePromises) {\n        if (constructor.deletePromisesFromClass) {\n          constructor.deletePromisesFromClass();\n        }\n      } else if (constructor.addPromisesToClass) {\n        constructor.addPromisesToClass(PromiseDependency);\n      }\n    }\n  },\n\n  /**\n   * @api private\n   * Return a function that will return a promise whose fate is decided by the\n   * callback behavior of the given method with `methodName`. The method to be\n   * promisified should conform to node.js convention of accepting a callback as\n   * last argument and calling that callback with error as the first argument\n   * and success value on the second argument.\n   */\n  promisifyMethod: function promisifyMethod(methodName, PromiseDependency) {\n    return function promise() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      return new PromiseDependency(function(resolve, reject) {\n        args.push(function(err, data) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(data);\n          }\n        });\n        self[methodName].apply(self, args);\n      });\n    };\n  },\n\n  /**\n   * @api private\n   */\n  isDualstackAvailable: function isDualstackAvailable(service) {\n    if (!service) return false;\n    var metadata = require('../apis/metadata.json');\n    if (typeof service !== 'string') service = service.serviceIdentifier;\n    if (typeof service !== 'string' || !metadata.hasOwnProperty(service)) return false;\n    return !!metadata[service].dualstackAvailable;\n  },\n\n  /**\n   * @api private\n   */\n  calculateRetryDelay: function calculateRetryDelay(retryCount, retryDelayOptions, err) {\n    if (!retryDelayOptions) retryDelayOptions = {};\n    var customBackoff = retryDelayOptions.customBackoff || null;\n    if (typeof customBackoff === 'function') {\n      return customBackoff(retryCount, err);\n    }\n    var base = typeof retryDelayOptions.base === 'number' ? retryDelayOptions.base : 100;\n    var delay = Math.random() * (Math.pow(2, retryCount) * base);\n    return delay;\n  },\n\n  /**\n   * @api private\n   */\n  handleRequestWithRetries: function handleRequestWithRetries(httpRequest, options, cb) {\n    if (!options) options = {};\n    var http = AWS.HttpClient.getInstance();\n    var httpOptions = options.httpOptions || {};\n    var retryCount = 0;\n\n    var errCallback = function(err) {\n      var maxRetries = options.maxRetries || 0;\n      if (err && err.code === 'TimeoutError') err.retryable = true;\n\n      // Call `calculateRetryDelay()` only when relevant, see #3401\n      if (err && err.retryable && retryCount < maxRetries) {\n        var delay = util.calculateRetryDelay(retryCount, options.retryDelayOptions, err);\n        if (delay >= 0) {\n          retryCount++;\n          setTimeout(sendRequest, delay + (err.retryAfter || 0));\n          return;\n        }\n      }\n      cb(err);\n    };\n\n    var sendRequest = function() {\n      var data = '';\n      http.handleRequest(httpRequest, httpOptions, function(httpResponse) {\n        httpResponse.on('data', function(chunk) { data += chunk.toString(); });\n        httpResponse.on('end', function() {\n          var statusCode = httpResponse.statusCode;\n          if (statusCode < 300) {\n            cb(null, data);\n          } else {\n            var retryAfter = parseInt(httpResponse.headers['retry-after'], 10) * 1000 || 0;\n            var err = util.error(new Error(),\n              {\n                statusCode: statusCode,\n                retryable: statusCode >= 500 || statusCode === 429\n              }\n            );\n            if (retryAfter && err.retryable) err.retryAfter = retryAfter;\n            errCallback(err);\n          }\n        });\n      }, errCallback);\n    };\n\n    AWS.util.defer(sendRequest);\n  },\n\n  /**\n   * @api private\n   */\n  uuid: {\n    v4: function uuidV4() {\n      return require('uuid').v4();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  convertPayloadToString: function convertPayloadToString(resp) {\n    var req = resp.request;\n    var operation = req.operation;\n    var rules = req.service.api.operations[operation].output || {};\n    if (rules.payload && resp.data[rules.payload]) {\n      resp.data[rules.payload] = resp.data[rules.payload].toString();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  defer: function defer(callback) {\n    if (typeof process === 'object' && typeof process.nextTick === 'function') {\n      process.nextTick(callback);\n    } else if (typeof setImmediate === 'function') {\n      setImmediate(callback);\n    } else {\n      setTimeout(callback, 0);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getRequestPayloadShape: function getRequestPayloadShape(req) {\n    var operations = req.service.api.operations;\n    if (!operations) return undefined;\n    var operation = (operations || {})[req.operation];\n    if (!operation || !operation.input || !operation.input.payload) return undefined;\n    return operation.input.members[operation.input.payload];\n  },\n\n  getProfilesFromSharedConfig: function getProfilesFromSharedConfig(iniLoader, filename) {\n    var profiles = {};\n    var profilesFromConfig = {};\n    if (process.env[util.configOptInEnv]) {\n      var profilesFromConfig = iniLoader.loadFrom({\n        isConfig: true,\n        filename: process.env[util.sharedConfigFileEnv]\n      });\n    }\n    var profilesFromCreds = iniLoader.loadFrom({\n      filename: filename ||\n        (process.env[util.configOptInEnv] && process.env[util.sharedCredentialsFileEnv])\n    });\n    for (var i = 0, profileNames = Object.keys(profilesFromConfig); i < profileNames.length; i++) {\n      profiles[profileNames[i]] = objectAssign(profiles[profileNames[i]] || {}, profilesFromConfig[profileNames[i]]);\n    }\n    for (var i = 0, profileNames = Object.keys(profilesFromCreds); i < profileNames.length; i++) {\n      profiles[profileNames[i]] = objectAssign(profiles[profileNames[i]] || {}, profilesFromCreds[profileNames[i]]);\n    }\n    return profiles;\n\n    /**\n     * Roughly the semantics of `Object.assign(target, source)`\n     */\n    function objectAssign(target, source) {\n      for (var i = 0, keys = Object.keys(source); i < keys.length; i++) {\n        target[keys[i]] = source[keys[i]];\n      }\n      return target;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  ARN: {\n    validate: function validateARN(str) {\n      return str && str.indexOf('arn:') === 0 && str.split(':').length >= 6;\n    },\n    parse: function parseARN(arn) {\n      var matched = arn.split(':');\n      return {\n        partition: matched[1],\n        service: matched[2],\n        region: matched[3],\n        accountId: matched[4],\n        resource: matched.slice(5).join(':')\n      };\n    },\n    build: function buildARN(arnObject) {\n      if (\n        arnObject.service === undefined ||\n        arnObject.region === undefined ||\n        arnObject.accountId === undefined ||\n        arnObject.resource === undefined\n      ) throw util.error(new Error('Input ARN object is invalid'));\n      return 'arn:'+ (arnObject.partition || 'aws') + ':' + arnObject.service +\n        ':' + arnObject.region + ':' + arnObject.accountId + ':' + arnObject.resource;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  defaultProfile: 'default',\n\n  /**\n   * @api private\n   */\n  configOptInEnv: 'AWS_SDK_LOAD_CONFIG',\n\n  /**\n   * @api private\n   */\n  sharedCredentialsFileEnv: 'AWS_SHARED_CREDENTIALS_FILE',\n\n  /**\n   * @api private\n   */\n  sharedConfigFileEnv: 'AWS_CONFIG_FILE',\n\n  /**\n   * @api private\n   */\n  imdsDisabledEnv: 'AWS_EC2_METADATA_DISABLED'\n};\n\n/**\n * @api private\n */\nmodule.exports = util;\n","var AWS = require('../core');\n\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.RequestSigner = inherit({\n  constructor: function RequestSigner(request) {\n    this.request = request;\n  },\n\n  setServiceClientId: function setServiceClientId(id) {\n    this.serviceClientId = id;\n  },\n\n  getServiceClientId: function getServiceClientId() {\n    return this.serviceClientId;\n  }\n});\n\nAWS.Signers.RequestSigner.getVersion = function getVersion(version) {\n  switch (version) {\n    case 'v2': return AWS.Signers.V2;\n    case 'v3': return AWS.Signers.V3;\n    case 's3v4': return AWS.Signers.V4;\n    case 'v4': return AWS.Signers.V4;\n    case 's3': return AWS.Signers.S3;\n    case 'v3https': return AWS.Signers.V3Https;\n  }\n  throw new Error('Unknown signing version ' + version);\n};\n\nrequire('./v2');\nrequire('./v3');\nrequire('./v3https');\nrequire('./v4');\nrequire('./s3');\nrequire('./presign');\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['inspector'] = {};\nAWS.Inspector = Service.defineService('inspector', ['2015-08-18*', '2016-02-16']);\nObject.defineProperty(apiLoader.services['inspector'], '2016-02-16', {\n  get: function get() {\n    var model = require('../apis/inspector-2016-02-16.min.json');\n    model.paginators = require('../apis/inspector-2016-02-16.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Inspector;\n","var util = require('../util');\nvar Shape = require('../model/shape');\n\nfunction DomXmlParser() { }\n\nDomXmlParser.prototype.parse = function(xml, shape) {\n  if (xml.replace(/^\\s+/, '') === '') return {};\n\n  var result, error;\n  try {\n    if (window.DOMParser) {\n      try {\n        var parser = new DOMParser();\n        result = parser.parseFromString(xml, 'text/xml');\n      } catch (syntaxError) {\n        throw util.error(new Error('Parse error in document'),\n          {\n            originalError: syntaxError,\n            code: 'XMLParserError',\n            retryable: true\n          });\n      }\n\n      if (result.documentElement === null) {\n        throw util.error(new Error('Cannot parse empty document.'),\n          {\n            code: 'XMLParserError',\n            retryable: true\n          });\n      }\n\n      var isError = result.getElementsByTagName('parsererror')[0];\n      if (isError && (isError.parentNode === result ||\n          isError.parentNode.nodeName === 'body' ||\n          isError.parentNode.parentNode === result ||\n          isError.parentNode.parentNode.nodeName === 'body')) {\n        var errorElement = isError.getElementsByTagName('div')[0] || isError;\n        throw util.error(new Error(errorElement.textContent || 'Parser error in document'),\n          {\n            code: 'XMLParserError',\n            retryable: true\n          });\n      }\n    } else if (window.ActiveXObject) {\n      result = new window.ActiveXObject('Microsoft.XMLDOM');\n      result.async = false;\n\n      if (!result.loadXML(xml)) {\n        throw util.error(new Error('Parse error in document'),\n          {\n            code: 'XMLParserError',\n            retryable: true\n          });\n      }\n    } else {\n      throw new Error('Cannot load XML parser');\n    }\n  } catch (e) {\n    error = e;\n  }\n\n  if (result && result.documentElement && !error) {\n    var data = parseXml(result.documentElement, shape);\n    var metadata = getElementByTagName(result.documentElement, 'ResponseMetadata');\n    if (metadata) {\n      data.ResponseMetadata = parseXml(metadata, {});\n    }\n    return data;\n  } else if (error) {\n    throw util.error(error || new Error(), {code: 'XMLParserError', retryable: true});\n  } else { // empty xml document\n    return {};\n  }\n};\n\nfunction getElementByTagName(xml, tag) {\n  var elements = xml.getElementsByTagName(tag);\n  for (var i = 0, iLen = elements.length; i < iLen; i++) {\n    if (elements[i].parentNode === xml) {\n      return elements[i];\n    }\n  }\n}\n\nfunction parseXml(xml, shape) {\n  if (!shape) shape = {};\n  switch (shape.type) {\n    case 'structure': return parseStructure(xml, shape);\n    case 'map': return parseMap(xml, shape);\n    case 'list': return parseList(xml, shape);\n    case undefined: case null: return parseUnknown(xml);\n    default: return parseScalar(xml, shape);\n  }\n}\n\nfunction parseStructure(xml, shape) {\n  var data = {};\n  if (xml === null) return data;\n\n  util.each(shape.members, function(memberName, memberShape) {\n    if (memberShape.isXmlAttribute) {\n      if (Object.prototype.hasOwnProperty.call(xml.attributes, memberShape.name)) {\n        var value = xml.attributes[memberShape.name].value;\n        data[memberName] = parseXml({textContent: value}, memberShape);\n      }\n    } else {\n      var xmlChild = memberShape.flattened ? xml :\n        getElementByTagName(xml, memberShape.name);\n      if (xmlChild) {\n        data[memberName] = parseXml(xmlChild, memberShape);\n      } else if (\n        !memberShape.flattened &&\n        memberShape.type === 'list' &&\n        !shape.api.xmlNoDefaultLists) {\n        data[memberName] = memberShape.defaultValue;\n      }\n    }\n  });\n\n  return data;\n}\n\nfunction parseMap(xml, shape) {\n  var data = {};\n  var xmlKey = shape.key.name || 'key';\n  var xmlValue = shape.value.name || 'value';\n  var tagName = shape.flattened ? shape.name : 'entry';\n\n  var child = xml.firstElementChild;\n  while (child) {\n    if (child.nodeName === tagName) {\n      var key = getElementByTagName(child, xmlKey).textContent;\n      var value = getElementByTagName(child, xmlValue);\n      data[key] = parseXml(value, shape.value);\n    }\n    child = child.nextElementSibling;\n  }\n  return data;\n}\n\nfunction parseList(xml, shape) {\n  var data = [];\n  var tagName = shape.flattened ? shape.name : (shape.member.name || 'member');\n\n  var child = xml.firstElementChild;\n  while (child) {\n    if (child.nodeName === tagName) {\n      data.push(parseXml(child, shape.member));\n    }\n    child = child.nextElementSibling;\n  }\n  return data;\n}\n\nfunction parseScalar(xml, shape) {\n  if (xml.getAttribute) {\n    var encoding = xml.getAttribute('encoding');\n    if (encoding === 'base64') {\n      shape = new Shape.create({type: encoding});\n    }\n  }\n\n  var text = xml.textContent;\n  if (text === '') text = null;\n  if (typeof shape.toType === 'function') {\n    return shape.toType(text);\n  } else {\n    return text;\n  }\n}\n\nfunction parseUnknown(xml) {\n  if (xml === undefined || xml === null) return '';\n\n  // empty object\n  if (!xml.firstElementChild) {\n    if (xml.parentNode.parentNode === null) return {};\n    if (xml.childNodes.length === 0) return '';\n    else return xml.textContent;\n  }\n\n  // object, parse as structure\n  var shape = {type: 'structure', members: {}};\n  var child = xml.firstElementChild;\n  while (child) {\n    var tag = child.nodeName;\n    if (Object.prototype.hasOwnProperty.call(shape.members, tag)) {\n      // multiple tags of the same name makes it a list\n      shape.members[tag].type = 'list';\n    } else {\n      shape.members[tag] = {name: tag};\n    }\n    child = child.nextElementSibling;\n  }\n  return parseStructure(xml, shape);\n}\n\n/**\n * @api private\n */\nmodule.exports = DomXmlParser;\n","var util = require('../util');\nvar property = util.property;\n\nfunction ResourceWaiter(name, waiter, options) {\n  options = options || {};\n  property(this, 'name', name);\n  property(this, 'api', options.api, false);\n\n  if (waiter.operation) {\n    property(this, 'operation', util.string.lowerFirst(waiter.operation));\n  }\n\n  var self = this;\n  var keys = [\n    'type',\n    'description',\n    'delay',\n    'maxAttempts',\n    'acceptors'\n  ];\n\n  keys.forEach(function(key) {\n    var value = waiter[key];\n    if (value) {\n      property(self, key, value);\n    }\n  });\n}\n\n/**\n * @api private\n */\nmodule.exports = ResourceWaiter;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['directconnect'] = {};\nAWS.DirectConnect = Service.defineService('directconnect', ['2012-10-25']);\nObject.defineProperty(apiLoader.services['directconnect'], '2012-10-25', {\n  get: function get() {\n    var model = require('../apis/directconnect-2012-10-25.min.json');\n    model.paginators = require('../apis/directconnect-2012-10-25.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DirectConnect;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['translate'] = {};\nAWS.Translate = Service.defineService('translate', ['2017-07-01']);\nObject.defineProperty(apiLoader.services['translate'], '2017-07-01', {\n  get: function get() {\n    var model = require('../apis/translate-2017-07-01.min.json');\n    model.paginators = require('../apis/translate-2017-07-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Translate;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['iam'] = {};\nAWS.IAM = Service.defineService('iam', ['2010-05-08']);\nObject.defineProperty(apiLoader.services['iam'], '2010-05-08', {\n  get: function get() {\n    var model = require('../apis/iam-2010-05-08.min.json');\n    model.paginators = require('../apis/iam-2010-05-08.paginators.json').pagination;\n    model.waiters = require('../apis/iam-2010-05-08.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.IAM;\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.V2 = inherit(AWS.Signers.RequestSigner, {\n  addAuthorization: function addAuthorization(credentials, date) {\n\n    if (!date) date = AWS.util.date.getDate();\n\n    var r = this.request;\n\n    r.params.Timestamp = AWS.util.date.iso8601(date);\n    r.params.SignatureVersion = '2';\n    r.params.SignatureMethod = 'HmacSHA256';\n    r.params.AWSAccessKeyId = credentials.accessKeyId;\n\n    if (credentials.sessionToken) {\n      r.params.SecurityToken = credentials.sessionToken;\n    }\n\n    delete r.params.Signature; // delete old Signature for re-signing\n    r.params.Signature = this.signature(credentials);\n\n    r.body = AWS.util.queryParamsToString(r.params);\n    r.headers['Content-Length'] = r.body.length;\n  },\n\n  signature: function signature(credentials) {\n    return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');\n  },\n\n  stringToSign: function stringToSign() {\n    var parts = [];\n    parts.push(this.request.method);\n    parts.push(this.request.endpoint.host.toLowerCase());\n    parts.push(this.request.pathname());\n    parts.push(AWS.util.queryParamsToString(this.request.params));\n    return parts.join('\\n');\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V2;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['dynamodbstreams'] = {};\nAWS.DynamoDBStreams = Service.defineService('dynamodbstreams', ['2012-08-10']);\nObject.defineProperty(apiLoader.services['dynamodbstreams'], '2012-08-10', {\n  get: function get() {\n    var model = require('../apis/streams.dynamodb-2012-08-10.min.json');\n    model.paginators = require('../apis/streams.dynamodb-2012-08-10.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DynamoDBStreams;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['apigateway'] = {};\nAWS.APIGateway = Service.defineService('apigateway', ['2015-07-09']);\nrequire('../lib/services/apigateway');\nObject.defineProperty(apiLoader.services['apigateway'], '2015-07-09', {\n  get: function get() {\n    var model = require('../apis/apigateway-2015-07-09.min.json');\n    model.paginators = require('../apis/apigateway-2015-07-09.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.APIGateway;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LRU_1 = require(\"./utils/LRU\");\nvar CACHE_SIZE = 1000;\n/**\n * Inspired node-lru-cache[https://github.com/isaacs/node-lru-cache]\n */\nvar EndpointCache = /** @class */ (function () {\n    function EndpointCache(maxSize) {\n        if (maxSize === void 0) { maxSize = CACHE_SIZE; }\n        this.maxSize = maxSize;\n        this.cache = new LRU_1.LRUCache(maxSize);\n    }\n    ;\n    Object.defineProperty(EndpointCache.prototype, \"size\", {\n        get: function () {\n            return this.cache.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EndpointCache.prototype.put = function (key, value) {\n      var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;\n        var endpointRecord = this.populateValue(value);\n        this.cache.put(keyString, endpointRecord);\n    };\n    EndpointCache.prototype.get = function (key) {\n      var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;\n        var now = Date.now();\n        var records = this.cache.get(keyString);\n        if (records) {\n            for (var i = 0; i < records.length; i++) {\n                var record = records[i];\n                if (record.Expire < now) {\n                    this.cache.remove(keyString);\n                    return undefined;\n                }\n            }\n        }\n        return records;\n    };\n    EndpointCache.getKeyString = function (key) {\n        var identifiers = [];\n        var identifierNames = Object.keys(key).sort();\n        for (var i = 0; i < identifierNames.length; i++) {\n            var identifierName = identifierNames[i];\n            if (key[identifierName] === undefined)\n                continue;\n            identifiers.push(key[identifierName]);\n        }\n        return identifiers.join(' ');\n    };\n    EndpointCache.prototype.populateValue = function (endpoints) {\n        var now = Date.now();\n        return endpoints.map(function (endpoint) { return ({\n            Address: endpoint.Address || '',\n            Expire: now + (endpoint.CachePeriodInMinutes || 1) * 60 * 1000\n        }); });\n    };\n    EndpointCache.prototype.empty = function () {\n        this.cache.empty();\n    };\n    EndpointCache.prototype.remove = function (key) {\n      var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;\n        this.cache.remove(keyString);\n    };\n    return EndpointCache;\n}());\nexports.EndpointCache = EndpointCache;","var AWS = require('../core');\n\n/**\n * @api private\n */\nvar cachedSecret = {};\n\n/**\n * @api private\n */\nvar cacheQueue = [];\n\n/**\n * @api private\n */\nvar maxCacheEntries = 50;\n\n/**\n * @api private\n */\nvar v4Identifier = 'aws4_request';\n\n/**\n * @api private\n */\nmodule.exports = {\n  /**\n   * @api private\n   *\n   * @param date [String]\n   * @param region [String]\n   * @param serviceName [String]\n   * @return [String]\n   */\n  createScope: function createScope(date, region, serviceName) {\n    return [\n      date.substr(0, 8),\n      region,\n      serviceName,\n      v4Identifier\n    ].join('/');\n  },\n\n  /**\n   * @api private\n   *\n   * @param credentials [Credentials]\n   * @param date [String]\n   * @param region [String]\n   * @param service [String]\n   * @param shouldCache [Boolean]\n   * @return [String]\n   */\n  getSigningKey: function getSigningKey(\n    credentials,\n    date,\n    region,\n    service,\n    shouldCache\n  ) {\n    var credsIdentifier = AWS.util.crypto\n      .hmac(credentials.secretAccessKey, credentials.accessKeyId, 'base64');\n    var cacheKey = [credsIdentifier, date, region, service].join('_');\n    shouldCache = shouldCache !== false;\n    if (shouldCache && (cacheKey in cachedSecret)) {\n      return cachedSecret[cacheKey];\n    }\n\n    var kDate = AWS.util.crypto.hmac(\n      'AWS4' + credentials.secretAccessKey,\n      date,\n      'buffer'\n    );\n    var kRegion = AWS.util.crypto.hmac(kDate, region, 'buffer');\n    var kService = AWS.util.crypto.hmac(kRegion, service, 'buffer');\n\n    var signingKey = AWS.util.crypto.hmac(kService, v4Identifier, 'buffer');\n    if (shouldCache) {\n      cachedSecret[cacheKey] = signingKey;\n      cacheQueue.push(cacheKey);\n      if (cacheQueue.length > maxCacheEntries) {\n        // remove the oldest entry (not the least recently used)\n        delete cachedSecret[cacheQueue.shift()];\n      }\n    }\n\n    return signingKey;\n  },\n\n  /**\n   * @api private\n   *\n   * Empties the derived signing key cache. Made available for testing purposes\n   * only.\n   */\n  emptyCache: function emptyCache() {\n    cachedSecret = {};\n    cacheQueue = [];\n  }\n};\n","var AWS = require('../core');\n\n/**\n * @api private\n */\nvar blobPayloadOutputOps = [\n  'deleteThingShadow',\n  'getThingShadow',\n  'updateThingShadow'\n];\n\n/**\n * Constructs a service interface object. Each API operation is exposed as a\n * function on service.\n *\n * ### Sending a Request Using IotData\n *\n * ```javascript\n * var iotdata = new AWS.IotData({endpoint: 'my.host.tld'});\n * iotdata.getThingShadow(params, function (err, data) {\n *   if (err) console.log(err, err.stack); // an error occurred\n *   else     console.log(data);           // successful response\n * });\n * ```\n *\n * ### Locking the API Version\n *\n * In order to ensure that the IotData object uses this specific API,\n * you can construct the object by passing the `apiVersion` option to the\n * constructor:\n *\n * ```javascript\n * var iotdata = new AWS.IotData({\n *   endpoint: 'my.host.tld',\n *   apiVersion: '2015-05-28'\n * });\n * ```\n *\n * You can also set the API version globally in `AWS.config.apiVersions` using\n * the **iotdata** service identifier:\n *\n * ```javascript\n * AWS.config.apiVersions = {\n *   iotdata: '2015-05-28',\n *   // other service API versions\n * };\n *\n * var iotdata = new AWS.IotData({endpoint: 'my.host.tld'});\n * ```\n *\n * @note You *must* provide an `endpoint` configuration parameter when\n *   constructing this service. See {constructor} for more information.\n *\n * @!method constructor(options = {})\n *   Constructs a service object. This object has one method for each\n *   API operation.\n *\n *   @example Constructing a IotData object\n *     var iotdata = new AWS.IotData({endpoint: 'my.host.tld'});\n *   @note You *must* provide an `endpoint` when constructing this service.\n *   @option (see AWS.Config.constructor)\n *\n * @service iotdata\n * @version 2015-05-28\n */\nAWS.util.update(AWS.IotData.prototype, {\n    /**\n     * @api private\n     */\n    validateService: function validateService() {\n        if (!this.config.endpoint || this.config.endpoint.indexOf('{') >= 0) {\n            var msg = 'AWS.IotData requires an explicit ' +\n                '`endpoint\\' configuration option.';\n            throw AWS.util.error(new Error(),\n                {name: 'InvalidEndpoint', message: msg});\n        }\n    },\n\n    /**\n     * @api private\n     */\n    setupRequestListeners: function setupRequestListeners(request) {\n        request.addListener('validateResponse', this.validateResponseBody);\n        if (blobPayloadOutputOps.indexOf(request.operation) > -1) {\n            request.addListener('extractData', AWS.util.convertPayloadToString);\n        }\n    },\n\n    /**\n     * @api private\n     */\n    validateResponseBody: function validateResponseBody(resp) {\n        var body = resp.httpResponse.body.toString() || '{}';\n        var bodyCheck = body.trim();\n        if (!bodyCheck || bodyCheck.charAt(0) !== '{') {\n            resp.httpResponse.body = '';\n        }\n    }\n\n});\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['iotanalytics'] = {};\nAWS.IoTAnalytics = Service.defineService('iotanalytics', ['2017-11-27']);\nObject.defineProperty(apiLoader.services['iotanalytics'], '2017-11-27', {\n  get: function get() {\n    var model = require('../apis/iotanalytics-2017-11-27.min.json');\n    model.paginators = require('../apis/iotanalytics-2017-11-27.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.IoTAnalytics;\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nvar expiresHeader = 'presigned-expires';\n\n/**\n * @api private\n */\nfunction signedUrlBuilder(request) {\n  var expires = request.httpRequest.headers[expiresHeader];\n  var signerClass = request.service.getSignerClass(request);\n\n  delete request.httpRequest.headers['User-Agent'];\n  delete request.httpRequest.headers['X-Amz-User-Agent'];\n\n  if (signerClass === AWS.Signers.V4) {\n    if (expires > 604800) { // one week expiry is invalid\n      var message = 'Presigning does not support expiry time greater ' +\n                    'than a week with SigV4 signing.';\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidExpiryTime', message: message, retryable: false\n      });\n    }\n    request.httpRequest.headers[expiresHeader] = expires;\n  } else if (signerClass === AWS.Signers.S3) {\n    var now = request.service ? request.service.getSkewCorrectedDate() : AWS.util.date.getDate();\n    request.httpRequest.headers[expiresHeader] = parseInt(\n      AWS.util.date.unixTimestamp(now) + expires, 10).toString();\n  } else {\n    throw AWS.util.error(new Error(), {\n      message: 'Presigning only supports S3 or SigV4 signing.',\n      code: 'UnsupportedSigner', retryable: false\n    });\n  }\n}\n\n/**\n * @api private\n */\nfunction signedUrlSigner(request) {\n  var endpoint = request.httpRequest.endpoint;\n  var parsedUrl = AWS.util.urlParse(request.httpRequest.path);\n  var queryParams = {};\n\n  if (parsedUrl.search) {\n    queryParams = AWS.util.queryStringParse(parsedUrl.search.substr(1));\n  }\n\n  var auth = request.httpRequest.headers['Authorization'].split(' ');\n  if (auth[0] === 'AWS') {\n    auth = auth[1].split(':');\n    queryParams['Signature'] = auth.pop();\n    queryParams['AWSAccessKeyId'] = auth.join(':');\n\n    AWS.util.each(request.httpRequest.headers, function (key, value) {\n      if (key === expiresHeader) key = 'Expires';\n      if (key.indexOf('x-amz-meta-') === 0) {\n        // Delete existing, potentially not normalized key\n        delete queryParams[key];\n        key = key.toLowerCase();\n      }\n      queryParams[key] = value;\n    });\n    delete request.httpRequest.headers[expiresHeader];\n    delete queryParams['Authorization'];\n    delete queryParams['Host'];\n  } else if (auth[0] === 'AWS4-HMAC-SHA256') { // SigV4 signing\n    auth.shift();\n    var rest = auth.join(' ');\n    var signature = rest.match(/Signature=(.*?)(?:,|\\s|\\r?\\n|$)/)[1];\n    queryParams['X-Amz-Signature'] = signature;\n    delete queryParams['Expires'];\n  }\n\n  // build URL\n  endpoint.pathname = parsedUrl.pathname;\n  endpoint.search = AWS.util.queryParamsToString(queryParams);\n}\n\n/**\n * @api private\n */\nAWS.Signers.Presign = inherit({\n  /**\n   * @api private\n   */\n  sign: function sign(request, expireTime, callback) {\n    request.httpRequest.headers[expiresHeader] = expireTime || 3600;\n    request.on('build', signedUrlBuilder);\n    request.on('sign', signedUrlSigner);\n    request.removeListener('afterBuild',\n      AWS.EventListeners.Core.SET_CONTENT_LENGTH);\n    request.removeListener('afterBuild',\n      AWS.EventListeners.Core.COMPUTE_SHA256);\n\n    request.emit('beforePresign', [request]);\n\n    if (callback) {\n      request.build(function() {\n        if (this.response.error) callback(this.response.error);\n        else {\n          callback(null, AWS.util.urlFormat(request.httpRequest.endpoint));\n        }\n      });\n    } else {\n      request.build();\n      if (request.response.error) throw request.response.error;\n      return AWS.util.urlFormat(request.httpRequest.endpoint);\n    }\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.Presign;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['elb'] = {};\nAWS.ELB = Service.defineService('elb', ['2012-06-01']);\nObject.defineProperty(apiLoader.services['elb'], '2012-06-01', {\n  get: function get() {\n    var model = require('../apis/elasticloadbalancing-2012-06-01.min.json');\n    model.paginators = require('../apis/elasticloadbalancing-2012-06-01.paginators.json').pagination;\n    model.waiters = require('../apis/elasticloadbalancing-2012-06-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ELB;\n","var AWS = require('../core');\n\nAWS.util.update(AWS.MachineLearning.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    if (request.operation === 'predict') {\n      request.addListener('build', this.buildEndpoint);\n    }\n  },\n\n  /**\n   * Updates request endpoint from PredictEndpoint\n   * @api private\n   */\n  buildEndpoint: function buildEndpoint(request) {\n    var url = request.params.PredictEndpoint;\n    if (url) {\n      request.httpRequest.endpoint = new AWS.Endpoint(url);\n    }\n  }\n\n});\n","var AWS = require('../core');\nvar util = AWS.util;\nvar typeOf = require('./types').typeOf;\nvar DynamoDBSet = require('./set');\nvar NumberValue = require('./numberValue');\n\nAWS.DynamoDB.Converter = {\n  /**\n   * Convert a JavaScript value to its equivalent DynamoDB AttributeValue type\n   *\n   * @param data [any] The data to convert to a DynamoDB AttributeValue\n   * @param options [map]\n   * @option options convertEmptyValues [Boolean] Whether to automatically\n   *                                              convert empty strings, blobs,\n   *                                              and sets to `null`\n   * @option options wrapNumbers [Boolean]  Whether to return numbers as a\n   *                                        NumberValue object instead of\n   *                                        converting them to native JavaScript\n   *                                        numbers. This allows for the safe\n   *                                        round-trip transport of numbers of\n   *                                        arbitrary size.\n   * @return [map] An object in the Amazon DynamoDB AttributeValue format\n   *\n   * @see AWS.DynamoDB.Converter.marshall AWS.DynamoDB.Converter.marshall to\n   *    convert entire records (rather than individual attributes)\n   */\n  input: function convertInput(data, options) {\n    options = options || {};\n    var type = typeOf(data);\n    if (type === 'Object') {\n      return formatMap(data, options);\n    } else if (type === 'Array') {\n      return formatList(data, options);\n    } else if (type === 'Set') {\n      return formatSet(data, options);\n    } else if (type === 'String') {\n      if (data.length === 0 && options.convertEmptyValues) {\n        return convertInput(null);\n      }\n      return { S: data };\n    } else if (type === 'Number' || type === 'NumberValue') {\n      return { N: data.toString() };\n    } else if (type === 'Binary') {\n      if (data.length === 0 && options.convertEmptyValues) {\n        return convertInput(null);\n      }\n      return { B: data };\n    } else if (type === 'Boolean') {\n      return { BOOL: data };\n    } else if (type === 'null') {\n      return { NULL: true };\n    } else if (type !== 'undefined' && type !== 'Function') {\n      // this value has a custom constructor\n      return formatMap(data, options);\n    }\n  },\n\n  /**\n   * Convert a JavaScript object into a DynamoDB record.\n   *\n   * @param data [any] The data to convert to a DynamoDB record\n   * @param options [map]\n   * @option options convertEmptyValues [Boolean] Whether to automatically\n   *                                              convert empty strings, blobs,\n   *                                              and sets to `null`\n   * @option options wrapNumbers [Boolean]  Whether to return numbers as a\n   *                                        NumberValue object instead of\n   *                                        converting them to native JavaScript\n   *                                        numbers. This allows for the safe\n   *                                        round-trip transport of numbers of\n   *                                        arbitrary size.\n   *\n   * @return [map] An object in the DynamoDB record format.\n   *\n   * @example Convert a JavaScript object into a DynamoDB record\n   *  var marshalled = AWS.DynamoDB.Converter.marshall({\n   *    string: 'foo',\n   *    list: ['fizz', 'buzz', 'pop'],\n   *    map: {\n   *      nestedMap: {\n   *        key: 'value',\n   *      }\n   *    },\n   *    number: 123,\n   *    nullValue: null,\n   *    boolValue: true,\n   *    stringSet: new DynamoDBSet(['foo', 'bar', 'baz'])\n   *  });\n   */\n  marshall: function marshallItem(data, options) {\n    return AWS.DynamoDB.Converter.input(data, options).M;\n  },\n\n  /**\n   * Convert a DynamoDB AttributeValue object to its equivalent JavaScript type.\n   *\n   * @param data [map] An object in the Amazon DynamoDB AttributeValue format\n   * @param options [map]\n   * @option options convertEmptyValues [Boolean] Whether to automatically\n   *                                              convert empty strings, blobs,\n   *                                              and sets to `null`\n   * @option options wrapNumbers [Boolean]  Whether to return numbers as a\n   *                                        NumberValue object instead of\n   *                                        converting them to native JavaScript\n   *                                        numbers. This allows for the safe\n   *                                        round-trip transport of numbers of\n   *                                        arbitrary size.\n   *\n   * @return [Object|Array|String|Number|Boolean|null]\n   *\n   * @see AWS.DynamoDB.Converter.unmarshall AWS.DynamoDB.Converter.unmarshall to\n   *    convert entire records (rather than individual attributes)\n   */\n  output: function convertOutput(data, options) {\n    options = options || {};\n    var list, map, i;\n    for (var type in data) {\n      var values = data[type];\n      if (type === 'M') {\n        map = {};\n        for (var key in values) {\n          map[key] = convertOutput(values[key], options);\n        }\n        return map;\n      } else if (type === 'L') {\n        list = [];\n        for (i = 0; i < values.length; i++) {\n          list.push(convertOutput(values[i], options));\n        }\n        return list;\n      } else if (type === 'SS') {\n        list = [];\n        for (i = 0; i < values.length; i++) {\n          list.push(values[i] + '');\n        }\n        return new DynamoDBSet(list);\n      } else if (type === 'NS') {\n        list = [];\n        for (i = 0; i < values.length; i++) {\n          list.push(convertNumber(values[i], options.wrapNumbers));\n        }\n        return new DynamoDBSet(list);\n      } else if (type === 'BS') {\n        list = [];\n        for (i = 0; i < values.length; i++) {\n          list.push(AWS.util.buffer.toBuffer(values[i]));\n        }\n        return new DynamoDBSet(list);\n      } else if (type === 'S') {\n        return values + '';\n      } else if (type === 'N') {\n        return convertNumber(values, options.wrapNumbers);\n      } else if (type === 'B') {\n        return util.buffer.toBuffer(values);\n      } else if (type === 'BOOL') {\n        return (values === 'true' || values === 'TRUE' || values === true);\n      } else if (type === 'NULL') {\n        return null;\n      }\n    }\n  },\n\n  /**\n   * Convert a DynamoDB record into a JavaScript object.\n   *\n   * @param data [any] The DynamoDB record\n   * @param options [map]\n   * @option options convertEmptyValues [Boolean] Whether to automatically\n   *                                              convert empty strings, blobs,\n   *                                              and sets to `null`\n   * @option options wrapNumbers [Boolean]  Whether to return numbers as a\n   *                                        NumberValue object instead of\n   *                                        converting them to native JavaScript\n   *                                        numbers. This allows for the safe\n   *                                        round-trip transport of numbers of\n   *                                        arbitrary size.\n   *\n   * @return [map] An object whose properties have been converted from\n   *    DynamoDB's AttributeValue format into their corresponding native\n   *    JavaScript types.\n   *\n   * @example Convert a record received from a DynamoDB stream\n   *  var unmarshalled = AWS.DynamoDB.Converter.unmarshall({\n   *    string: {S: 'foo'},\n   *    list: {L: [{S: 'fizz'}, {S: 'buzz'}, {S: 'pop'}]},\n   *    map: {\n   *      M: {\n   *        nestedMap: {\n   *          M: {\n   *            key: {S: 'value'}\n   *          }\n   *        }\n   *      }\n   *    },\n   *    number: {N: '123'},\n   *    nullValue: {NULL: true},\n   *    boolValue: {BOOL: true}\n   *  });\n   */\n  unmarshall: function unmarshall(data, options) {\n    return AWS.DynamoDB.Converter.output({M: data}, options);\n  }\n};\n\n/**\n * @api private\n * @param data [Array]\n * @param options [map]\n */\nfunction formatList(data, options) {\n  var list = {L: []};\n  for (var i = 0; i < data.length; i++) {\n    list['L'].push(AWS.DynamoDB.Converter.input(data[i], options));\n  }\n  return list;\n}\n\n/**\n * @api private\n * @param value [String]\n * @param wrapNumbers [Boolean]\n */\nfunction convertNumber(value, wrapNumbers) {\n  return wrapNumbers ? new NumberValue(value) : Number(value);\n}\n\n/**\n * @api private\n * @param data [map]\n * @param options [map]\n */\nfunction formatMap(data, options) {\n  var map = {M: {}};\n  for (var key in data) {\n    var formatted = AWS.DynamoDB.Converter.input(data[key], options);\n    if (formatted !== void 0) {\n      map['M'][key] = formatted;\n    }\n  }\n  return map;\n}\n\n/**\n * @api private\n */\nfunction formatSet(data, options) {\n  options = options || {};\n  var values = data.values;\n  if (options.convertEmptyValues) {\n    values = filterEmptySetValues(data);\n    if (values.length === 0) {\n      return AWS.DynamoDB.Converter.input(null);\n    }\n  }\n\n  var map = {};\n  switch (data.type) {\n    case 'String': map['SS'] = values; break;\n    case 'Binary': map['BS'] = values; break;\n    case 'Number': map['NS'] = values.map(function (value) {\n      return value.toString();\n    });\n  }\n  return map;\n}\n\n/**\n * @api private\n */\nfunction filterEmptySetValues(set) {\n    var nonEmptyValues = [];\n    var potentiallyEmptyTypes = {\n        String: true,\n        Binary: true,\n        Number: false\n    };\n    if (potentiallyEmptyTypes[set.type]) {\n        for (var i = 0; i < set.values.length; i++) {\n            if (set.values[i].length === 0) {\n                continue;\n            }\n            nonEmptyValues.push(set.values[i]);\n        }\n\n        return nonEmptyValues;\n    }\n\n    return set.values;\n}\n\n/**\n * @api private\n */\nmodule.exports = AWS.DynamoDB.Converter;\n","require('../lib/node_loader');\nmodule.exports = {\n  ACM: require('./acm'),\n  APIGateway: require('./apigateway'),\n  ApplicationAutoScaling: require('./applicationautoscaling'),\n  AutoScaling: require('./autoscaling'),\n  CloudFormation: require('./cloudformation'),\n  CloudFront: require('./cloudfront'),\n  CloudHSM: require('./cloudhsm'),\n  CloudTrail: require('./cloudtrail'),\n  CloudWatch: require('./cloudwatch'),\n  CloudWatchEvents: require('./cloudwatchevents'),\n  CloudWatchLogs: require('./cloudwatchlogs'),\n  CodeBuild: require('./codebuild'),\n  CodeCommit: require('./codecommit'),\n  CodeDeploy: require('./codedeploy'),\n  CodePipeline: require('./codepipeline'),\n  CognitoIdentity: require('./cognitoidentity'),\n  CognitoIdentityServiceProvider: require('./cognitoidentityserviceprovider'),\n  CognitoSync: require('./cognitosync'),\n  ConfigService: require('./configservice'),\n  CUR: require('./cur'),\n  DeviceFarm: require('./devicefarm'),\n  DirectConnect: require('./directconnect'),\n  DynamoDB: require('./dynamodb'),\n  DynamoDBStreams: require('./dynamodbstreams'),\n  EC2: require('./ec2'),\n  ECR: require('./ecr'),\n  ECS: require('./ecs'),\n  EFS: require('./efs'),\n  ElastiCache: require('./elasticache'),\n  ElasticBeanstalk: require('./elasticbeanstalk'),\n  ELB: require('./elb'),\n  ELBv2: require('./elbv2'),\n  EMR: require('./emr'),\n  ElasticTranscoder: require('./elastictranscoder'),\n  Firehose: require('./firehose'),\n  GameLift: require('./gamelift'),\n  IAM: require('./iam'),\n  Inspector: require('./inspector'),\n  Iot: require('./iot'),\n  IotData: require('./iotdata'),\n  Kinesis: require('./kinesis'),\n  KMS: require('./kms'),\n  Lambda: require('./lambda'),\n  LexRuntime: require('./lexruntime'),\n  MachineLearning: require('./machinelearning'),\n  MarketplaceCommerceAnalytics: require('./marketplacecommerceanalytics'),\n  MTurk: require('./mturk'),\n  MobileAnalytics: require('./mobileanalytics'),\n  OpsWorks: require('./opsworks'),\n  Polly: require('./polly'),\n  RDS: require('./rds'),\n  Redshift: require('./redshift'),\n  Rekognition: require('./rekognition'),\n  Route53: require('./route53'),\n  Route53Domains: require('./route53domains'),\n  S3: require('./s3'),\n  ServiceCatalog: require('./servicecatalog'),\n  SES: require('./ses'),\n  SNS: require('./sns'),\n  SQS: require('./sqs'),\n  SSM: require('./ssm'),\n  StorageGateway: require('./storagegateway'),\n  STS: require('./sts'),\n  XRay: require('./xray'),\n  WAF: require('./waf'),\n  WorkDocs: require('./workdocs'),\n  LexModelBuildingService: require('./lexmodelbuildingservice'),\n  Pricing: require('./pricing'),\n  CostExplorer: require('./costexplorer'),\n  MediaStoreData: require('./mediastoredata'),\n  Comprehend: require('./comprehend'),\n  KinesisVideoArchivedMedia: require('./kinesisvideoarchivedmedia'),\n  KinesisVideoMedia: require('./kinesisvideomedia'),\n  KinesisVideo: require('./kinesisvideo'),\n  Translate: require('./translate'),\n  ResourceGroups: require('./resourcegroups'),\n  Connect: require('./connect'),\n  SecretsManager: require('./secretsmanager'),\n  IoTAnalytics: require('./iotanalytics'),\n  ComprehendMedical: require('./comprehendmedical'),\n  Personalize: require('./personalize'),\n  PersonalizeEvents: require('./personalizeevents'),\n  PersonalizeRuntime: require('./personalizeruntime'),\n  ForecastService: require('./forecastservice'),\n  ForecastQueryService: require('./forecastqueryservice'),\n  KinesisVideoSignalingChannels: require('./kinesisvideosignalingchannels')\n};","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['codepipeline'] = {};\nAWS.CodePipeline = Service.defineService('codepipeline', ['2015-07-09']);\nObject.defineProperty(apiLoader.services['codepipeline'], '2015-07-09', {\n  get: function get() {\n    var model = require('../apis/codepipeline-2015-07-09.min.json');\n    model.paginators = require('../apis/codepipeline-2015-07-09.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CodePipeline;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['kinesis'] = {};\nAWS.Kinesis = Service.defineService('kinesis', ['2013-12-02']);\nObject.defineProperty(apiLoader.services['kinesis'], '2013-12-02', {\n  get: function get() {\n    var model = require('../apis/kinesis-2013-12-02.min.json');\n    model.paginators = require('../apis/kinesis-2013-12-02.paginators.json').pagination;\n    model.waiters = require('../apis/kinesis-2013-12-02.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Kinesis;\n","var util = require('../util');\n\nfunction JsonBuilder() { }\n\nJsonBuilder.prototype.build = function(value, shape) {\n  return JSON.stringify(translate(value, shape));\n};\n\nfunction translate(value, shape) {\n  if (!shape || value === undefined || value === null) return undefined;\n\n  switch (shape.type) {\n    case 'structure': return translateStructure(value, shape);\n    case 'map': return translateMap(value, shape);\n    case 'list': return translateList(value, shape);\n    default: return translateScalar(value, shape);\n  }\n}\n\nfunction translateStructure(structure, shape) {\n  var struct = {};\n  util.each(structure, function(name, value) {\n    var memberShape = shape.members[name];\n    if (memberShape) {\n      if (memberShape.location !== 'body') return;\n      var locationName = memberShape.isLocationName ? memberShape.name : name;\n      var result = translate(value, memberShape);\n      if (result !== undefined) struct[locationName] = result;\n    }\n  });\n  return struct;\n}\n\nfunction translateList(list, shape) {\n  var out = [];\n  util.arrayEach(list, function(value) {\n    var result = translate(value, shape.member);\n    if (result !== undefined) out.push(result);\n  });\n  return out;\n}\n\nfunction translateMap(map, shape) {\n  var out = {};\n  util.each(map, function(key, value) {\n    var result = translate(value, shape.value);\n    if (result !== undefined) out[key] = result;\n  });\n  return out;\n}\n\nfunction translateScalar(value, shape) {\n  return shape.toWireFormat(value);\n}\n\n/**\n * @api private\n */\nmodule.exports = JsonBuilder;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['emr'] = {};\nAWS.EMR = Service.defineService('emr', ['2009-03-31']);\nObject.defineProperty(apiLoader.services['emr'], '2009-03-31', {\n  get: function get() {\n    var model = require('../apis/elasticmapreduce-2009-03-31.min.json');\n    model.paginators = require('../apis/elasticmapreduce-2009-03-31.paginators.json').pagination;\n    model.waiters = require('../apis/elasticmapreduce-2009-03-31.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.EMR;\n","var AWS = require('../core');\n\nAWS.util.update(AWS.CognitoIdentity.prototype, {\n  getOpenIdToken: function getOpenIdToken(params, callback) {\n    return this.makeUnauthenticatedRequest('getOpenIdToken', params, callback);\n  },\n\n  getId: function getId(params, callback) {\n    return this.makeUnauthenticatedRequest('getId', params, callback);\n  },\n\n  getCredentialsForIdentity: function getCredentialsForIdentity(params, callback) {\n    return this.makeUnauthenticatedRequest('getCredentialsForIdentity', params, callback);\n  }\n});\n","var util = require('../util');\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\n\nfunction populateMethod(req) {\n  req.httpRequest.method = req.service.api.operations[req.operation].httpMethod;\n}\n\nfunction generateURI(endpointPath, operationPath, input, params) {\n  var uri = [endpointPath, operationPath].join('/');\n  uri = uri.replace(/\\/+/g, '/');\n\n  var queryString = {}, queryStringSet = false;\n  util.each(input.members, function (name, member) {\n    var paramValue = params[name];\n    if (paramValue === null || paramValue === undefined) return;\n    if (member.location === 'uri') {\n      var regex = new RegExp('\\\\{' + member.name + '(\\\\+)?\\\\}');\n      uri = uri.replace(regex, function(_, plus) {\n        var fn = plus ? util.uriEscapePath : util.uriEscape;\n        return fn(String(paramValue));\n      });\n    } else if (member.location === 'querystring') {\n      queryStringSet = true;\n\n      if (member.type === 'list') {\n        queryString[member.name] = paramValue.map(function(val) {\n          return util.uriEscape(member.member.toWireFormat(val).toString());\n        });\n      } else if (member.type === 'map') {\n        util.each(paramValue, function(key, value) {\n          if (Array.isArray(value)) {\n            queryString[key] = value.map(function(val) {\n              return util.uriEscape(String(val));\n            });\n          } else {\n            queryString[key] = util.uriEscape(String(value));\n          }\n        });\n      } else {\n        queryString[member.name] = util.uriEscape(member.toWireFormat(paramValue).toString());\n      }\n    }\n  });\n\n  if (queryStringSet) {\n    uri += (uri.indexOf('?') >= 0 ? '&' : '?');\n    var parts = [];\n    util.arrayEach(Object.keys(queryString).sort(), function(key) {\n      if (!Array.isArray(queryString[key])) {\n        queryString[key] = [queryString[key]];\n      }\n      for (var i = 0; i < queryString[key].length; i++) {\n        parts.push(util.uriEscape(String(key)) + '=' + queryString[key][i]);\n      }\n    });\n    uri += parts.join('&');\n  }\n\n  return uri;\n}\n\nfunction populateURI(req) {\n  var operation = req.service.api.operations[req.operation];\n  var input = operation.input;\n\n  var uri = generateURI(req.httpRequest.endpoint.path, operation.httpPath, input, req.params);\n  req.httpRequest.path = uri;\n}\n\nfunction populateHeaders(req) {\n  var operation = req.service.api.operations[req.operation];\n  util.each(operation.input.members, function (name, member) {\n    var value = req.params[name];\n    if (value === null || value === undefined) return;\n\n    if (member.location === 'headers' && member.type === 'map') {\n      util.each(value, function(key, memberValue) {\n        req.httpRequest.headers[member.name + key] = memberValue;\n      });\n    } else if (member.location === 'header') {\n      value = member.toWireFormat(value).toString();\n      if (member.isJsonValue) {\n        value = util.base64.encode(value);\n      }\n      req.httpRequest.headers[member.name] = value;\n    }\n  });\n}\n\nfunction buildRequest(req) {\n  populateMethod(req);\n  populateURI(req);\n  populateHeaders(req);\n  populateHostPrefix(req);\n}\n\nfunction extractError() {\n}\n\nfunction extractData(resp) {\n  var req = resp.request;\n  var data = {};\n  var r = resp.httpResponse;\n  var operation = req.service.api.operations[req.operation];\n  var output = operation.output;\n\n  // normalize headers names to lower-cased keys for matching\n  var headers = {};\n  util.each(r.headers, function (k, v) {\n    headers[k.toLowerCase()] = v;\n  });\n\n  util.each(output.members, function(name, member) {\n    var header = (member.name || name).toLowerCase();\n    if (member.location === 'headers' && member.type === 'map') {\n      data[name] = {};\n      var location = member.isLocationName ? member.name : '';\n      var pattern = new RegExp('^' + location + '(.+)', 'i');\n      util.each(r.headers, function (k, v) {\n        var result = k.match(pattern);\n        if (result !== null) {\n          data[name][result[1]] = v;\n        }\n      });\n    } else if (member.location === 'header') {\n      if (headers[header] !== undefined) {\n        var value = member.isJsonValue ?\n          util.base64.decode(headers[header]) :\n          headers[header];\n        data[name] = member.toType(value);\n      }\n    } else if (member.location === 'statusCode') {\n      data[name] = parseInt(r.statusCode, 10);\n    }\n  });\n\n  resp.data = data;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData,\n  generateURI: generateURI\n};\n","var AWS = require('../core');\nvar v4Credentials = require('./v4_credentials');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nvar expiresHeader = 'presigned-expires';\n\n/**\n * @api private\n */\nAWS.Signers.V4 = inherit(AWS.Signers.RequestSigner, {\n  constructor: function V4(request, serviceName, options) {\n    AWS.Signers.RequestSigner.call(this, request);\n    this.serviceName = serviceName;\n    options = options || {};\n    this.signatureCache = typeof options.signatureCache === 'boolean' ? options.signatureCache : true;\n    this.operation = options.operation;\n    this.signatureVersion = options.signatureVersion;\n  },\n\n  algorithm: 'AWS4-HMAC-SHA256',\n\n  addAuthorization: function addAuthorization(credentials, date) {\n    var datetime = AWS.util.date.iso8601(date).replace(/[:\\-]|\\.\\d{3}/g, '');\n\n    if (this.isPresigned()) {\n      this.updateForPresigned(credentials, datetime);\n    } else {\n      this.addHeaders(credentials, datetime);\n    }\n\n    this.request.headers['Authorization'] =\n      this.authorization(credentials, datetime);\n  },\n\n  addHeaders: function addHeaders(credentials, datetime) {\n    this.request.headers['X-Amz-Date'] = datetime;\n    if (credentials.sessionToken) {\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n  },\n\n  updateForPresigned: function updateForPresigned(credentials, datetime) {\n    var credString = this.credentialString(datetime);\n    var qs = {\n      'X-Amz-Date': datetime,\n      'X-Amz-Algorithm': this.algorithm,\n      'X-Amz-Credential': credentials.accessKeyId + '/' + credString,\n      'X-Amz-Expires': this.request.headers[expiresHeader],\n      'X-Amz-SignedHeaders': this.signedHeaders()\n    };\n\n    if (credentials.sessionToken) {\n      qs['X-Amz-Security-Token'] = credentials.sessionToken;\n    }\n\n    if (this.request.headers['Content-Type']) {\n      qs['Content-Type'] = this.request.headers['Content-Type'];\n    }\n    if (this.request.headers['Content-MD5']) {\n      qs['Content-MD5'] = this.request.headers['Content-MD5'];\n    }\n    if (this.request.headers['Cache-Control']) {\n      qs['Cache-Control'] = this.request.headers['Cache-Control'];\n    }\n\n    // need to pull in any other X-Amz-* headers\n    AWS.util.each.call(this, this.request.headers, function(key, value) {\n      if (key === expiresHeader) return;\n      if (this.isSignableHeader(key)) {\n        var lowerKey = key.toLowerCase();\n        // Metadata should be normalized\n        if (lowerKey.indexOf('x-amz-meta-') === 0) {\n          qs[lowerKey] = value;\n        } else if (lowerKey.indexOf('x-amz-') === 0) {\n          qs[key] = value;\n        }\n      }\n    });\n\n    var sep = this.request.path.indexOf('?') >= 0 ? '&' : '?';\n    this.request.path += sep + AWS.util.queryParamsToString(qs);\n  },\n\n  authorization: function authorization(credentials, datetime) {\n    var parts = [];\n    var credString = this.credentialString(datetime);\n    parts.push(this.algorithm + ' Credential=' +\n      credentials.accessKeyId + '/' + credString);\n    parts.push('SignedHeaders=' + this.signedHeaders());\n    parts.push('Signature=' + this.signature(credentials, datetime));\n    return parts.join(', ');\n  },\n\n  signature: function signature(credentials, datetime) {\n    var signingKey = v4Credentials.getSigningKey(\n      credentials,\n      datetime.substr(0, 8),\n      this.request.region,\n      this.serviceName,\n      this.signatureCache\n    );\n    return AWS.util.crypto.hmac(signingKey, this.stringToSign(datetime), 'hex');\n  },\n\n  stringToSign: function stringToSign(datetime) {\n    var parts = [];\n    parts.push('AWS4-HMAC-SHA256');\n    parts.push(datetime);\n    parts.push(this.credentialString(datetime));\n    parts.push(this.hexEncodedHash(this.canonicalString()));\n    return parts.join('\\n');\n  },\n\n  canonicalString: function canonicalString() {\n    var parts = [], pathname = this.request.pathname();\n    if (this.serviceName !== 's3' && this.signatureVersion !== 's3v4') pathname = AWS.util.uriEscapePath(pathname);\n\n    parts.push(this.request.method);\n    parts.push(pathname);\n    parts.push(this.request.search());\n    parts.push(this.canonicalHeaders() + '\\n');\n    parts.push(this.signedHeaders());\n    parts.push(this.hexEncodedBodyHash());\n    return parts.join('\\n');\n  },\n\n  canonicalHeaders: function canonicalHeaders() {\n    var headers = [];\n    AWS.util.each.call(this, this.request.headers, function (key, item) {\n      headers.push([key, item]);\n    });\n    headers.sort(function (a, b) {\n      return a[0].toLowerCase() < b[0].toLowerCase() ? -1 : 1;\n    });\n    var parts = [];\n    AWS.util.arrayEach.call(this, headers, function (item) {\n      var key = item[0].toLowerCase();\n      if (this.isSignableHeader(key)) {\n        var value = item[1];\n        if (typeof value === 'undefined' || value === null || typeof value.toString !== 'function') {\n          throw AWS.util.error(new Error('Header ' + key + ' contains invalid value'), {\n            code: 'InvalidHeader'\n          });\n        }\n        parts.push(key + ':' +\n          this.canonicalHeaderValues(value.toString()));\n      }\n    });\n    return parts.join('\\n');\n  },\n\n  canonicalHeaderValues: function canonicalHeaderValues(values) {\n    return values.replace(/\\s+/g, ' ').replace(/^\\s+|\\s+$/g, '');\n  },\n\n  signedHeaders: function signedHeaders() {\n    var keys = [];\n    AWS.util.each.call(this, this.request.headers, function (key) {\n      key = key.toLowerCase();\n      if (this.isSignableHeader(key)) keys.push(key);\n    });\n    return keys.sort().join(';');\n  },\n\n  credentialString: function credentialString(datetime) {\n    return v4Credentials.createScope(\n      datetime.substr(0, 8),\n      this.request.region,\n      this.serviceName\n    );\n  },\n\n  hexEncodedHash: function hash(string) {\n    return AWS.util.crypto.sha256(string, 'hex');\n  },\n\n  hexEncodedBodyHash: function hexEncodedBodyHash() {\n    var request = this.request;\n    if (this.isPresigned() && this.serviceName === 's3' && !request.body) {\n      return 'UNSIGNED-PAYLOAD';\n    } else if (request.headers['X-Amz-Content-Sha256']) {\n      return request.headers['X-Amz-Content-Sha256'];\n    } else {\n      return this.hexEncodedHash(this.request.body || '');\n    }\n  },\n\n  unsignableHeaders: [\n    'authorization',\n    'content-type',\n    'content-length',\n    'user-agent',\n    expiresHeader,\n    'expect',\n    'x-amzn-trace-id'\n  ],\n\n  isSignableHeader: function isSignableHeader(key) {\n    if (key.toLowerCase().indexOf('x-amz-') === 0) return true;\n    return this.unsignableHeaders.indexOf(key) < 0;\n  },\n\n  isPresigned: function isPresigned() {\n    return this.request.headers[expiresHeader] ? true : false;\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V4;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['comprehend'] = {};\nAWS.Comprehend = Service.defineService('comprehend', ['2017-11-27']);\nObject.defineProperty(apiLoader.services['comprehend'], '2017-11-27', {\n  get: function get() {\n    var model = require('../apis/comprehend-2017-11-27.min.json');\n    model.paginators = require('../apis/comprehend-2017-11-27.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Comprehend;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['forecastservice'] = {};\nAWS.ForecastService = Service.defineService('forecastservice', ['2018-06-26']);\nObject.defineProperty(apiLoader.services['forecastservice'], '2018-06-26', {\n  get: function get() {\n    var model = require('../apis/forecast-2018-06-26.min.json');\n    model.paginators = require('../apis/forecast-2018-06-26.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ForecastService;\n","var util = require('../core').util;\n\n/**\n * An object recognizable as a numeric value that stores the underlying number\n * as a string.\n *\n * Intended to be a deserialization target for the DynamoDB Document Client when\n * the `wrapNumbers` flag is set. This allows for numeric values that lose\n * precision when converted to JavaScript's `number` type.\n */\nvar DynamoDBNumberValue = util.inherit({\n  constructor: function NumberValue(value) {\n    this.wrapperName = 'NumberValue';\n    this.value = value.toString();\n  },\n\n  /**\n   * Render the underlying value as a number when converting to JSON.\n   */\n  toJSON: function () {\n    return this.toNumber();\n  },\n\n  /**\n   * Convert the underlying value to a JavaScript number.\n   */\n  toNumber: function () {\n    return Number(this.value);\n  },\n\n  /**\n   * Return a string representing the unaltered value provided to the\n   * constructor.\n   */\n  toString: function () {\n    return this.value;\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = DynamoDBNumberValue;\n","var AWS = require('../core');\n\nAWS.util.update(AWS.EC2.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.removeListener('extractError', AWS.EventListeners.Query.EXTRACT_ERROR);\n    request.addListener('extractError', this.extractError);\n\n    if (request.operation === 'copySnapshot') {\n      request.onAsync('validate', this.buildCopySnapshotPresignedUrl);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  buildCopySnapshotPresignedUrl: function buildCopySnapshotPresignedUrl(req, done) {\n    if (req.params.PresignedUrl || req._subRequest) {\n      return done();\n    }\n\n    req.params = AWS.util.copy(req.params);\n    req.params.DestinationRegion = req.service.config.region;\n\n    var config = AWS.util.copy(req.service.config);\n    delete config.endpoint;\n    config.region = req.params.SourceRegion;\n    var svc = new req.service.constructor(config);\n    var newReq = svc[req.operation](req.params);\n    newReq._subRequest = true;\n    newReq.presign(function(err, url) {\n      if (err) done(err);\n      else {\n        req.params.PresignedUrl = url;\n        done();\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  extractError: function extractError(resp) {\n    // EC2 nests the error code and message deeper than other AWS Query services.\n    var httpResponse = resp.httpResponse;\n    var data = new AWS.XML.Parser().parse(httpResponse.body.toString() || '');\n    if (data.Errors) {\n      resp.error = AWS.util.error(new Error(), {\n        code: data.Errors.Error.Code,\n        message: data.Errors.Error.Message\n      });\n    } else {\n      resp.error = AWS.util.error(new Error(), {\n        code: httpResponse.statusCode,\n        message: null\n      });\n    }\n    resp.error.requestId = data.RequestID || null;\n  }\n});\n","var AWS = require('../core');\nvar EventEmitter = require('events').EventEmitter;\nrequire('../http');\n\n/**\n * @api private\n */\nAWS.XHRClient = AWS.util.inherit({\n  handleRequest: function handleRequest(httpRequest, httpOptions, callback, errCallback) {\n    var self = this;\n    var endpoint = httpRequest.endpoint;\n    var emitter = new EventEmitter();\n    var href = endpoint.protocol + '//' + endpoint.hostname;\n    if (endpoint.port !== 80 && endpoint.port !== 443) {\n      href += ':' + endpoint.port;\n    }\n    href += httpRequest.path;\n\n    var xhr = new XMLHttpRequest(), headersEmitted = false;\n    httpRequest.stream = xhr;\n\n    xhr.addEventListener('readystatechange', function() {\n      try {\n        if (xhr.status === 0) return; // 0 code is invalid\n      } catch (e) { return; }\n\n      if (this.readyState >= this.HEADERS_RECEIVED && !headersEmitted) {\n        emitter.statusCode = xhr.status;\n        emitter.headers = self.parseHeaders(xhr.getAllResponseHeaders());\n        emitter.emit(\n          'headers',\n          emitter.statusCode,\n          emitter.headers,\n          xhr.statusText\n        );\n        headersEmitted = true;\n      }\n      if (this.readyState === this.DONE) {\n        self.finishRequest(xhr, emitter);\n      }\n    }, false);\n    xhr.upload.addEventListener('progress', function (evt) {\n      emitter.emit('sendProgress', evt);\n    });\n    xhr.addEventListener('progress', function (evt) {\n      emitter.emit('receiveProgress', evt);\n    }, false);\n    xhr.addEventListener('timeout', function () {\n      errCallback(AWS.util.error(new Error('Timeout'), {code: 'TimeoutError'}));\n    }, false);\n    xhr.addEventListener('error', function () {\n      errCallback(AWS.util.error(new Error('Network Failure'), {\n        code: 'NetworkingError'\n      }));\n    }, false);\n    xhr.addEventListener('abort', function () {\n      errCallback(AWS.util.error(new Error('Request aborted'), {\n        code: 'RequestAbortedError'\n      }));\n    }, false);\n\n    callback(emitter);\n    xhr.open(httpRequest.method, href, httpOptions.xhrAsync !== false);\n    AWS.util.each(httpRequest.headers, function (key, value) {\n      if (key !== 'Content-Length' && key !== 'User-Agent' && key !== 'Host') {\n        xhr.setRequestHeader(key, value);\n      }\n    });\n\n    if (httpOptions.timeout && httpOptions.xhrAsync !== false) {\n      xhr.timeout = httpOptions.timeout;\n    }\n\n    if (httpOptions.xhrWithCredentials) {\n      xhr.withCredentials = true;\n    }\n    try { xhr.responseType = 'arraybuffer'; } catch (e) {}\n\n    try {\n      if (httpRequest.body) {\n        xhr.send(httpRequest.body);\n      } else {\n        xhr.send();\n      }\n    } catch (err) {\n      if (httpRequest.body && typeof httpRequest.body.buffer === 'object') {\n        xhr.send(httpRequest.body.buffer); // send ArrayBuffer directly\n      } else {\n        throw err;\n      }\n    }\n\n    return emitter;\n  },\n\n  parseHeaders: function parseHeaders(rawHeaders) {\n    var headers = {};\n    AWS.util.arrayEach(rawHeaders.split(/\\r?\\n/), function (line) {\n      var key = line.split(':', 1)[0];\n      var value = line.substring(key.length + 2);\n      if (key.length > 0) headers[key.toLowerCase()] = value;\n    });\n    return headers;\n  },\n\n  finishRequest: function finishRequest(xhr, emitter) {\n    var buffer;\n    if (xhr.responseType === 'arraybuffer' && xhr.response) {\n      var ab = xhr.response;\n      buffer = new AWS.util.Buffer(ab.byteLength);\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n      }\n    }\n\n    try {\n      if (!buffer && typeof xhr.responseText === 'string') {\n        buffer = new AWS.util.Buffer(xhr.responseText);\n      }\n    } catch (e) {}\n\n    if (buffer) emitter.emit('data', buffer);\n    emitter.emit('end');\n  }\n});\n\n/**\n * @api private\n */\nAWS.HttpClient.prototype = AWS.XHRClient.prototype;\n\n/**\n * @api private\n */\nAWS.HttpClient.streamsApiVersion = 1;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['codebuild'] = {};\nAWS.CodeBuild = Service.defineService('codebuild', ['2016-10-06']);\nObject.defineProperty(apiLoader.services['codebuild'], '2016-10-06', {\n  get: function get() {\n    var model = require('../apis/codebuild-2016-10-06.min.json');\n    model.paginators = require('../apis/codebuild-2016-10-06.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CodeBuild;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['lexruntime'] = {};\nAWS.LexRuntime = Service.defineService('lexruntime', ['2016-11-28']);\nObject.defineProperty(apiLoader.services['lexruntime'], '2016-11-28', {\n  get: function get() {\n    var model = require('../apis/runtime.lex-2016-11-28.min.json');\n    model.paginators = require('../apis/runtime.lex-2016-11-28.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.LexRuntime;\n","var AWS = require('../core');\n\nAWS.util.update(AWS.Lambda.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    if (request.operation === 'invoke') {\n      request.addListener('extractData', AWS.util.convertPayloadToString);\n    }\n  }\n});\n\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['firehose'] = {};\nAWS.Firehose = Service.defineService('firehose', ['2015-08-04']);\nObject.defineProperty(apiLoader.services['firehose'], '2015-08-04', {\n  get: function get() {\n    var model = require('../apis/firehose-2015-08-04.min.json');\n    model.paginators = require('../apis/firehose-2015-08-04.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Firehose;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['kinesisvideomedia'] = {};\nAWS.KinesisVideoMedia = Service.defineService('kinesisvideomedia', ['2017-09-30']);\nObject.defineProperty(apiLoader.services['kinesisvideomedia'], '2017-09-30', {\n  get: function get() {\n    var model = require('../apis/kinesis-video-media-2017-09-30.min.json');\n    model.paginators = require('../apis/kinesis-video-media-2017-09-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.KinesisVideoMedia;\n","var eventMessageChunker = require('../event-stream/event-message-chunker').eventMessageChunker;\nvar parseEvent = require('./parse-event').parseEvent;\n\nfunction createEventStream(body, parser, model) {\n    var eventMessages = eventMessageChunker(body);\n\n    var events = [];\n\n    for (var i = 0; i < eventMessages.length; i++) {\n        events.push(parseEvent(parser, eventMessages[i], model));\n    }\n\n    return events;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    createEventStream: createEventStream\n};\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.V3 = inherit(AWS.Signers.RequestSigner, {\n  addAuthorization: function addAuthorization(credentials, date) {\n\n    var datetime = AWS.util.date.rfc822(date);\n\n    this.request.headers['X-Amz-Date'] = datetime;\n\n    if (credentials.sessionToken) {\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n\n    this.request.headers['X-Amzn-Authorization'] =\n      this.authorization(credentials, datetime);\n\n  },\n\n  authorization: function authorization(credentials) {\n    return 'AWS3 ' +\n      'AWSAccessKeyId=' + credentials.accessKeyId + ',' +\n      'Algorithm=HmacSHA256,' +\n      'SignedHeaders=' + this.signedHeaders() + ',' +\n      'Signature=' + this.signature(credentials);\n  },\n\n  signedHeaders: function signedHeaders() {\n    var headers = [];\n    AWS.util.arrayEach(this.headersToSign(), function iterator(h) {\n      headers.push(h.toLowerCase());\n    });\n    return headers.sort().join(';');\n  },\n\n  canonicalHeaders: function canonicalHeaders() {\n    var headers = this.request.headers;\n    var parts = [];\n    AWS.util.arrayEach(this.headersToSign(), function iterator(h) {\n      parts.push(h.toLowerCase().trim() + ':' + String(headers[h]).trim());\n    });\n    return parts.sort().join('\\n') + '\\n';\n  },\n\n  headersToSign: function headersToSign() {\n    var headers = [];\n    AWS.util.each(this.request.headers, function iterator(k) {\n      if (k === 'Host' || k === 'Content-Encoding' || k.match(/^X-Amz/i)) {\n        headers.push(k);\n      }\n    });\n    return headers;\n  },\n\n  signature: function signature(credentials) {\n    return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');\n  },\n\n  stringToSign: function stringToSign() {\n    var parts = [];\n    parts.push(this.request.method);\n    parts.push('/');\n    parts.push('');\n    parts.push(this.canonicalHeaders());\n    parts.push(this.request.body);\n    return AWS.util.crypto.sha256(parts.join('\\n'));\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V3;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['resourcegroups'] = {};\nAWS.ResourceGroups = Service.defineService('resourcegroups', ['2017-11-27']);\nObject.defineProperty(apiLoader.services['resourcegroups'], '2017-11-27', {\n  get: function get() {\n    var model = require('../apis/resource-groups-2017-11-27.min.json');\n    model.paginators = require('../apis/resource-groups-2017-11-27.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ResourceGroups;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudhsm'] = {};\nAWS.CloudHSM = Service.defineService('cloudhsm', ['2014-05-30']);\nObject.defineProperty(apiLoader.services['cloudhsm'], '2014-05-30', {\n  get: function get() {\n    var model = require('../apis/cloudhsm-2014-05-30.min.json');\n    model.paginators = require('../apis/cloudhsm-2014-05-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudHSM;\n","var AWS = require('../core');\n\nAWS.util.update(AWS.APIGateway.prototype, {\n/**\n * Sets the Accept header to application/json.\n *\n * @api private\n */\n  setAcceptHeader: function setAcceptHeader(req) {\n    var httpRequest = req.httpRequest;\n    if (!httpRequest.headers.Accept) {\n      httpRequest.headers['Accept'] = 'application/json';\n    }\n  },\n\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.addListener('build', this.setAcceptHeader);\n    if (request.operation === 'getExport') {\n      var params = request.params || {};\n      if (params.exportType === 'swagger') {\n        request.addListener('extractData', AWS.util.convertPayloadToString);\n      }\n    }\n  }\n});\n\n","var AWS = require('./core');\nvar inherit = AWS.util.inherit;\n\n/**\n * The endpoint that a service will talk to, for example,\n * `'https://ec2.ap-southeast-1.amazonaws.com'`. If\n * you need to override an endpoint for a service, you can\n * set the endpoint on a service by passing the endpoint\n * object with the `endpoint` option key:\n *\n * ```javascript\n * var ep = new AWS.Endpoint('awsproxy.example.com');\n * var s3 = new AWS.S3({endpoint: ep});\n * s3.service.endpoint.hostname == 'awsproxy.example.com'\n * ```\n *\n * Note that if you do not specify a protocol, the protocol will\n * be selected based on your current {AWS.config} configuration.\n *\n * @!attribute protocol\n *   @return [String] the protocol (http or https) of the endpoint\n *     URL\n * @!attribute hostname\n *   @return [String] the host portion of the endpoint, e.g.,\n *     example.com\n * @!attribute host\n *   @return [String] the host portion of the endpoint including\n *     the port, e.g., example.com:80\n * @!attribute port\n *   @return [Integer] the port of the endpoint\n * @!attribute href\n *   @return [String] the full URL of the endpoint\n */\nAWS.Endpoint = inherit({\n\n  /**\n   * @overload Endpoint(endpoint)\n   *   Constructs a new endpoint given an endpoint URL. If the\n   *   URL omits a protocol (http or https), the default protocol\n   *   set in the global {AWS.config} will be used.\n   *   @param endpoint [String] the URL to construct an endpoint from\n   */\n  constructor: function Endpoint(endpoint, config) {\n    AWS.util.hideProperties(this, ['slashes', 'auth', 'hash', 'search', 'query']);\n\n    if (typeof endpoint === 'undefined' || endpoint === null) {\n      throw new Error('Invalid endpoint: ' + endpoint);\n    } else if (typeof endpoint !== 'string') {\n      return AWS.util.copy(endpoint);\n    }\n\n    if (!endpoint.match(/^http/)) {\n      var useSSL = config && config.sslEnabled !== undefined ?\n        config.sslEnabled : AWS.config.sslEnabled;\n      endpoint = (useSSL ? 'https' : 'http') + '://' + endpoint;\n    }\n\n    AWS.util.update(this, AWS.util.urlParse(endpoint));\n\n    // Ensure the port property is set as an integer\n    if (this.port) {\n      this.port = parseInt(this.port, 10);\n    } else {\n      this.port = this.protocol === 'https:' ? 443 : 80;\n    }\n  }\n\n});\n\n/**\n * The low level HTTP request object, encapsulating all HTTP header\n * and body data sent by a service request.\n *\n * @!attribute method\n *   @return [String] the HTTP method of the request\n * @!attribute path\n *   @return [String] the path portion of the URI, e.g.,\n *     \"/list/?start=5&num=10\"\n * @!attribute headers\n *   @return [map<String,String>]\n *     a map of header keys and their respective values\n * @!attribute body\n *   @return [String] the request body payload\n * @!attribute endpoint\n *   @return [AWS.Endpoint] the endpoint for the request\n * @!attribute region\n *   @api private\n *   @return [String] the region, for signing purposes only.\n */\nAWS.HttpRequest = inherit({\n\n  /**\n   * @api private\n   */\n  constructor: function HttpRequest(endpoint, region) {\n    endpoint = new AWS.Endpoint(endpoint);\n    this.method = 'POST';\n    this.path = endpoint.path || '/';\n    this.headers = {};\n    this.body = '';\n    this.endpoint = endpoint;\n    this.region = region;\n    this._userAgent = '';\n    this.setUserAgent();\n  },\n\n  /**\n   * @api private\n   */\n  setUserAgent: function setUserAgent() {\n    this._userAgent = this.headers[this.getUserAgentHeaderName()] = AWS.util.userAgent();\n  },\n\n  getUserAgentHeaderName: function getUserAgentHeaderName() {\n    var prefix = AWS.util.isBrowser() ? 'X-Amz-' : '';\n    return prefix + 'User-Agent';\n  },\n\n  /**\n   * @api private\n   */\n  appendToUserAgent: function appendToUserAgent(agentPartial) {\n    if (typeof agentPartial === 'string' && agentPartial) {\n      this._userAgent += ' ' + agentPartial;\n    }\n    this.headers[this.getUserAgentHeaderName()] = this._userAgent;\n  },\n\n  /**\n   * @api private\n   */\n  getUserAgent: function getUserAgent() {\n    return this._userAgent;\n  },\n\n  /**\n   * @return [String] the part of the {path} excluding the\n   *   query string\n   */\n  pathname: function pathname() {\n    return this.path.split('?', 1)[0];\n  },\n\n  /**\n   * @return [String] the query string portion of the {path}\n   */\n  search: function search() {\n    var query = this.path.split('?', 2)[1];\n    if (query) {\n      query = AWS.util.queryStringParse(query);\n      return AWS.util.queryParamsToString(query);\n    }\n    return '';\n  },\n\n  /**\n   * @api private\n   * update httpRequest endpoint with endpoint string\n   */\n  updateEndpoint: function updateEndpoint(endpointStr) {\n    var newEndpoint = new AWS.Endpoint(endpointStr);\n    this.endpoint = newEndpoint;\n    this.path = newEndpoint.path || '/';\n    if (this.headers['Host']) {\n      this.headers['Host'] = newEndpoint.host;\n    }\n  }\n});\n\n/**\n * The low level HTTP response object, encapsulating all HTTP header\n * and body data returned from the request.\n *\n * @!attribute statusCode\n *   @return [Integer] the HTTP status code of the response (e.g., 200, 404)\n * @!attribute headers\n *   @return [map<String,String>]\n *      a map of response header keys and their respective values\n * @!attribute body\n *   @return [String] the response body payload\n * @!attribute [r] streaming\n *   @return [Boolean] whether this response is being streamed at a low-level.\n *     Defaults to `false` (buffered reads). Do not modify this manually, use\n *     {createUnbufferedStream} to convert the stream to unbuffered mode\n *     instead.\n */\nAWS.HttpResponse = inherit({\n\n  /**\n   * @api private\n   */\n  constructor: function HttpResponse() {\n    this.statusCode = undefined;\n    this.headers = {};\n    this.body = undefined;\n    this.streaming = false;\n    this.stream = null;\n  },\n\n  /**\n   * Disables buffering on the HTTP response and returns the stream for reading.\n   * @return [Stream, XMLHttpRequest, null] the underlying stream object.\n   *   Use this object to directly read data off of the stream.\n   * @note This object is only available after the {AWS.Request~httpHeaders}\n   *   event has fired. This method must be called prior to\n   *   {AWS.Request~httpData}.\n   * @example Taking control of a stream\n   *   request.on('httpHeaders', function(statusCode, headers) {\n   *     if (statusCode < 300) {\n   *       if (headers.etag === 'xyz') {\n   *         // pipe the stream, disabling buffering\n   *         var stream = this.response.httpResponse.createUnbufferedStream();\n   *         stream.pipe(process.stdout);\n   *       } else { // abort this request and set a better error message\n   *         this.abort();\n   *         this.response.error = new Error('Invalid ETag');\n   *       }\n   *     }\n   *   }).send(console.log);\n   */\n  createUnbufferedStream: function createUnbufferedStream() {\n    this.streaming = true;\n    return this.stream;\n  }\n});\n\n\nAWS.HttpClient = inherit({});\n\n/**\n * @api private\n */\nAWS.HttpClient.getInstance = function getInstance() {\n  if (this.singleton === undefined) {\n    this.singleton = new this();\n  }\n  return this.singleton;\n};\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['configservice'] = {};\nAWS.ConfigService = Service.defineService('configservice', ['2014-11-12']);\nObject.defineProperty(apiLoader.services['configservice'], '2014-11-12', {\n  get: function get() {\n    var model = require('../apis/config-2014-11-12.min.json');\n    model.paginators = require('../apis/config-2014-11-12.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ConfigService;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudwatchlogs'] = {};\nAWS.CloudWatchLogs = Service.defineService('cloudwatchlogs', ['2014-03-28']);\nObject.defineProperty(apiLoader.services['cloudwatchlogs'], '2014-03-28', {\n  get: function get() {\n    var model = require('../apis/logs-2014-03-28.min.json');\n    model.paginators = require('../apis/logs-2014-03-28.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudWatchLogs;\n","/**\n * The main AWS namespace\n */\nvar AWS = { util: require('./util') };\n\n/**\n * @api private\n * @!macro [new] nobrowser\n *   @note This feature is not supported in the browser environment of the SDK.\n */\nvar _hidden = {}; _hidden.toString(); // hack to parse macro\n\n/**\n * @api private\n */\nmodule.exports = AWS;\n\nAWS.util.update(AWS, {\n\n  /**\n   * @constant\n   */\n  VERSION: '2.771.0',\n\n  /**\n   * @api private\n   */\n  Signers: {},\n\n  /**\n   * @api private\n   */\n  Protocol: {\n    Json: require('./protocol/json'),\n    Query: require('./protocol/query'),\n    Rest: require('./protocol/rest'),\n    RestJson: require('./protocol/rest_json'),\n    RestXml: require('./protocol/rest_xml')\n  },\n\n  /**\n   * @api private\n   */\n  XML: {\n    Builder: require('./xml/builder'),\n    Parser: null // conditionally set based on environment\n  },\n\n  /**\n   * @api private\n   */\n  JSON: {\n    Builder: require('./json/builder'),\n    Parser: require('./json/parser')\n  },\n\n  /**\n   * @api private\n   */\n  Model: {\n    Api: require('./model/api'),\n    Operation: require('./model/operation'),\n    Shape: require('./model/shape'),\n    Paginator: require('./model/paginator'),\n    ResourceWaiter: require('./model/resource_waiter')\n  },\n\n  /**\n   * @api private\n   */\n  apiLoader: require('./api_loader'),\n\n  /**\n   * @api private\n   */\n  EndpointCache: require('../vendor/endpoint-cache').EndpointCache\n});\nrequire('./sequential_executor');\nrequire('./service');\nrequire('./config');\nrequire('./http');\nrequire('./event_listeners');\nrequire('./request');\nrequire('./response');\nrequire('./resource_waiter');\nrequire('./signers/request_signer');\nrequire('./param_validator');\n\n/**\n * @readonly\n * @return [AWS.SequentialExecutor] a collection of global event listeners that\n *   are attached to every sent request.\n * @see AWS.Request AWS.Request for a list of events to listen for\n * @example Logging the time taken to send a request\n *   AWS.events.on('send', function startSend(resp) {\n *     resp.startTime = new Date().getTime();\n *   }).on('complete', function calculateTime(resp) {\n *     var time = (new Date().getTime() - resp.startTime) / 1000;\n *     console.log('Request took ' + time + ' seconds');\n *   });\n *\n *   new AWS.S3().listBuckets(); // prints 'Request took 0.285 seconds'\n */\nAWS.events = new AWS.SequentialExecutor();\n\n//create endpoint cache lazily\nAWS.util.memoizedProperty(AWS, 'endpointCache', function() {\n  return new AWS.EndpointCache(AWS.config.endpointCacheSize);\n}, true);\n","/**\n * Escapes characters that can not be in an XML element.\n */\nfunction escapeElement(value) {\n    return value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    escapeElement: escapeElement\n};\n","require('./browser_loader');\n\nvar AWS = require('./core');\n\nif (typeof window !== 'undefined') window.AWS = AWS;\nif (typeof module !== 'undefined') {\n    /**\n     * @api private\n     */\n    module.exports = AWS;\n}\nif (typeof self !== 'undefined') self.AWS = AWS;\n\n/**\n * @private\n * DO NOT REMOVE\n * browser builder will strip out this line if services are supplied on the command line.\n */\nrequire('../clients/browser_default');\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.S3 = inherit(AWS.Signers.RequestSigner, {\n  /**\n   * When building the stringToSign, these sub resource params should be\n   * part of the canonical resource string with their NON-decoded values\n   */\n  subResources: {\n    'acl': 1,\n    'accelerate': 1,\n    'analytics': 1,\n    'cors': 1,\n    'lifecycle': 1,\n    'delete': 1,\n    'inventory': 1,\n    'location': 1,\n    'logging': 1,\n    'metrics': 1,\n    'notification': 1,\n    'partNumber': 1,\n    'policy': 1,\n    'requestPayment': 1,\n    'replication': 1,\n    'restore': 1,\n    'tagging': 1,\n    'torrent': 1,\n    'uploadId': 1,\n    'uploads': 1,\n    'versionId': 1,\n    'versioning': 1,\n    'versions': 1,\n    'website': 1\n  },\n\n  // when building the stringToSign, these querystring params should be\n  // part of the canonical resource string with their NON-encoded values\n  responseHeaders: {\n    'response-content-type': 1,\n    'response-content-language': 1,\n    'response-expires': 1,\n    'response-cache-control': 1,\n    'response-content-disposition': 1,\n    'response-content-encoding': 1\n  },\n\n  addAuthorization: function addAuthorization(credentials, date) {\n    if (!this.request.headers['presigned-expires']) {\n      this.request.headers['X-Amz-Date'] = AWS.util.date.rfc822(date);\n    }\n\n    if (credentials.sessionToken) {\n      // presigned URLs require this header to be lowercased\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n\n    var signature = this.sign(credentials.secretAccessKey, this.stringToSign());\n    var auth = 'AWS ' + credentials.accessKeyId + ':' + signature;\n\n    this.request.headers['Authorization'] = auth;\n  },\n\n  stringToSign: function stringToSign() {\n    var r = this.request;\n\n    var parts = [];\n    parts.push(r.method);\n    parts.push(r.headers['Content-MD5'] || '');\n    parts.push(r.headers['Content-Type'] || '');\n\n    // This is the \"Date\" header, but we use X-Amz-Date.\n    // The S3 signing mechanism requires us to pass an empty\n    // string for this Date header regardless.\n    parts.push(r.headers['presigned-expires'] || '');\n\n    var headers = this.canonicalizedAmzHeaders();\n    if (headers) parts.push(headers);\n    parts.push(this.canonicalizedResource());\n\n    return parts.join('\\n');\n\n  },\n\n  canonicalizedAmzHeaders: function canonicalizedAmzHeaders() {\n\n    var amzHeaders = [];\n\n    AWS.util.each(this.request.headers, function (name) {\n      if (name.match(/^x-amz-/i))\n        amzHeaders.push(name);\n    });\n\n    amzHeaders.sort(function (a, b) {\n      return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n    });\n\n    var parts = [];\n    AWS.util.arrayEach.call(this, amzHeaders, function (name) {\n      parts.push(name.toLowerCase() + ':' + String(this.request.headers[name]));\n    });\n\n    return parts.join('\\n');\n\n  },\n\n  canonicalizedResource: function canonicalizedResource() {\n\n    var r = this.request;\n\n    var parts = r.path.split('?');\n    var path = parts[0];\n    var querystring = parts[1];\n\n    var resource = '';\n\n    if (r.virtualHostedBucket)\n      resource += '/' + r.virtualHostedBucket;\n\n    resource += path;\n\n    if (querystring) {\n\n      // collect a list of sub resources and query params that need to be signed\n      var resources = [];\n\n      AWS.util.arrayEach.call(this, querystring.split('&'), function (param) {\n        var name = param.split('=')[0];\n        var value = param.split('=')[1];\n        if (this.subResources[name] || this.responseHeaders[name]) {\n          var subresource = { name: name };\n          if (value !== undefined) {\n            if (this.subResources[name]) {\n              subresource.value = value;\n            } else {\n              subresource.value = decodeURIComponent(value);\n            }\n          }\n          resources.push(subresource);\n        }\n      });\n\n      resources.sort(function (a, b) { return a.name < b.name ? -1 : 1; });\n\n      if (resources.length) {\n\n        querystring = [];\n        AWS.util.arrayEach(resources, function (res) {\n          if (res.value === undefined) {\n            querystring.push(res.name);\n          } else {\n            querystring.push(res.name + '=' + res.value);\n          }\n        });\n\n        resource += '?' + querystring.join('&');\n      }\n\n    }\n\n    return resource;\n\n  },\n\n  sign: function sign(secret, string) {\n    return AWS.util.crypto.hmac(secret, string, 'base64', 'sha1');\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.S3;\n","var AWS = require('../core');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents temporary credentials retrieved from {AWS.STS}. Without any\n * extra parameters, credentials will be fetched from the\n * {AWS.STS.getSessionToken} operation. If an IAM role is provided, the\n * {AWS.STS.assumeRole} operation will be used to fetch credentials for the\n * role instead.\n *\n * @note AWS.TemporaryCredentials is deprecated, but remains available for\n *   backwards compatibility. {AWS.ChainableTemporaryCredentials} is the\n *   preferred class for temporary credentials.\n *\n * To setup temporary credentials, configure a set of master credentials\n * using the standard credentials providers (environment, EC2 instance metadata,\n * or from the filesystem), then set the global credentials to a new\n * temporary credentials object:\n *\n * ```javascript\n * // Note that environment credentials are loaded by default,\n * // the following line is shown for clarity:\n * AWS.config.credentials = new AWS.EnvironmentCredentials('AWS');\n *\n * // Now set temporary credentials seeded from the master credentials\n * AWS.config.credentials = new AWS.TemporaryCredentials();\n *\n * // subsequent requests will now use temporary credentials from AWS STS.\n * new AWS.S3().listBucket(function(err, data) { ... });\n * ```\n *\n * @!attribute masterCredentials\n *   @return [AWS.Credentials] the master (non-temporary) credentials used to\n *     get and refresh temporary credentials from AWS STS.\n * @note (see constructor)\n */\nAWS.TemporaryCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new temporary credentials object.\n   *\n   * @note In order to create temporary credentials, you first need to have\n   *   \"master\" credentials configured in {AWS.Config.credentials}. These\n   *   master credentials are necessary to retrieve the temporary credentials,\n   *   as well as refresh the credentials when they expire.\n   * @param params [map] a map of options that are passed to the\n   *   {AWS.STS.assumeRole} or {AWS.STS.getSessionToken} operations.\n   *   If a `RoleArn` parameter is passed in, credentials will be based on the\n   *   IAM role.\n   * @param masterCredentials [AWS.Credentials] the master (non-temporary) credentials\n   *  used to get and refresh temporary credentials from AWS STS.\n   * @example Creating a new credentials object for generic temporary credentials\n   *   AWS.config.credentials = new AWS.TemporaryCredentials();\n   * @example Creating a new credentials object for an IAM role\n   *   AWS.config.credentials = new AWS.TemporaryCredentials({\n   *     RoleArn: 'arn:aws:iam::1234567890:role/TemporaryCredentials',\n   *   });\n   * @see AWS.STS.assumeRole\n   * @see AWS.STS.getSessionToken\n   */\n  constructor: function TemporaryCredentials(params, masterCredentials) {\n    AWS.Credentials.call(this);\n    this.loadMasterCredentials(masterCredentials);\n    this.expired = true;\n\n    this.params = params || {};\n    if (this.params.RoleArn) {\n      this.params.RoleSessionName =\n        this.params.RoleSessionName || 'temporary-credentials';\n    }\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRole} or\n   * {AWS.STS.getSessionToken}, depending on whether an IAM role ARN was passed\n   * to the credentials {constructor}.\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh (callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load (callback) {\n    var self = this;\n    self.createClients();\n    self.masterCredentials.get(function () {\n      self.service.config.credentials = self.masterCredentials;\n      var operation = self.params.RoleArn ?\n        self.service.assumeRole : self.service.getSessionToken;\n      operation.call(self.service, function (err, data) {\n        if (!err) {\n          self.service.credentialsFrom(data, self);\n        }\n        callback(err);\n      });\n    });\n  },\n\n  /**\n   * @api private\n   */\n  loadMasterCredentials: function loadMasterCredentials (masterCredentials) {\n    this.masterCredentials = masterCredentials || AWS.config.credentials;\n    while (this.masterCredentials.masterCredentials) {\n      this.masterCredentials = this.masterCredentials.masterCredentials;\n    }\n\n    if (typeof this.masterCredentials.get !== 'function') {\n      this.masterCredentials = new AWS.Credentials(this.masterCredentials);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function () {\n    this.service = this.service || new STS({params: this.params});\n  }\n\n});\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['mediastoredata'] = {};\nAWS.MediaStoreData = Service.defineService('mediastoredata', ['2017-09-01']);\nObject.defineProperty(apiLoader.services['mediastoredata'], '2017-09-01', {\n  get: function get() {\n    var model = require('../apis/mediastore-data-2017-09-01.min.json');\n    model.paginators = require('../apis/mediastore-data-2017-09-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MediaStoreData;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['xray'] = {};\nAWS.XRay = Service.defineService('xray', ['2016-04-12']);\nObject.defineProperty(apiLoader.services['xray'], '2016-04-12', {\n  get: function get() {\n    var model = require('../apis/xray-2016-04-12.min.json');\n    model.paginators = require('../apis/xray-2016-04-12.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.XRay;\n","var property = require('../util').property;\n\nfunction Paginator(name, paginator) {\n  property(this, 'inputToken', paginator.input_token);\n  property(this, 'limitKey', paginator.limit_key);\n  property(this, 'moreResults', paginator.more_results);\n  property(this, 'outputToken', paginator.output_token);\n  property(this, 'resultKey', paginator.result_key);\n}\n\n/**\n * @api private\n */\nmodule.exports = Paginator;\n","var memoizedProperty = require('../util').memoizedProperty;\n\nfunction memoize(name, value, factory, nameTr) {\n  memoizedProperty(this, nameTr(name), function() {\n    return factory(name, value);\n  });\n}\n\nfunction Collection(iterable, options, factory, nameTr, callback) {\n  nameTr = nameTr || String;\n  var self = this;\n\n  for (var id in iterable) {\n    if (Object.prototype.hasOwnProperty.call(iterable, id)) {\n      memoize.call(self, id, iterable[id], factory, nameTr);\n      if (callback) callback(id, iterable[id]);\n    }\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = Collection;\n","var AWS = require('./core');\n\n/**\n * @api private\n */\nAWS.ParamValidator = AWS.util.inherit({\n  /**\n   * Create a new validator object.\n   *\n   * @param validation [Boolean|map] whether input parameters should be\n   *     validated against the operation description before sending the\n   *     request. Pass a map to enable any of the following specific\n   *     validation features:\n   *\n   *     * **min** [Boolean] &mdash; Validates that a value meets the min\n   *       constraint. This is enabled by default when paramValidation is set\n   *       to `true`.\n   *     * **max** [Boolean] &mdash; Validates that a value meets the max\n   *       constraint.\n   *     * **pattern** [Boolean] &mdash; Validates that a string value matches a\n   *       regular expression.\n   *     * **enum** [Boolean] &mdash; Validates that a string value matches one\n   *       of the allowable enum values.\n   */\n  constructor: function ParamValidator(validation) {\n    if (validation === true || validation === undefined) {\n      validation = {'min': true};\n    }\n    this.validation = validation;\n  },\n\n  validate: function validate(shape, params, context) {\n    this.errors = [];\n    this.validateMember(shape, params || {}, context || 'params');\n\n    if (this.errors.length > 1) {\n      var msg = this.errors.join('\\n* ');\n      msg = 'There were ' + this.errors.length +\n        ' validation errors:\\n* ' + msg;\n      throw AWS.util.error(new Error(msg),\n        {code: 'MultipleValidationErrors', errors: this.errors});\n    } else if (this.errors.length === 1) {\n      throw this.errors[0];\n    } else {\n      return true;\n    }\n  },\n\n  fail: function fail(code, message) {\n    this.errors.push(AWS.util.error(new Error(message), {code: code}));\n  },\n\n  validateStructure: function validateStructure(shape, params, context) {\n    this.validateType(params, context, ['object'], 'structure');\n\n    var paramName;\n    for (var i = 0; shape.required && i < shape.required.length; i++) {\n      paramName = shape.required[i];\n      var value = params[paramName];\n      if (value === undefined || value === null) {\n        this.fail('MissingRequiredParameter',\n          'Missing required key \\'' + paramName + '\\' in ' + context);\n      }\n    }\n\n    // validate hash members\n    for (paramName in params) {\n      if (!Object.prototype.hasOwnProperty.call(params, paramName)) continue;\n\n      var paramValue = params[paramName],\n          memberShape = shape.members[paramName];\n\n      if (memberShape !== undefined) {\n        var memberContext = [context, paramName].join('.');\n        this.validateMember(memberShape, paramValue, memberContext);\n      } else {\n        this.fail('UnexpectedParameter',\n          'Unexpected key \\'' + paramName + '\\' found in ' + context);\n      }\n    }\n\n    return true;\n  },\n\n  validateMember: function validateMember(shape, param, context) {\n    switch (shape.type) {\n      case 'structure':\n        return this.validateStructure(shape, param, context);\n      case 'list':\n        return this.validateList(shape, param, context);\n      case 'map':\n        return this.validateMap(shape, param, context);\n      default:\n        return this.validateScalar(shape, param, context);\n    }\n  },\n\n  validateList: function validateList(shape, params, context) {\n    if (this.validateType(params, context, [Array])) {\n      this.validateRange(shape, params.length, context, 'list member count');\n      // validate array members\n      for (var i = 0; i < params.length; i++) {\n        this.validateMember(shape.member, params[i], context + '[' + i + ']');\n      }\n    }\n  },\n\n  validateMap: function validateMap(shape, params, context) {\n    if (this.validateType(params, context, ['object'], 'map')) {\n      // Build up a count of map members to validate range traits.\n      var mapCount = 0;\n      for (var param in params) {\n        if (!Object.prototype.hasOwnProperty.call(params, param)) continue;\n        // Validate any map key trait constraints\n        this.validateMember(shape.key, param,\n                            context + '[key=\\'' + param + '\\']');\n        this.validateMember(shape.value, params[param],\n                            context + '[\\'' + param + '\\']');\n        mapCount++;\n      }\n      this.validateRange(shape, mapCount, context, 'map member count');\n    }\n  },\n\n  validateScalar: function validateScalar(shape, value, context) {\n    switch (shape.type) {\n      case null:\n      case undefined:\n      case 'string':\n        return this.validateString(shape, value, context);\n      case 'base64':\n      case 'binary':\n        return this.validatePayload(value, context);\n      case 'integer':\n      case 'float':\n        return this.validateNumber(shape, value, context);\n      case 'boolean':\n        return this.validateType(value, context, ['boolean']);\n      case 'timestamp':\n        return this.validateType(value, context, [Date,\n          /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$/, 'number'],\n          'Date object, ISO-8601 string, or a UNIX timestamp');\n      default:\n        return this.fail('UnkownType', 'Unhandled type ' +\n                         shape.type + ' for ' + context);\n    }\n  },\n\n  validateString: function validateString(shape, value, context) {\n    var validTypes = ['string'];\n    if (shape.isJsonValue) {\n      validTypes = validTypes.concat(['number', 'object', 'boolean']);\n    }\n    if (value !== null && this.validateType(value, context, validTypes)) {\n      this.validateEnum(shape, value, context);\n      this.validateRange(shape, value.length, context, 'string length');\n      this.validatePattern(shape, value, context);\n      this.validateUri(shape, value, context);\n    }\n  },\n\n  validateUri: function validateUri(shape, value, context) {\n    if (shape['location'] === 'uri') {\n      if (value.length === 0) {\n        this.fail('UriParameterError', 'Expected uri parameter to have length >= 1,'\n          + ' but found \"' + value +'\" for ' + context);\n      }\n    }\n  },\n\n  validatePattern: function validatePattern(shape, value, context) {\n    if (this.validation['pattern'] && shape['pattern'] !== undefined) {\n      if (!(new RegExp(shape['pattern'])).test(value)) {\n        this.fail('PatternMatchError', 'Provided value \"' + value + '\" '\n          + 'does not match regex pattern /' + shape['pattern'] + '/ for '\n          + context);\n      }\n    }\n  },\n\n  validateRange: function validateRange(shape, value, context, descriptor) {\n    if (this.validation['min']) {\n      if (shape['min'] !== undefined && value < shape['min']) {\n        this.fail('MinRangeError', 'Expected ' + descriptor + ' >= '\n          + shape['min'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n    if (this.validation['max']) {\n      if (shape['max'] !== undefined && value > shape['max']) {\n        this.fail('MaxRangeError', 'Expected ' + descriptor + ' <= '\n          + shape['max'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n  },\n\n  validateEnum: function validateRange(shape, value, context) {\n    if (this.validation['enum'] && shape['enum'] !== undefined) {\n      // Fail if the string value is not present in the enum list\n      if (shape['enum'].indexOf(value) === -1) {\n        this.fail('EnumError', 'Found string value of ' + value + ', but '\n          + 'expected ' + shape['enum'].join('|') + ' for ' + context);\n      }\n    }\n  },\n\n  validateType: function validateType(value, context, acceptedTypes, type) {\n    // We will not log an error for null or undefined, but we will return\n    // false so that callers know that the expected type was not strictly met.\n    if (value === null || value === undefined) return false;\n\n    var foundInvalidType = false;\n    for (var i = 0; i < acceptedTypes.length; i++) {\n      if (typeof acceptedTypes[i] === 'string') {\n        if (typeof value === acceptedTypes[i]) return true;\n      } else if (acceptedTypes[i] instanceof RegExp) {\n        if ((value || '').toString().match(acceptedTypes[i])) return true;\n      } else {\n        if (value instanceof acceptedTypes[i]) return true;\n        if (AWS.util.isType(value, acceptedTypes[i])) return true;\n        if (!type && !foundInvalidType) acceptedTypes = acceptedTypes.slice();\n        acceptedTypes[i] = AWS.util.typeName(acceptedTypes[i]);\n      }\n      foundInvalidType = true;\n    }\n\n    var acceptedType = type;\n    if (!acceptedType) {\n      acceptedType = acceptedTypes.join(', ').replace(/,([^,]+)$/, ', or$1');\n    }\n\n    var vowel = acceptedType.match(/^[aeiou]/i) ? 'n' : '';\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a' +\n              vowel + ' ' + acceptedType);\n    return false;\n  },\n\n  validateNumber: function validateNumber(shape, value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') {\n      var castedValue = parseFloat(value);\n      if (castedValue.toString() === value) value = castedValue;\n    }\n    if (this.validateType(value, context, ['number'])) {\n      this.validateRange(shape, value, context, 'numeric value');\n    }\n  },\n\n  validatePayload: function validatePayload(value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') return;\n    if (value && typeof value.byteLength === 'number') return; // typed arrays\n    if (AWS.util.isNode()) { // special check for buffer/stream in Node.js\n      var Stream = AWS.util.stream.Stream;\n      if (AWS.util.Buffer.isBuffer(value) || value instanceof Stream) return;\n    } else {\n      if (typeof Blob !== void 0 && value instanceof Blob) return;\n    }\n\n    var types = ['Buffer', 'Stream', 'File', 'Blob', 'ArrayBuffer', 'DataView'];\n    if (value) {\n      for (var i = 0; i < types.length; i++) {\n        if (AWS.util.isType(value, types[i])) return;\n        if (AWS.util.typeName(value.constructor) === types[i]) return;\n      }\n    }\n\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a ' +\n      'string, Buffer, Stream, Blob, or typed array object');\n  }\n});\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['personalize'] = {};\nAWS.Personalize = Service.defineService('personalize', ['2018-05-22']);\nObject.defineProperty(apiLoader.services['personalize'], '2018-05-22', {\n  get: function get() {\n    var model = require('../apis/personalize-2018-05-22.min.json');\n    model.paginators = require('../apis/personalize-2018-05-22.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Personalize;\n","var AWS = require('../core');\nvar v4Credentials = require('../signers/v4_credentials');\nvar resolveRegionalEndpointsFlag = require('../config_regional_endpoint');\nvar s3util = require('./s3util');\nvar regionUtil = require('../region_config');\n\n// Pull in managed upload extension\nrequire('../s3/managed_upload');\n\n/**\n * @api private\n */\nvar operationsWith200StatusCodeError = {\n  'completeMultipartUpload': true,\n  'copyObject': true,\n  'uploadPartCopy': true\n};\n\n/**\n * @api private\n */\n var regionRedirectErrorCodes = [\n  'AuthorizationHeaderMalformed', // non-head operations on virtual-hosted global bucket endpoints\n  'BadRequest', // head operations on virtual-hosted global bucket endpoints\n  'PermanentRedirect', // non-head operations on path-style or regional endpoints\n  301 // head operations on path-style or regional endpoints\n ];\n\nAWS.util.update(AWS.S3.prototype, {\n  /**\n   * @api private\n   */\n  getSignatureVersion: function getSignatureVersion(request) {\n    var defaultApiVersion = this.api.signatureVersion;\n    var userDefinedVersion = this._originalConfig ? this._originalConfig.signatureVersion : null;\n    var regionDefinedVersion = this.config.signatureVersion;\n    var isPresigned = request ? request.isPresigned() : false;\n    /*\n      1) User defined version specified:\n        a) always return user defined version\n      2) No user defined version specified:\n        a) If not using presigned urls, default to V4\n        b) If using presigned urls, default to lowest version the region supports\n    */\n    if (userDefinedVersion) {\n      userDefinedVersion = userDefinedVersion === 'v2' ? 's3' : userDefinedVersion;\n      return userDefinedVersion;\n    }\n    if (isPresigned !== true) {\n      defaultApiVersion = 'v4';\n    } else if (regionDefinedVersion) {\n      defaultApiVersion = regionDefinedVersion;\n    }\n    return defaultApiVersion;\n  },\n\n  /**\n   * @api private\n   */\n  getSigningName: function getSigningName() {\n    var _super = AWS.Service.prototype.getSigningName;\n    return (this._parsedArn && this._parsedArn.service)\n      ? this._parsedArn.service\n      : _super.call(this);\n  },\n\n  /**\n   * @api private\n   */\n  getSignerClass: function getSignerClass(request) {\n    var signatureVersion = this.getSignatureVersion(request);\n    return AWS.Signers.RequestSigner.getVersion(signatureVersion);\n  },\n\n  /**\n   * @api private\n   */\n  validateService: function validateService() {\n    var msg;\n    var messages = [];\n\n    // default to us-east-1 when no region is provided\n    if (!this.config.region) this.config.region = 'us-east-1';\n\n    if (!this.config.endpoint && this.config.s3BucketEndpoint) {\n      messages.push('An endpoint must be provided when configuring ' +\n                    '`s3BucketEndpoint` to true.');\n    }\n    if (messages.length === 1) {\n      msg = messages[0];\n    } else if (messages.length > 1) {\n      msg = 'Multiple configuration errors:\\n' + messages.join('\\n');\n    }\n    if (msg) {\n      throw AWS.util.error(new Error(),\n        {name: 'InvalidEndpoint', message: msg});\n    }\n  },\n\n  /**\n   * @api private\n   */\n  shouldDisableBodySigning: function shouldDisableBodySigning(request) {\n    var signerClass = this.getSignerClass();\n    if (this.config.s3DisableBodySigning === true && signerClass === AWS.Signers.V4\n        && request.httpRequest.endpoint.protocol === 'https:') {\n      return true;\n    }\n    return false;\n  },\n\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    var prependListener = true;\n    request.addListener('validate', this.validateScheme);\n    request.addListener('validate', this.validateBucketName, prependListener);\n    request.addListener('validate', this.optInUsEast1RegionalEndpoint, prependListener);\n\n    request.removeListener('validate',\n      AWS.EventListeners.Core.VALIDATE_REGION);\n    request.addListener('build', this.addContentType);\n    request.addListener('build', this.computeContentMd5);\n    request.addListener('build', this.computeSseCustomerKeyMd5);\n    request.addListener('build', this.populateURI);\n    request.addListener('afterBuild', this.addExpect100Continue);\n    request.addListener('extractError', this.extractError);\n    request.addListener('extractData', AWS.util.hoistPayloadMember);\n    request.addListener('extractData', this.extractData);\n    request.addListener('extractData', this.extractErrorFrom200Response);\n    request.addListener('beforePresign', this.prepareSignedUrl);\n    if (this.shouldDisableBodySigning(request))  {\n      request.removeListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);\n      request.addListener('afterBuild', this.disableBodySigning);\n    }\n    //deal with ARNs supplied to Bucket\n    if (request.operation !== 'createBucket' && s3util.isArnInParam(request, 'Bucket')) {\n      // avoid duplicate parsing in the future\n      request.service._parsedArn = AWS.util.ARN.parse(request.params.Bucket);\n\n      request.removeListener('validate', this.validateBucketName);\n      request.removeListener('build', this.populateURI);\n      if (request.service._parsedArn.service === 's3') {\n        request.addListener('validate', s3util.validateS3AccessPointArn);\n        request.addListener('validate', this.validateArnResourceType);\n      } else if (request.service._parsedArn.service === 's3-outposts') {\n        request.addListener('validate', s3util.validateOutpostsAccessPointArn);\n        request.addListener('validate', s3util.validateOutpostsArn);\n      }\n      request.addListener('validate', s3util.validateArnRegion);\n      request.addListener('validate', s3util.validateArnAccount);\n      request.addListener('validate', s3util.validateArnService);\n      request.addListener('build', this.populateUriFromAccessPointArn);\n      request.addListener('build', s3util.validatePopulateUriFromArn);\n      return;\n    }\n    //listeners regarding region inference\n    request.addListener('validate', this.validateBucketEndpoint);\n    request.addListener('validate', this.correctBucketRegionFromCache);\n    request.onAsync('extractError', this.requestBucketRegion);\n    if (AWS.util.isBrowser()) {\n      request.onAsync('retry', this.reqRegionForNetworkingError);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateScheme: function(req) {\n    var params = req.params,\n        scheme = req.httpRequest.endpoint.protocol,\n        sensitive = params.SSECustomerKey || params.CopySourceSSECustomerKey;\n    if (sensitive && scheme !== 'https:') {\n      var msg = 'Cannot send SSE keys over HTTP. Set \\'sslEnabled\\'' +\n        'to \\'true\\' in your configuration';\n      throw AWS.util.error(new Error(),\n        { code: 'ConfigError', message: msg });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateBucketEndpoint: function(req) {\n    if (!req.params.Bucket && req.service.config.s3BucketEndpoint) {\n      var msg = 'Cannot send requests to root API with `s3BucketEndpoint` set.';\n      throw AWS.util.error(new Error(),\n        { code: 'ConfigError', message: msg });\n    }\n  },\n\n  /**\n   * Validate resource-type supplied in S3 ARN\n   */\n  validateArnResourceType: function validateArnResourceType(req) {\n    var resource = req.service._parsedArn.resource;\n\n    if (\n      resource.indexOf('accesspoint:') !== 0 &&\n      resource.indexOf('accesspoint/') !== 0\n    ) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'ARN resource should begin with \\'accesspoint/\\''\n      });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateBucketName: function validateBucketName(req) {\n    var service = req.service;\n    var signatureVersion = service.getSignatureVersion(req);\n    var bucket = req.params && req.params.Bucket;\n    var key = req.params && req.params.Key;\n    var slashIndex = bucket && bucket.indexOf('/');\n    if (bucket && slashIndex >= 0) {\n      if (typeof key === 'string' && slashIndex > 0) {\n        req.params = AWS.util.copy(req.params);\n        // Need to include trailing slash to match sigv2 behavior\n        var prefix = bucket.substr(slashIndex + 1) || '';\n        req.params.Key = prefix + '/' + key;\n        req.params.Bucket = bucket.substr(0, slashIndex);\n      } else if (signatureVersion === 'v4') {\n        var msg = 'Bucket names cannot contain forward slashes. Bucket: ' + bucket;\n        throw AWS.util.error(new Error(),\n          { code: 'InvalidBucket', message: msg });\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  isValidAccelerateOperation: function isValidAccelerateOperation(operation) {\n    var invalidOperations = [\n      'createBucket',\n      'deleteBucket',\n      'listBuckets'\n    ];\n    return invalidOperations.indexOf(operation) === -1;\n  },\n\n  /**\n   * When us-east-1 region endpoint configuration is set, in stead of sending request to\n   * global endpoint(e.g. 's3.amazonaws.com'), we will send request to\n   * 's3.us-east-1.amazonaws.com'.\n   * @api private\n   */\n  optInUsEast1RegionalEndpoint: function optInUsEast1RegionalEndpoint(req) {\n    var service = req.service;\n    var config = service.config;\n    config.s3UsEast1RegionalEndpoint = resolveRegionalEndpointsFlag(service._originalConfig, {\n      env: 'AWS_S3_US_EAST_1_REGIONAL_ENDPOINT',\n      sharedConfig: 's3_us_east_1_regional_endpoint',\n      clientConfig: 's3UsEast1RegionalEndpoint'\n    });\n    if (\n      !(service._originalConfig || {}).endpoint &&\n      req.httpRequest.region === 'us-east-1' &&\n      config.s3UsEast1RegionalEndpoint === 'regional' &&\n      req.httpRequest.endpoint.hostname.indexOf('s3.amazonaws.com') >= 0\n    ) {\n      var insertPoint = config.endpoint.indexOf('.amazonaws.com');\n      regionalEndpoint = config.endpoint.substring(0, insertPoint) +\n        '.us-east-1' + config.endpoint.substring(insertPoint);\n      req.httpRequest.updateEndpoint(regionalEndpoint);\n    }\n  },\n\n  /**\n   * S3 prefers dns-compatible bucket names to be moved from the uri path\n   * to the hostname as a sub-domain.  This is not possible, even for dns-compat\n   * buckets when using SSL and the bucket name contains a dot ('.').  The\n   * ssl wildcard certificate is only 1-level deep.\n   *\n   * @api private\n   */\n  populateURI: function populateURI(req) {\n    var httpRequest = req.httpRequest;\n    var b = req.params.Bucket;\n    var service = req.service;\n    var endpoint = httpRequest.endpoint;\n    if (b) {\n      if (!service.pathStyleBucketName(b)) {\n        if (service.config.useAccelerateEndpoint && service.isValidAccelerateOperation(req.operation)) {\n          if (service.config.useDualstack) {\n            endpoint.hostname = b + '.s3-accelerate.dualstack.amazonaws.com';\n          } else {\n            endpoint.hostname = b + '.s3-accelerate.amazonaws.com';\n          }\n        } else if (!service.config.s3BucketEndpoint) {\n          endpoint.hostname =\n            b + '.' + endpoint.hostname;\n        }\n\n        var port = endpoint.port;\n        if (port !== 80 && port !== 443) {\n          endpoint.host = endpoint.hostname + ':' +\n            endpoint.port;\n        } else {\n          endpoint.host = endpoint.hostname;\n        }\n\n        httpRequest.virtualHostedBucket = b; // needed for signing the request\n        service.removeVirtualHostedBucketFromPath(req);\n      }\n    }\n  },\n\n  /**\n   * Takes the bucket name out of the path if bucket is virtual-hosted\n   *\n   * @api private\n   */\n  removeVirtualHostedBucketFromPath: function removeVirtualHostedBucketFromPath(req) {\n    var httpRequest = req.httpRequest;\n    var bucket = httpRequest.virtualHostedBucket;\n    if (bucket && httpRequest.path) {\n      if (req.params && req.params.Key) {\n        var encodedS3Key = '/' + AWS.util.uriEscapePath(req.params.Key);\n        if (httpRequest.path.indexOf(encodedS3Key) === 0 && (httpRequest.path.length === encodedS3Key.length || httpRequest.path[encodedS3Key.length] === '?')) {\n          //path only contains key or path contains only key and querystring\n          return;\n        }\n      }\n      httpRequest.path = httpRequest.path.replace(new RegExp('/' + bucket), '');\n      if (httpRequest.path[0] !== '/') {\n        httpRequest.path = '/' + httpRequest.path;\n      }\n    }\n  },\n\n  /**\n   * When user supply an access point ARN in the Bucket parameter, we need to\n   * populate the URI according to the ARN.\n   */\n  populateUriFromAccessPointArn: function populateUriFromAccessPointArn(req) {\n    var accessPointArn = req.service._parsedArn;\n\n    var isOutpostArn = accessPointArn.service === 's3-outposts';\n\n    var outpostsSuffix = isOutpostArn ? '.' + accessPointArn.outpostId: '';\n    var serviceName = isOutpostArn ? 's3-outposts': 's3-accesspoint';\n    var dualStackSuffix = !isOutpostArn && req.service.config.useDualstack ? '.dualstack' : '';\n\n    var endpoint = req.httpRequest.endpoint;\n    var dnsSuffix = regionUtil.getEndpointSuffix(accessPointArn.region);\n    var useArnRegion = req.service.config.s3UseArnRegion;\n\n    endpoint.hostname = [\n      accessPointArn.accessPoint + '-' + accessPointArn.accountId + outpostsSuffix,\n      serviceName + dualStackSuffix,\n      useArnRegion ? accessPointArn.region : req.service.config.region,\n      dnsSuffix\n    ].join('.');\n    endpoint.host = endpoint.hostname;\n\n    var encodedArn = AWS.util.uriEscape(req.params.Bucket);\n    var path = req.httpRequest.path;\n    //remove the Bucket value from path\n    req.httpRequest.path = path.replace(new RegExp('/' + encodedArn), '');\n    if (req.httpRequest.path[0] !== '/') {\n      req.httpRequest.path = '/' + req.httpRequest.path;\n    }\n    req.httpRequest.region = accessPointArn.region; //region used to sign\n  },\n\n  /**\n   * Adds Expect: 100-continue header if payload is greater-or-equal 1MB\n   * @api private\n   */\n  addExpect100Continue: function addExpect100Continue(req) {\n    var len = req.httpRequest.headers['Content-Length'];\n    if (AWS.util.isNode() && (len >= 1024 * 1024 || req.params.Body instanceof AWS.util.stream.Stream)) {\n      req.httpRequest.headers['Expect'] = '100-continue';\n    }\n  },\n\n  /**\n   * Adds a default content type if none is supplied.\n   *\n   * @api private\n   */\n  addContentType: function addContentType(req) {\n    var httpRequest = req.httpRequest;\n    if (httpRequest.method === 'GET' || httpRequest.method === 'HEAD') {\n      // Content-Type is not set in GET/HEAD requests\n      delete httpRequest.headers['Content-Type'];\n      return;\n    }\n\n    if (!httpRequest.headers['Content-Type']) { // always have a Content-Type\n      httpRequest.headers['Content-Type'] = 'application/octet-stream';\n    }\n\n    var contentType = httpRequest.headers['Content-Type'];\n    if (AWS.util.isBrowser()) {\n      if (typeof httpRequest.body === 'string' && !contentType.match(/;\\s*charset=/)) {\n        var charset = '; charset=UTF-8';\n        httpRequest.headers['Content-Type'] += charset;\n      } else {\n        var replaceFn = function(_, prefix, charsetName) {\n          return prefix + charsetName.toUpperCase();\n        };\n\n        httpRequest.headers['Content-Type'] =\n          contentType.replace(/(;\\s*charset=)(.+)$/, replaceFn);\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  computableChecksumOperations: {\n    putBucketCors: true,\n    putBucketLifecycle: true,\n    putBucketLifecycleConfiguration: true,\n    putBucketTagging: true,\n    deleteObjects: true,\n    putBucketReplication: true,\n    putObjectLegalHold: true,\n    putObjectRetention: true,\n    putObjectLockConfiguration: true\n  },\n\n  /**\n   * Checks whether checksums should be computed for the request.\n   * If the request requires checksums to be computed, this will always\n   * return true, otherwise it depends on whether {AWS.Config.computeChecksums}\n   * is set.\n   *\n   * @param req [AWS.Request] the request to check against\n   * @return [Boolean] whether to compute checksums for a request.\n   * @api private\n   */\n  willComputeChecksums: function willComputeChecksums(req) {\n    if (this.computableChecksumOperations[req.operation]) return true;\n    if (!this.config.computeChecksums) return false;\n\n    // TODO: compute checksums for Stream objects\n    if (!AWS.util.Buffer.isBuffer(req.httpRequest.body) &&\n        typeof req.httpRequest.body !== 'string') {\n      return false;\n    }\n\n    var rules = req.service.api.operations[req.operation].input.members;\n\n    // Sha256 signing disabled, and not a presigned url\n    if (req.service.shouldDisableBodySigning(req) && !Object.prototype.hasOwnProperty.call(req.httpRequest.headers, 'presigned-expires')) {\n      if (rules.ContentMD5 && !req.params.ContentMD5) {\n        return true;\n      }\n    }\n\n    // V4 signer uses SHA256 signatures so only compute MD5 if it is required\n    if (req.service.getSignerClass(req) === AWS.Signers.V4) {\n      if (rules.ContentMD5 && !rules.ContentMD5.required) return false;\n    }\n\n    if (rules.ContentMD5 && !req.params.ContentMD5) return true;\n  },\n\n  /**\n   * A listener that computes the Content-MD5 and sets it in the header.\n   * @see AWS.S3.willComputeChecksums\n   * @api private\n   */\n  computeContentMd5: function computeContentMd5(req) {\n    if (req.service.willComputeChecksums(req)) {\n      var md5 = AWS.util.crypto.md5(req.httpRequest.body, 'base64');\n      req.httpRequest.headers['Content-MD5'] = md5;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  computeSseCustomerKeyMd5: function computeSseCustomerKeyMd5(req) {\n    var keys = {\n      SSECustomerKey: 'x-amz-server-side-encryption-customer-key-MD5',\n      CopySourceSSECustomerKey: 'x-amz-copy-source-server-side-encryption-customer-key-MD5'\n    };\n    AWS.util.each(keys, function(key, header) {\n      if (req.params[key]) {\n        var value = AWS.util.crypto.md5(req.params[key], 'base64');\n        req.httpRequest.headers[header] = value;\n      }\n    });\n  },\n\n  /**\n   * Returns true if the bucket name should be left in the URI path for\n   * a request to S3.  This function takes into account the current\n   * endpoint protocol (e.g. http or https).\n   *\n   * @api private\n   */\n  pathStyleBucketName: function pathStyleBucketName(bucketName) {\n    // user can force path style requests via the configuration\n    if (this.config.s3ForcePathStyle) return true;\n    if (this.config.s3BucketEndpoint) return false;\n\n    if (s3util.dnsCompatibleBucketName(bucketName)) {\n      return (this.config.sslEnabled && bucketName.match(/\\./)) ? true : false;\n    } else {\n      return true; // not dns compatible names must always use path style\n    }\n  },\n\n  /**\n   * For COPY operations, some can be error even with status code 200.\n   * SDK treats the response as exception when response body indicates\n   * an exception or body is empty.\n   *\n   * @api private\n   */\n  extractErrorFrom200Response: function extractErrorFrom200Response(resp) {\n    if (!operationsWith200StatusCodeError[resp.request.operation]) return;\n    var httpResponse = resp.httpResponse;\n    if (httpResponse.body && httpResponse.body.toString().match('<Error>')) {\n      // Response body with '<Error>...</Error>' indicates an exception.\n      // Get S3 client object. In ManagedUpload, this.service refers to\n      // S3 client object.\n      resp.data = null;\n      var service = this.service ? this.service : this;\n      service.extractError(resp);\n      throw resp.error;\n    } else if (!httpResponse.body || !httpResponse.body.toString().match(/<[\\w_]/)) {\n      // When body is empty or incomplete, S3 might stop the request on detecting client\n      // side aborting the request.\n      resp.data = null;\n      throw AWS.util.error(new Error(), {\n        code: 'InternalError',\n        message: 'S3 aborted request'\n      });\n    }\n  },\n\n  /**\n   * @return [Boolean] whether the error can be retried\n   * @api private\n   */\n  retryableError: function retryableError(error, request) {\n    if (operationsWith200StatusCodeError[request.operation] &&\n        error.statusCode === 200) {\n      return true;\n    } else if (request._requestRegionForBucket &&\n        request.service.bucketRegionCache[request._requestRegionForBucket]) {\n      return false;\n    } else if (error && error.code === 'RequestTimeout') {\n      return true;\n    } else if (error &&\n        regionRedirectErrorCodes.indexOf(error.code) != -1 &&\n        error.region && error.region != request.httpRequest.region) {\n      request.httpRequest.region = error.region;\n      if (error.statusCode === 301) {\n        request.service.updateReqBucketRegion(request);\n      }\n      return true;\n    } else {\n      var _super = AWS.Service.prototype.retryableError;\n      return _super.call(this, error, request);\n    }\n  },\n\n  /**\n   * Updates httpRequest with region. If region is not provided, then\n   * the httpRequest will be updated based on httpRequest.region\n   *\n   * @api private\n   */\n  updateReqBucketRegion: function updateReqBucketRegion(request, region) {\n    var httpRequest = request.httpRequest;\n    if (typeof region === 'string' && region.length) {\n      httpRequest.region = region;\n    }\n    if (!httpRequest.endpoint.host.match(/s3(?!-accelerate).*\\.amazonaws\\.com$/)) {\n      return;\n    }\n    var service = request.service;\n    var s3Config = service.config;\n    var s3BucketEndpoint = s3Config.s3BucketEndpoint;\n    if (s3BucketEndpoint) {\n      delete s3Config.s3BucketEndpoint;\n    }\n    var newConfig = AWS.util.copy(s3Config);\n    delete newConfig.endpoint;\n    newConfig.region = httpRequest.region;\n\n    httpRequest.endpoint = (new AWS.S3(newConfig)).endpoint;\n    service.populateURI(request);\n    s3Config.s3BucketEndpoint = s3BucketEndpoint;\n    httpRequest.headers.Host = httpRequest.endpoint.host;\n\n    if (request._asm.currentState === 'validate') {\n      request.removeListener('build', service.populateURI);\n      request.addListener('build', service.removeVirtualHostedBucketFromPath);\n    }\n  },\n\n  /**\n   * Provides a specialized parser for getBucketLocation -- all other\n   * operations are parsed by the super class.\n   *\n   * @api private\n   */\n  extractData: function extractData(resp) {\n    var req = resp.request;\n    if (req.operation === 'getBucketLocation') {\n      var match = resp.httpResponse.body.toString().match(/>(.+)<\\/Location/);\n      delete resp.data['_'];\n      if (match) {\n        resp.data.LocationConstraint = match[1];\n      } else {\n        resp.data.LocationConstraint = '';\n      }\n    }\n    var bucket = req.params.Bucket || null;\n    if (req.operation === 'deleteBucket' && typeof bucket === 'string' && !resp.error) {\n      req.service.clearBucketRegionCache(bucket);\n    } else {\n      var headers = resp.httpResponse.headers || {};\n      var region = headers['x-amz-bucket-region'] || null;\n      if (!region && req.operation === 'createBucket' && !resp.error) {\n        var createBucketConfiguration = req.params.CreateBucketConfiguration;\n        if (!createBucketConfiguration) {\n          region = 'us-east-1';\n        } else if (createBucketConfiguration.LocationConstraint === 'EU') {\n          region = 'eu-west-1';\n        } else {\n          region = createBucketConfiguration.LocationConstraint;\n        }\n      }\n      if (region) {\n          if (bucket && region !== req.service.bucketRegionCache[bucket]) {\n            req.service.bucketRegionCache[bucket] = region;\n          }\n      }\n    }\n    req.service.extractRequestIds(resp);\n  },\n\n  /**\n   * Extracts an error object from the http response.\n   *\n   * @api private\n   */\n  extractError: function extractError(resp) {\n    var codes = {\n      304: 'NotModified',\n      403: 'Forbidden',\n      400: 'BadRequest',\n      404: 'NotFound'\n    };\n\n    var req = resp.request;\n    var code = resp.httpResponse.statusCode;\n    var body = resp.httpResponse.body || '';\n\n    var headers = resp.httpResponse.headers || {};\n    var region = headers['x-amz-bucket-region'] || null;\n    var bucket = req.params.Bucket || null;\n    var bucketRegionCache = req.service.bucketRegionCache;\n    if (region && bucket && region !== bucketRegionCache[bucket]) {\n      bucketRegionCache[bucket] = region;\n    }\n\n    var cachedRegion;\n    if (codes[code] && body.length === 0) {\n      if (bucket && !region) {\n        cachedRegion = bucketRegionCache[bucket] || null;\n        if (cachedRegion !== req.httpRequest.region) {\n          region = cachedRegion;\n        }\n      }\n      resp.error = AWS.util.error(new Error(), {\n        code: codes[code],\n        message: null,\n        region: region\n      });\n    } else {\n      var data = new AWS.XML.Parser().parse(body.toString());\n\n      if (data.Region && !region) {\n        region = data.Region;\n        if (bucket && region !== bucketRegionCache[bucket]) {\n          bucketRegionCache[bucket] = region;\n        }\n      } else if (bucket && !region && !data.Region) {\n        cachedRegion = bucketRegionCache[bucket] || null;\n        if (cachedRegion !== req.httpRequest.region) {\n          region = cachedRegion;\n        }\n      }\n\n      resp.error = AWS.util.error(new Error(), {\n        code: data.Code || code,\n        message: data.Message || null,\n        region: region\n      });\n    }\n    req.service.extractRequestIds(resp);\n  },\n\n  /**\n   * If region was not obtained synchronously, then send async request\n   * to get bucket region for errors resulting from wrong region.\n   *\n   * @api private\n   */\n  requestBucketRegion: function requestBucketRegion(resp, done) {\n    var error = resp.error;\n    var req = resp.request;\n    var bucket = req.params.Bucket || null;\n\n    if (!error || !bucket || error.region || req.operation === 'listObjects' ||\n        (AWS.util.isNode() && req.operation === 'headBucket') ||\n        (error.statusCode === 400 && req.operation !== 'headObject') ||\n        regionRedirectErrorCodes.indexOf(error.code) === -1) {\n      return done();\n    }\n    var reqOperation = AWS.util.isNode() ? 'headBucket' : 'listObjects';\n    var reqParams = {Bucket: bucket};\n    if (reqOperation === 'listObjects') reqParams.MaxKeys = 0;\n    var regionReq = req.service[reqOperation](reqParams);\n    regionReq._requestRegionForBucket = bucket;\n    regionReq.send(function() {\n      var region = req.service.bucketRegionCache[bucket] || null;\n      error.region = region;\n      done();\n    });\n  },\n\n   /**\n   * For browser only. If NetworkingError received, will attempt to obtain\n   * the bucket region.\n   *\n   * @api private\n   */\n   reqRegionForNetworkingError: function reqRegionForNetworkingError(resp, done) {\n    if (!AWS.util.isBrowser()) {\n      return done();\n    }\n    var error = resp.error;\n    var request = resp.request;\n    var bucket = request.params.Bucket;\n    if (!error || error.code !== 'NetworkingError' || !bucket ||\n        request.httpRequest.region === 'us-east-1') {\n      return done();\n    }\n    var service = request.service;\n    var bucketRegionCache = service.bucketRegionCache;\n    var cachedRegion = bucketRegionCache[bucket] || null;\n\n    if (cachedRegion && cachedRegion !== request.httpRequest.region) {\n      service.updateReqBucketRegion(request, cachedRegion);\n      done();\n    } else if (!s3util.dnsCompatibleBucketName(bucket)) {\n      service.updateReqBucketRegion(request, 'us-east-1');\n      if (bucketRegionCache[bucket] !== 'us-east-1') {\n        bucketRegionCache[bucket] = 'us-east-1';\n      }\n      done();\n    } else if (request.httpRequest.virtualHostedBucket) {\n      var getRegionReq = service.listObjects({Bucket: bucket, MaxKeys: 0});\n      service.updateReqBucketRegion(getRegionReq, 'us-east-1');\n      getRegionReq._requestRegionForBucket = bucket;\n\n      getRegionReq.send(function() {\n        var region = service.bucketRegionCache[bucket] || null;\n        if (region && region !== request.httpRequest.region) {\n          service.updateReqBucketRegion(request, region);\n        }\n        done();\n      });\n    } else {\n      // DNS-compatible path-style\n      // (s3ForcePathStyle or bucket name with dot over https)\n      // Cannot obtain region information for this case\n      done();\n    }\n   },\n\n  /**\n   * Cache for bucket region.\n   *\n   * @api private\n   */\n   bucketRegionCache: {},\n\n  /**\n   * Clears bucket region cache.\n   *\n   * @api private\n   */\n   clearBucketRegionCache: function(buckets) {\n    var bucketRegionCache = this.bucketRegionCache;\n    if (!buckets) {\n      buckets = Object.keys(bucketRegionCache);\n    } else if (typeof buckets === 'string') {\n      buckets = [buckets];\n    }\n    for (var i = 0; i < buckets.length; i++) {\n      delete bucketRegionCache[buckets[i]];\n    }\n    return bucketRegionCache;\n   },\n\n   /**\n    * Corrects request region if bucket's cached region is different\n    *\n    * @api private\n    */\n  correctBucketRegionFromCache: function correctBucketRegionFromCache(req) {\n    var bucket = req.params.Bucket || null;\n    if (bucket) {\n      var service = req.service;\n      var requestRegion = req.httpRequest.region;\n      var cachedRegion = service.bucketRegionCache[bucket];\n      if (cachedRegion && cachedRegion !== requestRegion) {\n        service.updateReqBucketRegion(req, cachedRegion);\n      }\n    }\n  },\n\n  /**\n   * Extracts S3 specific request ids from the http response.\n   *\n   * @api private\n   */\n  extractRequestIds: function extractRequestIds(resp) {\n    var extendedRequestId = resp.httpResponse.headers ? resp.httpResponse.headers['x-amz-id-2'] : null;\n    var cfId = resp.httpResponse.headers ? resp.httpResponse.headers['x-amz-cf-id'] : null;\n    resp.extendedRequestId = extendedRequestId;\n    resp.cfId = cfId;\n\n    if (resp.error) {\n      resp.error.requestId = resp.requestId || null;\n      resp.error.extendedRequestId = extendedRequestId;\n      resp.error.cfId = cfId;\n    }\n  },\n\n  /**\n   * Get a pre-signed URL for a given operation name.\n   *\n   * @note You must ensure that you have static or previously resolved\n   *   credentials if you call this method synchronously (with no callback),\n   *   otherwise it may not properly sign the request. If you cannot guarantee\n   *   this (you are using an asynchronous credential provider, i.e., EC2\n   *   IAM roles), you should always call this method with an asynchronous\n   *   callback.\n   * @note Not all operation parameters are supported when using pre-signed\n   *   URLs. Certain parameters, such as `SSECustomerKey`, `ACL`, `Expires`,\n   *   `ContentLength`, or `Tagging` must be provided as headers when sending a\n   *   request. If you are using pre-signed URLs to upload from a browser and\n   *   need to use these fields, see {createPresignedPost}.\n   * @note The default signer allows altering the request by adding corresponding\n   *   headers to set some parameters (e.g. Range) and these added parameters\n   *   won't be signed. You must use signatureVersion v4 to to include these\n   *   parameters in the signed portion of the URL and enforce exact matching\n   *   between headers and signed params in the URL.\n   * @note This operation cannot be used with a promise. See note above regarding\n   *   asynchronous credentials and use with a callback.\n   * @param operation [String] the name of the operation to call\n   * @param params [map] parameters to pass to the operation. See the given\n   *   operation for the expected operation parameters. In addition, you can\n   *   also pass the \"Expires\" parameter to inform S3 how long the URL should\n   *   work for.\n   * @option params Expires [Integer] (900) the number of seconds to expire\n   *   the pre-signed URL operation in. Defaults to 15 minutes.\n   * @param callback [Function] if a callback is provided, this function will\n   *   pass the URL as the second parameter (after the error parameter) to\n   *   the callback function.\n   * @return [String] if called synchronously (with no callback), returns the\n   *   signed URL.\n   * @return [null] nothing is returned if a callback is provided.\n   * @example Pre-signing a getObject operation (synchronously)\n   *   var params = {Bucket: 'bucket', Key: 'key'};\n   *   var url = s3.getSignedUrl('getObject', params);\n   *   console.log('The URL is', url);\n   * @example Pre-signing a putObject (asynchronously)\n   *   var params = {Bucket: 'bucket', Key: 'key'};\n   *   s3.getSignedUrl('putObject', params, function (err, url) {\n   *     console.log('The URL is', url);\n   *   });\n   * @example Pre-signing a putObject operation with a specific payload\n   *   var params = {Bucket: 'bucket', Key: 'key', Body: 'body'};\n   *   var url = s3.getSignedUrl('putObject', params);\n   *   console.log('The URL is', url);\n   * @example Passing in a 1-minute expiry time for a pre-signed URL\n   *   var params = {Bucket: 'bucket', Key: 'key', Expires: 60};\n   *   var url = s3.getSignedUrl('getObject', params);\n   *   console.log('The URL is', url); // expires in 60 seconds\n   */\n  getSignedUrl: function getSignedUrl(operation, params, callback) {\n    params = AWS.util.copy(params || {});\n    var expires = params.Expires || 900;\n\n    if (typeof expires !== 'number') {\n      throw AWS.util.error(new Error(),\n        { code: 'InvalidParameterException', message: 'The expiration must be a number, received ' + typeof expires });\n    }\n\n    delete params.Expires; // we can't validate this\n    var request = this.makeRequest(operation, params);\n\n    if (callback) {\n      AWS.util.defer(function() {\n        request.presign(expires, callback);\n      });\n    } else {\n      return request.presign(expires, callback);\n    }\n  },\n\n  /**\n   * @!method  getSignedUrlPromise()\n   *   Returns a 'thenable' promise that will be resolved with a pre-signed URL\n   *   for a given operation name.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @note Not all operation parameters are supported when using pre-signed\n   *      URLs. Certain parameters, such as `SSECustomerKey`, `ACL`, `Expires`,\n   *      `ContentLength`, or `Tagging` must be provided as headers when sending a\n   *      request. If you are using pre-signed URLs to upload from a browser and\n   *      need to use these fields, see {createPresignedPost}.\n   *   @param operation [String] the name of the operation to call\n   *   @param params [map] parameters to pass to the operation. See the given\n   *      operation for the expected operation parameters. In addition, you can\n   *      also pass the \"Expires\" parameter to inform S3 how long the URL should\n   *      work for.\n   *   @option params Expires [Integer] (900) the number of seconds to expire\n   *      the pre-signed URL operation in. Defaults to 15 minutes.\n   *   @callback fulfilledCallback function(url)\n   *     Called if the promise is fulfilled.\n   *     @param url [String] the signed url\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] if an error occurred, this value will be filled\n   *   @return [Promise] A promise that represents the state of the `refresh` call.\n   *   @example Pre-signing a getObject operation\n   *      var params = {Bucket: 'bucket', Key: 'key'};\n   *      var promise = s3.getSignedUrlPromise('getObject', params);\n   *      promise.then(function(url) {\n   *        console.log('The URL is', url);\n   *      }, function(err) { ... });\n   *   @example Pre-signing a putObject operation with a specific payload\n   *      var params = {Bucket: 'bucket', Key: 'key', Body: 'body'};\n   *      var promise = s3.getSignedUrlPromise('putObject', params);\n   *      promise.then(function(url) {\n   *        console.log('The URL is', url);\n   *      }, function(err) { ... });\n   *   @example Passing in a 1-minute expiry time for a pre-signed URL\n   *      var params = {Bucket: 'bucket', Key: 'key', Expires: 60};\n   *      var promise = s3.getSignedUrlPromise('getObject', params);\n   *      promise.then(function(url) {\n   *        console.log('The URL is', url);\n   *      }, function(err) { ... });\n   */\n\n  /**\n   * Get a pre-signed POST policy to support uploading to S3 directly from an\n   * HTML form.\n   *\n   * @param params [map]\n   * @option params Bucket [String]     The bucket to which the post should be\n   *                                    uploaded\n   * @option params Expires [Integer]   (3600) The number of seconds for which\n   *                                    the presigned policy should be valid.\n   * @option params Conditions [Array]  An array of conditions that must be met\n   *                                    for the presigned policy to allow the\n   *                                    upload. This can include required tags,\n   *                                    the accepted range for content lengths,\n   *                                    etc.\n   * @see http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-HTTPPOSTConstructPolicy.html\n   * @option params Fields [map]        Fields to include in the form. All\n   *                                    values passed in as fields will be\n   *                                    signed as exact match conditions.\n   * @param callback [Function]\n   *\n   * @note All fields passed in when creating presigned post data will be signed\n   *   as exact match conditions. Any fields that will be interpolated by S3\n   *   must be added to the fields hash after signing, and an appropriate\n   *   condition for such fields must be explicitly added to the Conditions\n   *   array passed to this function before signing.\n   *\n   * @example Presiging post data with a known key\n   *   var params = {\n   *     Bucket: 'bucket',\n   *     Fields: {\n   *       key: 'key'\n   *     }\n   *   };\n   *   s3.createPresignedPost(params, function(err, data) {\n   *     if (err) {\n   *       console.error('Presigning post data encountered an error', err);\n   *     } else {\n   *       console.log('The post data is', data);\n   *     }\n   *   });\n   *\n   * @example Presigning post data with an interpolated key\n   *   var params = {\n   *     Bucket: 'bucket',\n   *     Conditions: [\n   *       ['starts-with', '$key', 'path/to/uploads/']\n   *     ]\n   *   };\n   *   s3.createPresignedPost(params, function(err, data) {\n   *     if (err) {\n   *       console.error('Presigning post data encountered an error', err);\n   *     } else {\n   *       data.Fields.key = 'path/to/uploads/${filename}';\n   *       console.log('The post data is', data);\n   *     }\n   *   });\n   *\n   * @note You must ensure that you have static or previously resolved\n   *   credentials if you call this method synchronously (with no callback),\n   *   otherwise it may not properly sign the request. If you cannot guarantee\n   *   this (you are using an asynchronous credential provider, i.e., EC2\n   *   IAM roles), you should always call this method with an asynchronous\n   *   callback.\n   *\n   * @return [map]  If called synchronously (with no callback), returns a hash\n   *                with the url to set as the form action and a hash of fields\n   *                to include in the form.\n   * @return [null] Nothing is returned if a callback is provided.\n   *\n   * @callback callback function (err, data)\n   *  @param err [Error] the error object returned from the policy signer\n   *  @param data [map] The data necessary to construct an HTML form\n   *  @param data.url [String] The URL to use as the action of the form\n   *  @param data.fields [map] A hash of fields that must be included in the\n   *                           form for the upload to succeed. This hash will\n   *                           include the signed POST policy, your access key\n   *                           ID and security token (if present), etc. These\n   *                           may be safely included as input elements of type\n   *                           'hidden.'\n   */\n  createPresignedPost: function createPresignedPost(params, callback) {\n    if (typeof params === 'function' && callback === undefined) {\n      callback = params;\n      params = null;\n    }\n\n    params = AWS.util.copy(params || {});\n    var boundParams = this.config.params || {};\n    var bucket = params.Bucket || boundParams.Bucket,\n      self = this,\n      config = this.config,\n      endpoint = AWS.util.copy(this.endpoint);\n    if (!config.s3BucketEndpoint) {\n      endpoint.pathname = '/' + bucket;\n    }\n\n    function finalizePost() {\n      return {\n        url: AWS.util.urlFormat(endpoint),\n        fields: self.preparePostFields(\n          config.credentials,\n          config.region,\n          bucket,\n          params.Fields,\n          params.Conditions,\n          params.Expires\n        )\n      };\n    }\n\n    if (callback) {\n      config.getCredentials(function (err) {\n        if (err) {\n          callback(err);\n        }\n\n        callback(null, finalizePost());\n      });\n    } else {\n      return finalizePost();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  preparePostFields: function preparePostFields(\n    credentials,\n    region,\n    bucket,\n    fields,\n    conditions,\n    expiresInSeconds\n  ) {\n    var now = this.getSkewCorrectedDate();\n    if (!credentials || !region || !bucket) {\n      throw new Error('Unable to create a POST object policy without a bucket,'\n        + ' region, and credentials');\n    }\n    fields = AWS.util.copy(fields || {});\n    conditions = (conditions || []).slice(0);\n    expiresInSeconds = expiresInSeconds || 3600;\n\n    var signingDate = AWS.util.date.iso8601(now).replace(/[:\\-]|\\.\\d{3}/g, '');\n    var shortDate = signingDate.substr(0, 8);\n    var scope = v4Credentials.createScope(shortDate, region, 's3');\n    var credential = credentials.accessKeyId + '/' + scope;\n\n    fields['bucket'] = bucket;\n    fields['X-Amz-Algorithm'] = 'AWS4-HMAC-SHA256';\n    fields['X-Amz-Credential'] = credential;\n    fields['X-Amz-Date'] = signingDate;\n    if (credentials.sessionToken) {\n      fields['X-Amz-Security-Token'] = credentials.sessionToken;\n    }\n    for (var field in fields) {\n      if (fields.hasOwnProperty(field)) {\n        var condition = {};\n        condition[field] = fields[field];\n        conditions.push(condition);\n      }\n    }\n\n    fields.Policy = this.preparePostPolicy(\n      new Date(now.valueOf() + expiresInSeconds * 1000),\n      conditions\n    );\n    fields['X-Amz-Signature'] = AWS.util.crypto.hmac(\n      v4Credentials.getSigningKey(credentials, shortDate, region, 's3', true),\n      fields.Policy,\n      'hex'\n    );\n\n    return fields;\n  },\n\n  /**\n   * @api private\n   */\n  preparePostPolicy: function preparePostPolicy(expiration, conditions) {\n    return AWS.util.base64.encode(JSON.stringify({\n      expiration: AWS.util.date.iso8601(expiration),\n      conditions: conditions\n    }));\n  },\n\n  /**\n   * @api private\n   */\n  prepareSignedUrl: function prepareSignedUrl(request) {\n    request.addListener('validate', request.service.noPresignedContentLength);\n    request.removeListener('build', request.service.addContentType);\n    if (!request.params.Body) {\n      // no Content-MD5/SHA-256 if body is not provided\n      request.removeListener('build', request.service.computeContentMd5);\n    } else {\n      request.addListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);\n    }\n  },\n\n  /**\n   * @api private\n   * @param request\n   */\n  disableBodySigning: function disableBodySigning(request) {\n    var headers = request.httpRequest.headers;\n    // Add the header to anything that isn't a presigned url, unless that presigned url had a body defined\n    if (!Object.prototype.hasOwnProperty.call(headers, 'presigned-expires')) {\n      headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n    }\n  },\n\n  /**\n   * @api private\n   */\n  noPresignedContentLength: function noPresignedContentLength(request) {\n    if (request.params.ContentLength !== undefined) {\n      throw AWS.util.error(new Error(), {code: 'UnexpectedParameter',\n        message: 'ContentLength is not supported in pre-signed URLs.'});\n    }\n  },\n\n  createBucket: function createBucket(params, callback) {\n    // When creating a bucket *outside* the classic region, the location\n    // constraint must be set for the bucket and it must match the endpoint.\n    // This chunk of code will set the location constraint param based\n    // on the region (when possible), but it will not override a passed-in\n    // location constraint.\n    if (typeof params === 'function' || !params) {\n      callback = callback || params;\n      params = {};\n    }\n    var hostname = this.endpoint.hostname;\n    // copy params so that appending keys does not unintentioinallly\n    // mutate params object argument passed in by user\n    var copiedParams = AWS.util.copy(params);\n\n    if (hostname !== this.api.globalEndpoint && !params.CreateBucketConfiguration) {\n      copiedParams.CreateBucketConfiguration = { LocationConstraint: this.config.region };\n    }\n    return this.makeRequest('createBucket', copiedParams, callback);\n  },\n\n  /**\n   * @see AWS.S3.ManagedUpload\n   * @overload upload(params = {}, [options], [callback])\n   *   Uploads an arbitrarily sized buffer, blob, or stream, using intelligent\n   *   concurrent handling of parts if the payload is large enough. You can\n   *   configure the concurrent queue size by setting `options`. Note that this\n   *   is the only operation for which the SDK can retry requests with stream\n   *   bodies.\n   *\n   *   @param (see AWS.S3.putObject)\n   *   @option (see AWS.S3.ManagedUpload.constructor)\n   *   @return [AWS.S3.ManagedUpload] the managed upload object that can call\n   *     `send()` or track progress.\n   *   @example Uploading a stream object\n   *     var params = {Bucket: 'bucket', Key: 'key', Body: stream};\n   *     s3.upload(params, function(err, data) {\n   *       console.log(err, data);\n   *     });\n   *   @example Uploading a stream with concurrency of 1 and partSize of 10mb\n   *     var params = {Bucket: 'bucket', Key: 'key', Body: stream};\n   *     var options = {partSize: 10 * 1024 * 1024, queueSize: 1};\n   *     s3.upload(params, options, function(err, data) {\n   *       console.log(err, data);\n   *     });\n   * @callback callback function(err, data)\n   *   @param err [Error] an error or null if no error occurred.\n   *   @param data [map] The response data from the successful upload:\n   *   @param data.Location [String] the URL of the uploaded object\n   *   @param data.ETag [String] the ETag of the uploaded object\n   *   @param data.Bucket [String]  the bucket to which the object was uploaded\n   *   @param data.Key [String] the key to which the object was uploaded\n   */\n  upload: function upload(params, options, callback) {\n    if (typeof options === 'function' && callback === undefined) {\n      callback = options;\n      options = null;\n    }\n\n    options = options || {};\n    options = AWS.util.merge(options || {}, {service: this, params: params});\n\n    var uploader = new AWS.S3.ManagedUpload(options);\n    if (typeof callback === 'function') uploader.send(callback);\n    return uploader;\n  }\n});\n\n/**\n * @api private\n */\nAWS.S3.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.getSignedUrlPromise = AWS.util.promisifyMethod('getSignedUrl', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.S3.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.getSignedUrlPromise;\n};\n\nAWS.util.addPromises(AWS.S3);\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['gamelift'] = {};\nAWS.GameLift = Service.defineService('gamelift', ['2015-10-01']);\nObject.defineProperty(apiLoader.services['gamelift'], '2015-10-01', {\n  get: function get() {\n    var model = require('../apis/gamelift-2015-10-01.min.json');\n    model.paginators = require('../apis/gamelift-2015-10-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.GameLift;\n","var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\nrequire('./v3');\n\n/**\n * @api private\n */\nAWS.Signers.V3Https = inherit(AWS.Signers.V3, {\n  authorization: function authorization(credentials) {\n    return 'AWS3-HTTPS ' +\n      'AWSAccessKeyId=' + credentials.accessKeyId + ',' +\n      'Algorithm=HmacSHA256,' +\n      'Signature=' + this.signature(credentials);\n  },\n\n  stringToSign: function stringToSign() {\n    return this.request.headers['X-Amz-Date'];\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V3Https;\n","var AWS = require('./core');\nvar util = require('./util');\nvar endpointDiscoveryEnabledEnvs = ['AWS_ENABLE_ENDPOINT_DISCOVERY', 'AWS_ENDPOINT_DISCOVERY_ENABLED'];\n\n/**\n * Generate key (except resources and operation part) to index the endpoints in the cache\n * If input shape has endpointdiscoveryid trait then use\n *   accessKey + operation + resources + region + service as cache key\n * If input shape doesn't have endpointdiscoveryid trait then use\n *   accessKey + region + service as cache key\n * @return [map<String,String>] object with keys to index endpoints.\n * @api private\n */\nfunction getCacheKey(request) {\n  var service = request.service;\n  var api = service.api || {};\n  var operations = api.operations;\n  var identifiers = {};\n  if (service.config.region) {\n    identifiers.region = service.config.region;\n  }\n  if (api.serviceId) {\n    identifiers.serviceId = api.serviceId;\n  }\n  if (service.config.credentials.accessKeyId) {\n    identifiers.accessKeyId = service.config.credentials.accessKeyId;\n  }\n  return identifiers;\n}\n\n/**\n * Recursive helper for marshallCustomIdentifiers().\n * Looks for required string input members that have 'endpointdiscoveryid' trait.\n * @api private\n */\nfunction marshallCustomIdentifiersHelper(result, params, shape) {\n  if (!shape || params === undefined || params === null) return;\n  if (shape.type === 'structure' && shape.required && shape.required.length > 0) {\n    util.arrayEach(shape.required, function(name) {\n      var memberShape = shape.members[name];\n      if (memberShape.endpointDiscoveryId === true) {\n        var locationName = memberShape.isLocationName ? memberShape.name : name;\n        result[locationName] = String(params[name]);\n      } else {\n        marshallCustomIdentifiersHelper(result, params[name], memberShape);\n      }\n    });\n  }\n}\n\n/**\n * Get custom identifiers for cache key.\n * Identifies custom identifiers by checking each shape's `endpointDiscoveryId` trait.\n * @param [object] request object\n * @param [object] input shape of the given operation's api\n * @api private\n */\nfunction marshallCustomIdentifiers(request, shape) {\n  var identifiers = {};\n  marshallCustomIdentifiersHelper(identifiers, request.params, shape);\n  return identifiers;\n}\n\n/**\n * Call endpoint discovery operation when it's optional.\n * When endpoint is available in cache then use the cached endpoints. If endpoints\n * are unavailable then use regional endpoints and call endpoint discovery operation\n * asynchronously. This is turned off by default.\n * @param [object] request object\n * @api private\n */\nfunction optionalDiscoverEndpoint(request) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n  var endpoints = AWS.endpointCache.get(cacheKey);\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //or endpoint operation just failed in 1 minute\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    //found endpoint record from cache\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n  } else {\n    //endpoint record not in cache or outdated. make discovery operation\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers,\n    });\n    addApiVersionHeader(endpointRequest);\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    endpointRequest.removeListener('retry', AWS.EventListeners.Core.RETRY_CHECK);\n    //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n    AWS.endpointCache.put(cacheKey, [{\n      Address: '',\n      CachePeriodInMinutes: 1\n    }]);\n    endpointRequest.send(function(err, data) {\n      if (data && data.Endpoints) {\n        AWS.endpointCache.put(cacheKey, data.Endpoints);\n      } else if (err) {\n        AWS.endpointCache.put(cacheKey, [{\n          Address: '',\n          CachePeriodInMinutes: 1 //not to make more endpoint operation in next 1 minute\n        }]);\n      }\n    });\n  }\n}\n\nvar requestQueue = {};\n\n/**\n * Call endpoint discovery operation when it's required.\n * When endpoint is available in cache then use cached ones. If endpoints are\n * unavailable then SDK should call endpoint operation then use returned new\n * endpoint for the api call. SDK will automatically attempt to do endpoint\n * discovery. This is turned off by default\n * @param [object] request object\n * @api private\n */\nfunction requiredDiscoverEndpoint(request, done) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n  var cacheKeyStr = AWS.EndpointCache.getKeyString(cacheKey);\n  var endpoints = AWS.endpointCache.get(cacheKeyStr); //endpoint cache also accepts string keys\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //push request object to a pending queue\n    if (!requestQueue[cacheKeyStr]) requestQueue[cacheKeyStr] = [];\n    requestQueue[cacheKeyStr].push({request: request, callback: done});\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n    done();\n  } else {\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers,\n    });\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    addApiVersionHeader(endpointRequest);\n\n    //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n    AWS.endpointCache.put(cacheKeyStr, [{\n      Address: '',\n      CachePeriodInMinutes: 60 //long-live cache\n    }]);\n    endpointRequest.send(function(err, data) {\n      if (err) {\n        request.response.error = util.error(err, { retryable: false });\n        AWS.endpointCache.remove(cacheKey);\n\n        //fail all the pending requests in batch\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function(requestContext) {\n            requestContext.request.response.error = util.error(err, { retryable: false });\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      } else if (data) {\n        AWS.endpointCache.put(cacheKeyStr, data.Endpoints);\n        request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n\n        //update the endpoint for all the pending requests in batch\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function(requestContext) {\n            requestContext.request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      }\n      done();\n    });\n  }\n}\n\n/**\n * add api version header to endpoint operation\n * @api private\n */\nfunction addApiVersionHeader(endpointRequest) {\n  var api = endpointRequest.service.api;\n  var apiVersion = api.apiVersion;\n  if (apiVersion && !endpointRequest.httpRequest.headers['x-amz-api-version']) {\n    endpointRequest.httpRequest.headers['x-amz-api-version'] = apiVersion;\n  }\n}\n\n/**\n * If api call gets invalid endpoint exception, SDK should attempt to remove the invalid\n * endpoint from cache.\n * @api private\n */\nfunction invalidateCachedEndpoints(response) {\n  var error = response.error;\n  var httpResponse = response.httpResponse;\n  if (error &&\n    (error.code === 'InvalidEndpointException' || httpResponse.statusCode === 421)\n  ) {\n    var request = response.request;\n    var operations = request.service.api.operations || {};\n    var inputShape = operations[request.operation] ? operations[request.operation].input : undefined;\n    var identifiers = marshallCustomIdentifiers(request, inputShape);\n    var cacheKey = getCacheKey(request);\n    if (Object.keys(identifiers).length > 0) {\n      cacheKey = util.update(cacheKey, identifiers);\n      if (operations[request.operation]) cacheKey.operation = operations[request.operation].name;\n    }\n    AWS.endpointCache.remove(cacheKey);\n  }\n}\n\n/**\n * If endpoint is explicitly configured, SDK should not do endpoint discovery in anytime.\n * @param [object] client Service client object.\n * @api private\n */\nfunction hasCustomEndpoint(client) {\n  //if set endpoint is set for specific client, enable endpoint discovery will raise an error.\n  if (client._originalConfig && client._originalConfig.endpoint && client._originalConfig.endpointDiscoveryEnabled === true) {\n    throw util.error(new Error(), {\n      code: 'ConfigurationException',\n      message: 'Custom endpoint is supplied; endpointDiscoveryEnabled must not be true.'\n    });\n  };\n  var svcConfig = AWS.config[client.serviceIdentifier] || {};\n  return Boolean(AWS.config.endpoint || svcConfig.endpoint || (client._originalConfig && client._originalConfig.endpoint));\n}\n\n/**\n * @api private\n */\nfunction isFalsy(value) {\n  return ['false', '0'].indexOf(value) >= 0;\n}\n\n/**\n * If endpoint discovery should perform for this request when no operation requires endpoint\n * discovery for the given service.\n * SDK performs config resolution in order like below:\n * 1. If set in client configuration.\n * 2. If set in env AWS_ENABLE_ENDPOINT_DISCOVERY.\n * 3. If set in shared ini config file with key 'endpoint_discovery_enabled'.\n * @param [object] request request object.\n * @returns [boolean|undefined] if endpoint discovery config is not set in any source, this\n *  function returns undefined\n * @api private\n */\nfunction resolveEndpointDiscoveryConfig(request) {\n  var service = request.service || {};\n  if (service.config.endpointDiscoveryEnabled !== undefined) {\n    return service.config.endpointDiscoveryEnabled;\n  }\n\n  //shared ini file is only available in Node\n  //not to check env in browser\n  if (util.isBrowser()) return undefined;\n\n  // If any of recognized endpoint discovery config env is set\n  for (var i = 0; i < endpointDiscoveryEnabledEnvs.length; i++) {\n    var env = endpointDiscoveryEnabledEnvs[i];\n    if (Object.prototype.hasOwnProperty.call(process.env, env)) {\n      if (process.env[env] === '' || process.env[env] === undefined) {\n        throw util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'environmental variable ' + env + ' cannot be set to nothing'\n        });\n      }\n      return !isFalsy(process.env[env]);\n    }\n  }\n\n  var configFile = {};\n  try {\n    configFile = AWS.util.iniLoader ? AWS.util.iniLoader.loadFrom({\n      isConfig: true,\n      filename: process.env[AWS.util.sharedConfigFileEnv]\n    }) : {};\n  } catch (e) {}\n  var sharedFileConfig = configFile[\n    process.env.AWS_PROFILE || AWS.util.defaultProfile\n  ] || {};\n  if (Object.prototype.hasOwnProperty.call(sharedFileConfig, 'endpoint_discovery_enabled')) {\n    if (sharedFileConfig.endpoint_discovery_enabled === undefined) {\n      throw util.error(new Error(), {\n        code: 'ConfigurationException',\n        message: 'config file entry \\'endpoint_discovery_enabled\\' cannot be set to nothing'\n      });\n    }\n    return !isFalsy(sharedFileConfig.endpoint_discovery_enabled);\n  }\n  return undefined;\n}\n\n/**\n * attach endpoint discovery logic to request object\n * @param [object] request\n * @api private\n */\nfunction discoverEndpoint(request, done) {\n  var service = request.service || {};\n  if (hasCustomEndpoint(service) || request.isPresigned()) return done();\n\n  var operations = service.api.operations || {};\n  var operationModel = operations[request.operation];\n  var isEndpointDiscoveryRequired = operationModel ? operationModel.endpointDiscoveryRequired : 'NULL';\n  var isEnabled = resolveEndpointDiscoveryConfig(request);\n  var hasRequiredEndpointDiscovery = service.api.hasRequiredEndpointDiscovery;\n  if (isEnabled || hasRequiredEndpointDiscovery) {\n    // Once a customer enables endpoint discovery, the SDK should start appending\n    // the string endpoint-discovery to the user-agent on all requests.\n    request.httpRequest.appendToUserAgent('endpoint-discovery');\n  }\n  switch (isEndpointDiscoveryRequired) {\n    case 'OPTIONAL':\n      if (isEnabled || hasRequiredEndpointDiscovery) {\n        // For a given service; if at least one operation requires endpoint discovery then the SDK must enable endpoint discovery\n        // by default for all operations of that service, including operations where endpoint discovery is optional.\n        optionalDiscoverEndpoint(request);\n        request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      }\n      done();\n      break;\n    case 'REQUIRED':\n      if (isEnabled === false) {\n        // For a given operation; if endpoint discovery is required and it has been disabled on the SDK client,\n        // then the SDK must return a clear and actionable exception.\n        request.response.error = util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'Endpoint Discovery is disabled but ' + service.api.className + '.' + request.operation +\n                    '() requires it. Please check your configurations.'\n        });\n        done();\n        break;\n      }\n      request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      requiredDiscoverEndpoint(request, done);\n      break;\n    case 'NULL':\n    default:\n      done();\n      break;\n  }\n}\n\nmodule.exports = {\n  discoverEndpoint: discoverEndpoint,\n  requiredDiscoverEndpoint: requiredDiscoverEndpoint,\n  optionalDiscoverEndpoint: optionalDiscoverEndpoint,\n  marshallCustomIdentifiers: marshallCustomIdentifiers,\n  getCacheKey: getCacheKey,\n  invalidateCachedEndpoint: invalidateCachedEndpoints,\n};\n","var AWS = require('../core');\n\nAWS.util.update(AWS.Route53.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.on('build', this.sanitizeUrl);\n  },\n\n  /**\n   * @api private\n   */\n  sanitizeUrl: function sanitizeUrl(request) {\n    var path = request.httpRequest.path;\n    request.httpRequest.path = path.replace(/\\/%2F\\w+%2F/, '/');\n  },\n\n  /**\n   * @return [Boolean] whether the error can be retried\n   * @api private\n   */\n  retryableError: function retryableError(error) {\n    if (error.code === 'PriorRequestNotComplete' &&\n        error.statusCode === 400) {\n      return true;\n    } else {\n      var _super = AWS.Service.prototype.retryableError;\n      return _super.call(this, error);\n    }\n  }\n});\n","var util = require('../core').util;\nvar convert = require('./converter');\n\nvar Translator = function(options) {\n  options = options || {};\n  this.attrValue = options.attrValue;\n  this.convertEmptyValues = Boolean(options.convertEmptyValues);\n  this.wrapNumbers = Boolean(options.wrapNumbers);\n};\n\nTranslator.prototype.translateInput = function(value, shape) {\n  this.mode = 'input';\n  return this.translate(value, shape);\n};\n\nTranslator.prototype.translateOutput = function(value, shape) {\n  this.mode = 'output';\n  return this.translate(value, shape);\n};\n\nTranslator.prototype.translate = function(value, shape) {\n  var self = this;\n  if (!shape || value === undefined) return undefined;\n\n  if (shape.shape === self.attrValue) {\n    return convert[self.mode](value, {\n      convertEmptyValues: self.convertEmptyValues,\n      wrapNumbers: self.wrapNumbers,\n    });\n  }\n  switch (shape.type) {\n    case 'structure': return self.translateStructure(value, shape);\n    case 'map': return self.translateMap(value, shape);\n    case 'list': return self.translateList(value, shape);\n    default: return self.translateScalar(value, shape);\n  }\n};\n\nTranslator.prototype.translateStructure = function(structure, shape) {\n  var self = this;\n  if (structure == null) return undefined;\n\n  var struct = {};\n  util.each(structure, function(name, value) {\n    var memberShape = shape.members[name];\n    if (memberShape) {\n      var result = self.translate(value, memberShape);\n      if (result !== undefined) struct[name] = result;\n    }\n  });\n  return struct;\n};\n\nTranslator.prototype.translateList = function(list, shape) {\n  var self = this;\n  if (list == null) return undefined;\n\n  var out = [];\n  util.arrayEach(list, function(value) {\n    var result = self.translate(value, shape.member);\n    if (result === undefined) out.push(null);\n    else out.push(result);\n  });\n  return out;\n};\n\nTranslator.prototype.translateMap = function(map, shape) {\n  var self = this;\n  if (map == null) return undefined;\n\n  var out = {};\n  util.each(map, function(key, value) {\n    var result = self.translate(value, shape.value);\n    if (result === undefined) out[key] = null;\n    else out[key] = result;\n  });\n  return out;\n};\n\nTranslator.prototype.translateScalar = function(value, shape) {\n  return shape.toType(value);\n};\n\n/**\n * @api private\n */\nmodule.exports = Translator;\n","var AWS = require('../core');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents credentials retrieved from STS Web Identity Federation support.\n *\n * By default this provider gets credentials using the\n * {AWS.STS.assumeRoleWithWebIdentity} service operation. This operation\n * requires a `RoleArn` containing the ARN of the IAM trust policy for the\n * application for which credentials will be given. In addition, the\n * `WebIdentityToken` must be set to the token provided by the identity\n * provider. See {constructor} for an example on creating a credentials\n * object with proper `RoleArn` and `WebIdentityToken` values.\n *\n * ## Refreshing Credentials from Identity Service\n *\n * In addition to AWS credentials expiring after a given amount of time, the\n * login token from the identity provider will also expire. Once this token\n * expires, it will not be usable to refresh AWS credentials, and another\n * token will be needed. The SDK does not manage refreshing of the token value,\n * but this can be done through a \"refresh token\" supported by most identity\n * providers. Consult the documentation for the identity provider for refreshing\n * tokens. Once the refreshed token is acquired, you should make sure to update\n * this new token in the credentials object's {params} property. The following\n * code will update the WebIdentityToken, assuming you have retrieved an updated\n * token from the identity provider:\n *\n * ```javascript\n * AWS.config.credentials.params.WebIdentityToken = updatedToken;\n * ```\n *\n * Future calls to `credentials.refresh()` will now use the new token.\n *\n * @!attribute params\n *   @return [map] the map of params passed to\n *     {AWS.STS.assumeRoleWithWebIdentity}. To update the token, set the\n *     `params.WebIdentityToken` property.\n * @!attribute data\n *   @return [map] the raw data response from the call to\n *     {AWS.STS.assumeRoleWithWebIdentity}. Use this if you want to get\n *     access to other properties from the response.\n */\nAWS.WebIdentityCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new credentials object.\n   * @param (see AWS.STS.assumeRoleWithWebIdentity)\n   * @example Creating a new credentials object\n   *   AWS.config.credentials = new AWS.WebIdentityCredentials({\n   *     RoleArn: 'arn:aws:iam::1234567890:role/WebIdentity',\n   *     WebIdentityToken: 'ABCDEFGHIJKLMNOP', // token from identity service\n   *     RoleSessionName: 'web' // optional name, defaults to web-identity\n   *   }, {\n   *     // optionally provide configuration to apply to the underlying AWS.STS service client\n   *     // if configuration is not provided, then configuration will be pulled from AWS.config\n   *\n   *     // specify timeout options\n   *     httpOptions: {\n   *       timeout: 100\n   *     }\n   *   });\n   * @see AWS.STS.assumeRoleWithWebIdentity\n   * @see AWS.Config\n   */\n  constructor: function WebIdentityCredentials(params, clientConfig) {\n    AWS.Credentials.call(this);\n    this.expired = true;\n    this.params = params;\n    this.params.RoleSessionName = this.params.RoleSessionName || 'web-identity';\n    this.data = null;\n    this._clientConfig = AWS.util.copy(clientConfig || {});\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRoleWithWebIdentity}\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    self.createClients();\n    self.service.assumeRoleWithWebIdentity(function (err, data) {\n      self.data = null;\n      if (!err) {\n        self.data = data;\n        self.service.credentialsFrom(data, self);\n      }\n      callback(err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function() {\n    if (!this.service) {\n      var stsConfig = AWS.util.merge({}, this._clientConfig);\n      stsConfig.params = this.params;\n      this.service = new STS(stsConfig);\n    }\n  }\n\n});\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['devicefarm'] = {};\nAWS.DeviceFarm = Service.defineService('devicefarm', ['2015-06-23']);\nObject.defineProperty(apiLoader.services['devicefarm'], '2015-06-23', {\n  get: function get() {\n    var model = require('../apis/devicefarm-2015-06-23.min.json');\n    model.paginators = require('../apis/devicefarm-2015-06-23.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DeviceFarm;\n","var AWS = require('../core');\n\n// pull in CloudFront signer\nrequire('../cloudfront/signer');\n\nAWS.util.update(AWS.CloudFront.prototype, {\n\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.addListener('extractData', AWS.util.hoistPayloadMember);\n  }\n\n});\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['waf'] = {};\nAWS.WAF = Service.defineService('waf', ['2015-08-24']);\nObject.defineProperty(apiLoader.services['waf'], '2015-08-24', {\n  get: function get() {\n    var model = require('../apis/waf-2015-08-24.min.json');\n    model.paginators = require('../apis/waf-2015-08-24.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.WAF;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['connect'] = {};\nAWS.Connect = Service.defineService('connect', ['2017-08-08']);\nObject.defineProperty(apiLoader.services['connect'], '2017-08-08', {\n  get: function get() {\n    var model = require('../apis/connect-2017-08-08.min.json');\n    model.paginators = require('../apis/connect-2017-08-08.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Connect;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['efs'] = {};\nAWS.EFS = Service.defineService('efs', ['2015-02-01']);\nObject.defineProperty(apiLoader.services['efs'], '2015-02-01', {\n  get: function get() {\n    var model = require('../apis/elasticfilesystem-2015-02-01.min.json');\n    model.paginators = require('../apis/elasticfilesystem-2015-02-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.EFS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudfront'] = {};\nAWS.CloudFront = Service.defineService('cloudfront', ['2013-05-12*', '2013-11-11*', '2014-05-31*', '2014-10-21*', '2014-11-06*', '2015-04-17*', '2015-07-27*', '2015-09-17*', '2016-01-13*', '2016-01-28*', '2016-08-01*', '2016-08-20*', '2016-09-07*', '2016-09-29*', '2016-11-25', '2016-11-25*', '2017-03-25', '2017-03-25*', '2017-10-30', '2017-10-30*', '2018-06-18', '2018-06-18*', '2018-11-05', '2018-11-05*', '2019-03-26', '2019-03-26*', '2020-05-31']);\nrequire('../lib/services/cloudfront');\nObject.defineProperty(apiLoader.services['cloudfront'], '2016-11-25', {\n  get: function get() {\n    var model = require('../apis/cloudfront-2016-11-25.min.json');\n    model.paginators = require('../apis/cloudfront-2016-11-25.paginators.json').pagination;\n    model.waiters = require('../apis/cloudfront-2016-11-25.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['cloudfront'], '2017-03-25', {\n  get: function get() {\n    var model = require('../apis/cloudfront-2017-03-25.min.json');\n    model.paginators = require('../apis/cloudfront-2017-03-25.paginators.json').pagination;\n    model.waiters = require('../apis/cloudfront-2017-03-25.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['cloudfront'], '2017-10-30', {\n  get: function get() {\n    var model = require('../apis/cloudfront-2017-10-30.min.json');\n    model.paginators = require('../apis/cloudfront-2017-10-30.paginators.json').pagination;\n    model.waiters = require('../apis/cloudfront-2017-10-30.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['cloudfront'], '2018-06-18', {\n  get: function get() {\n    var model = require('../apis/cloudfront-2018-06-18.min.json');\n    model.paginators = require('../apis/cloudfront-2018-06-18.paginators.json').pagination;\n    model.waiters = require('../apis/cloudfront-2018-06-18.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['cloudfront'], '2018-11-05', {\n  get: function get() {\n    var model = require('../apis/cloudfront-2018-11-05.min.json');\n    model.paginators = require('../apis/cloudfront-2018-11-05.paginators.json').pagination;\n    model.waiters = require('../apis/cloudfront-2018-11-05.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['cloudfront'], '2019-03-26', {\n  get: function get() {\n    var model = require('../apis/cloudfront-2019-03-26.min.json');\n    model.paginators = require('../apis/cloudfront-2019-03-26.paginators.json').pagination;\n    model.waiters = require('../apis/cloudfront-2019-03-26.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['cloudfront'], '2020-05-31', {\n  get: function get() {\n    var model = require('../apis/cloudfront-2020-05-31.min.json');\n    model.paginators = require('../apis/cloudfront-2020-05-31.paginators.json').pagination;\n    model.waiters = require('../apis/cloudfront-2020-05-31.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudFront;\n","function apiLoader(svc, version) {\n  if (!apiLoader.services.hasOwnProperty(svc)) {\n    throw new Error('InvalidService: Failed to load api for ' + svc);\n  }\n  return apiLoader.services[svc][version];\n}\n\n/**\n * @api private\n *\n * This member of AWS.apiLoader is private, but changing it will necessitate a\n * change to ../scripts/services-table-generator.ts\n */\napiLoader.services = {};\n\n/**\n * @api private\n */\nmodule.exports = apiLoader;\n","var AWS = require('../core');\nvar rest = AWS.Protocol.Rest;\n\n/**\n * A presigner object can be used to generate presigned urls for the Polly service.\n */\nAWS.Polly.Presigner = AWS.util.inherit({\n    /**\n     * Creates a presigner object with a set of configuration options.\n     *\n     * @option options params [map] An optional map of parameters to bind to every\n     *   request sent by this service object.\n     * @option options service [AWS.Polly] An optional pre-configured instance\n     *  of the AWS.Polly service object to use for requests. The object may\n     *  bound parameters used by the presigner.\n     * @see AWS.Polly.constructor\n     */\n    constructor: function Signer(options) {\n        options = options || {};\n        this.options = options;\n        this.service = options.service;\n        this.bindServiceObject(options);\n        this._operations = {};\n    },\n\n    /**\n     * @api private\n     */\n    bindServiceObject: function bindServiceObject(options) {\n        options = options || {};\n        if (!this.service) {\n            this.service = new AWS.Polly(options);\n        } else {\n            var config = AWS.util.copy(this.service.config);\n            this.service = new this.service.constructor.__super__(config);\n            this.service.config.params = AWS.util.merge(this.service.config.params || {}, options.params);\n        }\n    },\n\n    /**\n     * @api private\n     */\n    modifyInputMembers: function modifyInputMembers(input) {\n        // make copies of the input so we don't overwrite the api\n        // need to be careful to copy anything we access/modify\n        var modifiedInput = AWS.util.copy(input);\n        modifiedInput.members = AWS.util.copy(input.members);\n        AWS.util.each(input.members, function(name, member) {\n            modifiedInput.members[name] = AWS.util.copy(member);\n            // update location and locationName\n            if (!member.location || member.location === 'body') {\n                modifiedInput.members[name].location = 'querystring';\n                modifiedInput.members[name].locationName = name;\n            }\n        });\n        return modifiedInput;\n    },\n\n    /**\n     * @api private\n     */\n    convertPostToGet: function convertPostToGet(req) {\n        // convert method\n        req.httpRequest.method = 'GET';\n\n        var operation = req.service.api.operations[req.operation];\n        // get cached operation input first\n        var input = this._operations[req.operation];\n        if (!input) {\n            // modify the original input\n            this._operations[req.operation] = input = this.modifyInputMembers(operation.input);\n        }\n\n        var uri = rest.generateURI(req.httpRequest.endpoint.path, operation.httpPath, input, req.params);\n\n        req.httpRequest.path = uri;\n        req.httpRequest.body = '';\n\n        // don't need these headers on a GET request\n        delete req.httpRequest.headers['Content-Length'];\n        delete req.httpRequest.headers['Content-Type'];\n    },\n\n    /**\n     * @overload getSynthesizeSpeechUrl(params = {}, [expires = 3600], [callback])\n     *   Generate a presigned url for {AWS.Polly.synthesizeSpeech}.\n     *   @note You must ensure that you have static or previously resolved\n     *     credentials if you call this method synchronously (with no callback),\n     *     otherwise it may not properly sign the request. If you cannot guarantee\n     *     this (you are using an asynchronous credential provider, i.e., EC2\n     *     IAM roles), you should always call this method with an asynchronous\n     *     callback.\n     *   @param params [map] parameters to pass to the operation. See the {AWS.Polly.synthesizeSpeech}\n     *     operation for the expected operation parameters.\n     *   @param expires [Integer] (3600) the number of seconds to expire the pre-signed URL operation in.\n     *     Defaults to 1 hour.\n     *   @return [string] if called synchronously (with no callback), returns the signed URL.\n     *   @return [null] nothing is returned if a callback is provided.\n     *   @callback callback function (err, url)\n     *     If a callback is supplied, it is called when a signed URL has been generated.\n     *     @param err [Error] the error object returned from the presigner.\n     *     @param url [String] the signed URL.\n     *   @see AWS.Polly.synthesizeSpeech\n     */\n    getSynthesizeSpeechUrl: function getSynthesizeSpeechUrl(params, expires, callback) {\n        var self = this;\n        var request = this.service.makeRequest('synthesizeSpeech', params);\n        // remove existing build listeners\n        request.removeAllListeners('build');\n        request.on('build', function(req) {\n            self.convertPostToGet(req);\n        });\n        return request.presign(expires, callback);\n    }\n});\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['lexmodelbuildingservice'] = {};\nAWS.LexModelBuildingService = Service.defineService('lexmodelbuildingservice', ['2017-04-19']);\nObject.defineProperty(apiLoader.services['lexmodelbuildingservice'], '2017-04-19', {\n  get: function get() {\n    var model = require('../apis/lex-models-2017-04-19.min.json');\n    model.paginators = require('../apis/lex-models-2017-04-19.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.LexModelBuildingService;\n","var AWS = require('./core');\n/**\n * @api private\n */\nfunction validateRegionalEndpointsFlagValue(configValue, errorOptions) {\n  if (typeof configValue !== 'string') return undefined;\n  else if (['legacy', 'regional'].indexOf(configValue.toLowerCase()) >= 0) {\n    return configValue.toLowerCase();\n  } else {\n    throw AWS.util.error(new Error(), errorOptions);\n  }\n}\n\n/**\n * Resolve the configuration value for regional endpoint from difference sources: client\n * config, environmental variable, shared config file. Value can be case-insensitive\n * 'legacy' or 'reginal'.\n * @param originalConfig user-supplied config object to resolve\n * @param options a map of config property names from individual configuration source\n *  - env: name of environmental variable that refers to the config\n *  - sharedConfig: name of shared configuration file property that refers to the config\n *  - clientConfig: name of client configuration property that refers to the config\n *\n * @api private\n */\nfunction resolveRegionalEndpointsFlag(originalConfig, options) {\n  originalConfig = originalConfig || {};\n  //validate config value\n  var resolved;\n  if (originalConfig[options.clientConfig]) {\n    resolved = validateRegionalEndpointsFlagValue(originalConfig[options.clientConfig], {\n      code: 'InvalidConfiguration',\n      message: 'invalid \"' + options.clientConfig + '\" configuration. Expect \"legacy\" ' +\n      ' or \"regional\". Got \"' + originalConfig[options.clientConfig] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  if (!AWS.util.isNode()) return resolved;\n  //validate environmental variable\n  if (Object.prototype.hasOwnProperty.call(process.env, options.env)) {\n    var envFlag = process.env[options.env];\n    resolved = validateRegionalEndpointsFlagValue(envFlag, {\n      code: 'InvalidEnvironmentalVariable',\n      message: 'invalid ' + options.env + ' environmental variable. Expect \"legacy\" ' +\n      ' or \"regional\". Got \"' + process.env[options.env] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  //validate shared config file\n  var profile = {};\n  try {\n    var profiles = AWS.util.getProfilesFromSharedConfig(AWS.util.iniLoader);\n    profile = profiles[process.env.AWS_PROFILE || AWS.util.defaultProfile];\n  } catch (e) {};\n  if (profile && Object.prototype.hasOwnProperty.call(profile, options.sharedConfig)) {\n    var fileFlag = profile[options.sharedConfig];\n    resolved = validateRegionalEndpointsFlagValue(fileFlag, {\n      code: 'InvalidConfiguration',\n      message: 'invalid ' + options.sharedConfig + ' profile config. Expect \"legacy\" ' +\n      ' or \"regional\". Got \"' + profile[options.sharedConfig] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  return resolved;\n}\n\nmodule.exports = resolveRegionalEndpointsFlag;\n","var escapeAttribute = require('./escape-attribute').escapeAttribute;\n\n/**\n * Represents an XML node.\n * @api private\n */\nfunction XmlNode(name, children) {\n    if (children === void 0) { children = []; }\n    this.name = name;\n    this.children = children;\n    this.attributes = {};\n}\nXmlNode.prototype.addAttribute = function (name, value) {\n    this.attributes[name] = value;\n    return this;\n};\nXmlNode.prototype.addChildNode = function (child) {\n    this.children.push(child);\n    return this;\n};\nXmlNode.prototype.removeAttribute = function (name) {\n    delete this.attributes[name];\n    return this;\n};\nXmlNode.prototype.toString = function () {\n    var hasChildren = Boolean(this.children.length);\n    var xmlText = '<' + this.name;\n    // add attributes\n    var attributes = this.attributes;\n    for (var i = 0, attributeNames = Object.keys(attributes); i < attributeNames.length; i++) {\n        var attributeName = attributeNames[i];\n        var attribute = attributes[attributeName];\n        if (typeof attribute !== 'undefined' && attribute !== null) {\n            xmlText += ' ' + attributeName + '=\\\"' + escapeAttribute('' + attribute) + '\\\"';\n        }\n    }\n    return xmlText += !hasChildren ? '/>' : '>' + this.children.map(function (c) { return c.toString(); }).join('') + '</' + this.name + '>';\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n    XmlNode: XmlNode\n};\n","var AWS = require('./core');\nvar inherit = AWS.util.inherit;\nvar jmespath = require('jmespath');\n\n/**\n * This class encapsulates the response information\n * from a service request operation sent through {AWS.Request}.\n * The response object has two main properties for getting information\n * back from a request:\n *\n * ## The `data` property\n *\n * The `response.data` property contains the serialized object data\n * retrieved from the service request. For instance, for an\n * Amazon DynamoDB `listTables` method call, the response data might\n * look like:\n *\n * ```\n * > resp.data\n * { TableNames:\n *    [ 'table1', 'table2', ... ] }\n * ```\n *\n * The `data` property can be null if an error occurs (see below).\n *\n * ## The `error` property\n *\n * In the event of a service error (or transfer error), the\n * `response.error` property will be filled with the given\n * error data in the form:\n *\n * ```\n * { code: 'SHORT_UNIQUE_ERROR_CODE',\n *   message: 'Some human readable error message' }\n * ```\n *\n * In the case of an error, the `data` property will be `null`.\n * Note that if you handle events that can be in a failure state,\n * you should always check whether `response.error` is set\n * before attempting to access the `response.data` property.\n *\n * @!attribute data\n *   @readonly\n *   @!group Data Properties\n *   @note Inside of a {AWS.Request~httpData} event, this\n *     property contains a single raw packet instead of the\n *     full de-serialized service response.\n *   @return [Object] the de-serialized response data\n *     from the service.\n *\n * @!attribute error\n *   An structure containing information about a service\n *   or networking error.\n *   @readonly\n *   @!group Data Properties\n *   @note This attribute is only filled if a service or\n *     networking error occurs.\n *   @return [Error]\n *     * code [String] a unique short code representing the\n *       error that was emitted.\n *     * message [String] a longer human readable error message\n *     * retryable [Boolean] whether the error message is\n *       retryable.\n *     * statusCode [Numeric] in the case of a request that reached the service,\n *       this value contains the response status code.\n *     * time [Date] the date time object when the error occurred.\n *     * hostname [String] set when a networking error occurs to easily\n *       identify the endpoint of the request.\n *     * region [String] set when a networking error occurs to easily\n *       identify the region of the request.\n *\n * @!attribute requestId\n *   @readonly\n *   @!group Data Properties\n *   @return [String] the unique request ID associated with the response.\n *     Log this value when debugging requests for AWS support.\n *\n * @!attribute retryCount\n *   @readonly\n *   @!group Operation Properties\n *   @return [Integer] the number of retries that were\n *     attempted before the request was completed.\n *\n * @!attribute redirectCount\n *   @readonly\n *   @!group Operation Properties\n *   @return [Integer] the number of redirects that were\n *     followed before the request was completed.\n *\n * @!attribute httpResponse\n *   @readonly\n *   @!group HTTP Properties\n *   @return [AWS.HttpResponse] the raw HTTP response object\n *     containing the response headers and body information\n *     from the server.\n *\n * @see AWS.Request\n */\nAWS.Response = inherit({\n\n  /**\n   * @api private\n   */\n  constructor: function Response(request) {\n    this.request = request;\n    this.data = null;\n    this.error = null;\n    this.retryCount = 0;\n    this.redirectCount = 0;\n    this.httpResponse = new AWS.HttpResponse();\n    if (request) {\n      this.maxRetries = request.service.numRetries();\n      this.maxRedirects = request.service.config.maxRedirects;\n    }\n  },\n\n  /**\n   * Creates a new request for the next page of response data, calling the\n   * callback with the page data if a callback is provided.\n   *\n   * @callback callback function(err, data)\n   *   Called when a page of data is returned from the next request.\n   *\n   *   @param err [Error] an error object, if an error occurred in the request\n   *   @param data [Object] the next page of data, or null, if there are no\n   *     more pages left.\n   * @return [AWS.Request] the request object for the next page of data\n   * @return [null] if no callback is provided and there are no pages left\n   *   to retrieve.\n   * @since v1.4.0\n   */\n  nextPage: function nextPage(callback) {\n    var config;\n    var service = this.request.service;\n    var operation = this.request.operation;\n    try {\n      config = service.paginationConfig(operation, true);\n    } catch (e) { this.error = e; }\n\n    if (!this.hasNextPage()) {\n      if (callback) callback(this.error, null);\n      else if (this.error) throw this.error;\n      return null;\n    }\n\n    var params = AWS.util.copy(this.request.params);\n    if (!this.nextPageTokens) {\n      return callback ? callback(null, null) : null;\n    } else {\n      var inputTokens = config.inputToken;\n      if (typeof inputTokens === 'string') inputTokens = [inputTokens];\n      for (var i = 0; i < inputTokens.length; i++) {\n        params[inputTokens[i]] = this.nextPageTokens[i];\n      }\n      return service.makeRequest(this.request.operation, params, callback);\n    }\n  },\n\n  /**\n   * @return [Boolean] whether more pages of data can be returned by further\n   *   requests\n   * @since v1.4.0\n   */\n  hasNextPage: function hasNextPage() {\n    this.cacheNextPageTokens();\n    if (this.nextPageTokens) return true;\n    if (this.nextPageTokens === undefined) return undefined;\n    else return false;\n  },\n\n  /**\n   * @api private\n   */\n  cacheNextPageTokens: function cacheNextPageTokens() {\n    if (Object.prototype.hasOwnProperty.call(this, 'nextPageTokens')) return this.nextPageTokens;\n    this.nextPageTokens = undefined;\n\n    var config = this.request.service.paginationConfig(this.request.operation);\n    if (!config) return this.nextPageTokens;\n\n    this.nextPageTokens = null;\n    if (config.moreResults) {\n      if (!jmespath.search(this.data, config.moreResults)) {\n        return this.nextPageTokens;\n      }\n    }\n\n    var exprs = config.outputToken;\n    if (typeof exprs === 'string') exprs = [exprs];\n    AWS.util.arrayEach.call(this, exprs, function (expr) {\n      var output = jmespath.search(this.data, expr);\n      if (output) {\n        this.nextPageTokens = this.nextPageTokens || [];\n        this.nextPageTokens.push(output);\n      }\n    });\n\n    return this.nextPageTokens;\n  }\n\n});\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['kinesisvideosignalingchannels'] = {};\nAWS.KinesisVideoSignalingChannels = Service.defineService('kinesisvideosignalingchannels', ['2019-12-04']);\nObject.defineProperty(apiLoader.services['kinesisvideosignalingchannels'], '2019-12-04', {\n  get: function get() {\n    var model = require('../apis/kinesis-video-signaling-2019-12-04.min.json');\n    model.paginators = require('../apis/kinesis-video-signaling-2019-12-04.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.KinesisVideoSignalingChannels;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['route53domains'] = {};\nAWS.Route53Domains = Service.defineService('route53domains', ['2014-05-15']);\nObject.defineProperty(apiLoader.services['route53domains'], '2014-05-15', {\n  get: function get() {\n    var model = require('../apis/route53domains-2014-05-15.min.json');\n    model.paginators = require('../apis/route53domains-2014-05-15.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Route53Domains;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['mobileanalytics'] = {};\nAWS.MobileAnalytics = Service.defineService('mobileanalytics', ['2014-06-05']);\nObject.defineProperty(apiLoader.services['mobileanalytics'], '2014-06-05', {\n  get: function get() {\n    var model = require('../apis/mobileanalytics-2014-06-05.min.json');\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MobileAnalytics;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['iotdata'] = {};\nAWS.IotData = Service.defineService('iotdata', ['2015-05-28']);\nrequire('../lib/services/iotdata');\nObject.defineProperty(apiLoader.services['iotdata'], '2015-05-28', {\n  get: function get() {\n    var model = require('../apis/iot-data-2015-05-28.min.json');\n    model.paginators = require('../apis/iot-data-2015-05-28.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.IotData;\n","var AWS = require('./core');\nrequire('./credentials');\nrequire('./credentials/credential_provider_chain');\nvar PromisesDependency;\n\n/**\n * The main configuration class used by all service objects to set\n * the region, credentials, and other options for requests.\n *\n * By default, credentials and region settings are left unconfigured.\n * This should be configured by the application before using any\n * AWS service APIs.\n *\n * In order to set global configuration options, properties should\n * be assigned to the global {AWS.config} object.\n *\n * @see AWS.config\n *\n * @!group General Configuration Options\n *\n * @!attribute credentials\n *   @return [AWS.Credentials] the AWS credentials to sign requests with.\n *\n * @!attribute region\n *   @example Set the global region setting to us-west-2\n *     AWS.config.update({region: 'us-west-2'});\n *   @return [AWS.Credentials] The region to send service requests to.\n *   @see http://docs.amazonwebservices.com/general/latest/gr/rande.html\n *     A list of available endpoints for each AWS service\n *\n * @!attribute maxRetries\n *   @return [Integer] the maximum amount of retries to perform for a\n *     service request. By default this value is calculated by the specific\n *     service object that the request is being made to.\n *\n * @!attribute maxRedirects\n *   @return [Integer] the maximum amount of redirects to follow for a\n *     service request. Defaults to 10.\n *\n * @!attribute paramValidation\n *   @return [Boolean|map] whether input parameters should be validated against\n *     the operation description before sending the request. Defaults to true.\n *     Pass a map to enable any of the following specific validation features:\n *\n *     * **min** [Boolean] &mdash; Validates that a value meets the min\n *       constraint. This is enabled by default when paramValidation is set\n *       to `true`.\n *     * **max** [Boolean] &mdash; Validates that a value meets the max\n *       constraint.\n *     * **pattern** [Boolean] &mdash; Validates that a string value matches a\n *       regular expression.\n *     * **enum** [Boolean] &mdash; Validates that a string value matches one\n *       of the allowable enum values.\n *\n * @!attribute computeChecksums\n *   @return [Boolean] whether to compute checksums for payload bodies when\n *     the service accepts it (currently supported in S3 only).\n *\n * @!attribute convertResponseTypes\n *   @return [Boolean] whether types are converted when parsing response data.\n *     Currently only supported for JSON based services. Turning this off may\n *     improve performance on large response payloads. Defaults to `true`.\n *\n * @!attribute correctClockSkew\n *   @return [Boolean] whether to apply a clock skew correction and retry\n *     requests that fail because of an skewed client clock. Defaults to\n *     `false`.\n *\n * @!attribute sslEnabled\n *   @return [Boolean] whether SSL is enabled for requests\n *\n * @!attribute s3ForcePathStyle\n *   @return [Boolean] whether to force path style URLs for S3 objects\n *\n * @!attribute s3BucketEndpoint\n *   @note Setting this configuration option requires an `endpoint` to be\n *     provided explicitly to the service constructor.\n *   @return [Boolean] whether the provided endpoint addresses an individual\n *     bucket (false if it addresses the root API endpoint).\n *\n * @!attribute s3DisableBodySigning\n *   @return [Boolean] whether to disable S3 body signing when using signature version `v4`.\n *     Body signing can only be disabled when using https. Defaults to `true`.\n *\n * @!attribute s3UsEast1RegionalEndpoint\n *   @return ['legacy'|'regional'] when region is set to 'us-east-1', whether to send s3\n *     request to global endpoints or 'us-east-1' regional endpoints. This config is only\n *     applicable to S3 client;\n *     Defaults to 'legacy'\n * @!attribute s3UseArnRegion\n *   @return [Boolean] whether to override the request region with the region inferred\n *     from requested resource's ARN. Only available for S3 buckets\n *     Defaults to `true`\n *\n * @!attribute useAccelerateEndpoint\n *   @note This configuration option is only compatible with S3 while accessing\n *     dns-compatible buckets.\n *   @return [Boolean] Whether to use the Accelerate endpoint with the S3 service.\n *     Defaults to `false`.\n *\n * @!attribute retryDelayOptions\n *   @example Set the base retry delay for all services to 300 ms\n *     AWS.config.update({retryDelayOptions: {base: 300}});\n *     // Delays with maxRetries = 3: 300, 600, 1200\n *   @example Set a custom backoff function to provide delay values on retries\n *     AWS.config.update({retryDelayOptions: {customBackoff: function(retryCount, err) {\n *       // returns delay in ms\n *     }}});\n *   @return [map] A set of options to configure the retry delay on retryable errors.\n *     Currently supported options are:\n *\n *     * **base** [Integer] &mdash; The base number of milliseconds to use in the\n *       exponential backoff for operation retries. Defaults to 100 ms for all services except\n *       DynamoDB, where it defaults to 50ms.\n *\n *     * **customBackoff ** [function] &mdash; A custom function that accepts a\n *       retry count and error and returns the amount of time to delay in\n *       milliseconds. If the result is a non-zero negative value, no further\n *       retry attempts will be made. The `base` option will be ignored if this\n *       option is supplied. The function is only called for retryable errors.\n *\n * @!attribute httpOptions\n *   @return [map] A set of options to pass to the low-level HTTP request.\n *     Currently supported options are:\n *\n *     * **proxy** [String] &mdash; the URL to proxy requests through\n *     * **agent** [http.Agent, https.Agent] &mdash; the Agent object to perform\n *       HTTP requests with. Used for connection pooling. Note that for\n *       SSL connections, a special Agent object is used in order to enable\n *       peer certificate verification. This feature is only supported in the\n *       Node.js environment.\n *     * **connectTimeout** [Integer] &mdash; Sets the socket to timeout after\n *       failing to establish a connection with the server after\n *       `connectTimeout` milliseconds. This timeout has no effect once a socket\n *       connection has been established.\n *     * **timeout** [Integer] &mdash; Sets the socket to timeout after timeout\n *       milliseconds of inactivity on the socket. Defaults to two minutes\n *       (120000)\n *     * **xhrAsync** [Boolean] &mdash; Whether the SDK will send asynchronous\n *       HTTP requests. Used in the browser environment only. Set to false to\n *       send requests synchronously. Defaults to true (async on).\n *     * **xhrWithCredentials** [Boolean] &mdash; Sets the \"withCredentials\"\n *       property of an XMLHttpRequest object. Used in the browser environment\n *       only. Defaults to false.\n * @!attribute logger\n *   @return [#write,#log] an object that responds to .write() (like a stream)\n *     or .log() (like the console object) in order to log information about\n *     requests\n *\n * @!attribute systemClockOffset\n *   @return [Number] an offset value in milliseconds to apply to all signing\n *     times. Use this to compensate for clock skew when your system may be\n *     out of sync with the service time. Note that this configuration option\n *     can only be applied to the global `AWS.config` object and cannot be\n *     overridden in service-specific configuration. Defaults to 0 milliseconds.\n *\n * @!attribute signatureVersion\n *   @return [String] the signature version to sign requests with (overriding\n *     the API configuration). Possible values are: 'v2', 'v3', 'v4'.\n *\n * @!attribute signatureCache\n *   @return [Boolean] whether the signature to sign requests with (overriding\n *     the API configuration) is cached. Only applies to the signature version 'v4'.\n *     Defaults to `true`.\n *\n * @!attribute endpointDiscoveryEnabled\n *   @return [Boolean|undefined] whether to call operations with endpoints\n *     given by service dynamically. Setting this config to `true` will enable\n *     endpoint discovery for all applicable operations. Setting it to `false`\n *     will explicitly disable endpoint discovery even though operations that\n *     require endpoint discovery will presumably fail. Leaving it to\n *     `undefined` means SDK only do endpoint discovery when it's required.\n *     Defaults to `undefined`\n *\n * @!attribute endpointCacheSize\n *   @return [Number] the size of the global cache storing endpoints from endpoint\n *     discovery operations. Once endpoint cache is created, updating this setting\n *     cannot change existing cache size.\n *     Defaults to 1000\n *\n * @!attribute hostPrefixEnabled\n *   @return [Boolean] whether to marshal request parameters to the prefix of\n *     hostname. Defaults to `true`.\n *\n * @!attribute stsRegionalEndpoints\n *   @return ['legacy'|'regional'] whether to send sts request to global endpoints or\n *     regional endpoints.\n *     Defaults to 'legacy'\n */\nAWS.Config = AWS.util.inherit({\n  /**\n   * @!endgroup\n   */\n\n  /**\n   * Creates a new configuration object. This is the object that passes\n   * option data along to service requests, including credentials, security,\n   * region information, and some service specific settings.\n   *\n   * @example Creating a new configuration object with credentials and region\n   *   var config = new AWS.Config({\n   *     accessKeyId: 'AKID', secretAccessKey: 'SECRET', region: 'us-west-2'\n   *   });\n   * @option options accessKeyId [String] your AWS access key ID.\n   * @option options secretAccessKey [String] your AWS secret access key.\n   * @option options sessionToken [AWS.Credentials] the optional AWS\n   *   session token to sign requests with.\n   * @option options credentials [AWS.Credentials] the AWS credentials\n   *   to sign requests with. You can either specify this object, or\n   *   specify the accessKeyId and secretAccessKey options directly.\n   * @option options credentialProvider [AWS.CredentialProviderChain] the\n   *   provider chain used to resolve credentials if no static `credentials`\n   *   property is set.\n   * @option options region [String] the region to send service requests to.\n   *   See {region} for more information.\n   * @option options maxRetries [Integer] the maximum amount of retries to\n   *   attempt with a request. See {maxRetries} for more information.\n   * @option options maxRedirects [Integer] the maximum amount of redirects to\n   *   follow with a request. See {maxRedirects} for more information.\n   * @option options sslEnabled [Boolean] whether to enable SSL for\n   *   requests.\n   * @option options paramValidation [Boolean|map] whether input parameters\n   *   should be validated against the operation description before sending\n   *   the request. Defaults to true. Pass a map to enable any of the\n   *   following specific validation features:\n   *\n   *   * **min** [Boolean] &mdash; Validates that a value meets the min\n   *     constraint. This is enabled by default when paramValidation is set\n   *     to `true`.\n   *   * **max** [Boolean] &mdash; Validates that a value meets the max\n   *     constraint.\n   *   * **pattern** [Boolean] &mdash; Validates that a string value matches a\n   *     regular expression.\n   *   * **enum** [Boolean] &mdash; Validates that a string value matches one\n   *     of the allowable enum values.\n   * @option options computeChecksums [Boolean] whether to compute checksums\n   *   for payload bodies when the service accepts it (currently supported\n   *   in S3 only)\n   * @option options convertResponseTypes [Boolean] whether types are converted\n   *     when parsing response data. Currently only supported for JSON based\n   *     services. Turning this off may improve performance on large response\n   *     payloads. Defaults to `true`.\n   * @option options correctClockSkew [Boolean] whether to apply a clock skew\n   *     correction and retry requests that fail because of an skewed client\n   *     clock. Defaults to `false`.\n   * @option options s3ForcePathStyle [Boolean] whether to force path\n   *   style URLs for S3 objects.\n   * @option options s3BucketEndpoint [Boolean] whether the provided endpoint\n   *   addresses an individual bucket (false if it addresses the root API\n   *   endpoint). Note that setting this configuration option requires an\n   *   `endpoint` to be provided explicitly to the service constructor.\n   * @option options s3DisableBodySigning [Boolean] whether S3 body signing\n   *   should be disabled when using signature version `v4`. Body signing\n   *   can only be disabled when using https. Defaults to `true`.\n   * @option options s3UsEast1RegionalEndpoint ['legacy'|'regional'] when region\n   *   is set to 'us-east-1', whether to send s3 request to global endpoints or\n   *   'us-east-1' regional endpoints. This config is only applicable to S3 client.\n   *   Defaults to `legacy`\n   * @option options s3UseArnRegion [Boolean] whether to override the request region\n   *   with the region inferred from requested resource's ARN. Only available for S3 buckets\n   *   Defaults to `true`\n   *\n   * @option options retryDelayOptions [map] A set of options to configure\n   *   the retry delay on retryable errors. Currently supported options are:\n   *\n   *   * **base** [Integer] &mdash; The base number of milliseconds to use in the\n   *     exponential backoff for operation retries. Defaults to 100 ms for all\n   *     services except DynamoDB, where it defaults to 50ms.\n   *   * **customBackoff ** [function] &mdash; A custom function that accepts a\n   *     retry count and error and returns the amount of time to delay in\n   *     milliseconds. If the result is a non-zero negative value, no further\n   *     retry attempts will be made. The `base` option will be ignored if this\n   *     option is supplied. The function is only called for retryable errors.\n   * @option options httpOptions [map] A set of options to pass to the low-level\n   *   HTTP request. Currently supported options are:\n   *\n   *   * **proxy** [String] &mdash; the URL to proxy requests through\n   *   * **agent** [http.Agent, https.Agent] &mdash; the Agent object to perform\n   *     HTTP requests with. Used for connection pooling. Defaults to the global\n   *     agent (`http.globalAgent`) for non-SSL connections. Note that for\n   *     SSL connections, a special Agent object is used in order to enable\n   *     peer certificate verification. This feature is only available in the\n   *     Node.js environment.\n   *   * **connectTimeout** [Integer] &mdash; Sets the socket to timeout after\n   *     failing to establish a connection with the server after\n   *     `connectTimeout` milliseconds. This timeout has no effect once a socket\n   *     connection has been established.\n   *   * **timeout** [Integer] &mdash; Sets the socket to timeout after timeout\n   *     milliseconds of inactivity on the socket. Defaults to two minutes\n   *     (120000).\n   *   * **xhrAsync** [Boolean] &mdash; Whether the SDK will send asynchronous\n   *     HTTP requests. Used in the browser environment only. Set to false to\n   *     send requests synchronously. Defaults to true (async on).\n   *   * **xhrWithCredentials** [Boolean] &mdash; Sets the \"withCredentials\"\n   *     property of an XMLHttpRequest object. Used in the browser environment\n   *     only. Defaults to false.\n   * @option options apiVersion [String, Date] a String in YYYY-MM-DD format\n   *   (or a date) that represents the latest possible API version that can be\n   *   used in all services (unless overridden by `apiVersions`). Specify\n   *   'latest' to use the latest possible version.\n   * @option options apiVersions [map<String, String|Date>] a map of service\n   *   identifiers (the lowercase service class name) with the API version to\n   *   use when instantiating a service. Specify 'latest' for each individual\n   *   that can use the latest available version.\n   * @option options logger [#write,#log] an object that responds to .write()\n   *   (like a stream) or .log() (like the console object) in order to log\n   *   information about requests\n   * @option options systemClockOffset [Number] an offset value in milliseconds\n   *   to apply to all signing times. Use this to compensate for clock skew\n   *   when your system may be out of sync with the service time. Note that\n   *   this configuration option can only be applied to the global `AWS.config`\n   *   object and cannot be overridden in service-specific configuration.\n   *   Defaults to 0 milliseconds.\n   * @option options signatureVersion [String] the signature version to sign\n   *   requests with (overriding the API configuration). Possible values are:\n   *   'v2', 'v3', 'v4'.\n   * @option options signatureCache [Boolean] whether the signature to sign\n   *   requests with (overriding the API configuration) is cached. Only applies\n   *   to the signature version 'v4'. Defaults to `true`.\n   * @option options dynamoDbCrc32 [Boolean] whether to validate the CRC32\n   *   checksum of HTTP response bodies returned by DynamoDB. Default: `true`.\n   * @option options useAccelerateEndpoint [Boolean] Whether to use the\n   *   S3 Transfer Acceleration endpoint with the S3 service. Default: `false`.\n   * @option options clientSideMonitoring [Boolean] whether to collect and\n   *   publish this client's performance metrics of all its API requests.\n   * @option options endpointDiscoveryEnabled [Boolean|undefined] whether to\n   *   call operations with endpoints given by service dynamically. Setting this\n   * config to `true` will enable endpoint discovery for all applicable operations.\n   *   Setting it to `false` will explicitly disable endpoint discovery even though\n   *   operations that require endpoint discovery will presumably fail. Leaving it\n   *   to `undefined` means SDK will only do endpoint discovery when it's required.\n   *   Defaults to `undefined`\n   * @option options endpointCacheSize [Number] the size of the global cache storing\n   *   endpoints from endpoint discovery operations. Once endpoint cache is created,\n   *   updating this setting cannot change existing cache size.\n   *   Defaults to 1000\n   * @option options hostPrefixEnabled [Boolean] whether to marshal request\n   *   parameters to the prefix of hostname.\n   *   Defaults to `true`.\n   * @option options stsRegionalEndpoints ['legacy'|'regional'] whether to send sts request\n   *   to global endpoints or regional endpoints.\n   *   Defaults to 'legacy'.\n   */\n  constructor: function Config(options) {\n    if (options === undefined) options = {};\n    options = this.extractCredentials(options);\n\n    AWS.util.each.call(this, this.keys, function (key, value) {\n      this.set(key, options[key], value);\n    });\n  },\n\n  /**\n   * @!group Managing Credentials\n   */\n\n  /**\n   * Loads credentials from the configuration object. This is used internally\n   * by the SDK to ensure that refreshable {Credentials} objects are properly\n   * refreshed and loaded when sending a request. If you want to ensure that\n   * your credentials are loaded prior to a request, you can use this method\n   * directly to provide accurate credential data stored in the object.\n   *\n   * @note If you configure the SDK with static or environment credentials,\n   *   the credential data should already be present in {credentials} attribute.\n   *   This method is primarily necessary to load credentials from asynchronous\n   *   sources, or sources that can refresh credentials periodically.\n   * @example Getting your access key\n   *   AWS.config.getCredentials(function(err) {\n   *     if (err) console.log(err.stack); // credentials not loaded\n   *     else console.log(\"Access Key:\", AWS.config.credentials.accessKeyId);\n   *   })\n   * @callback callback function(err)\n   *   Called when the {credentials} have been properly set on the configuration\n   *   object.\n   *\n   *   @param err [Error] if this is set, credentials were not successfully\n   *     loaded and this error provides information why.\n   * @see credentials\n   * @see Credentials\n   */\n  getCredentials: function getCredentials(callback) {\n    var self = this;\n\n    function finish(err) {\n      callback(err, err ? null : self.credentials);\n    }\n\n    function credError(msg, err) {\n      return new AWS.util.error(err || new Error(), {\n        code: 'CredentialsError',\n        message: msg,\n        name: 'CredentialsError'\n      });\n    }\n\n    function getAsyncCredentials() {\n      self.credentials.get(function(err) {\n        if (err) {\n          var msg = 'Could not load credentials from ' +\n            self.credentials.constructor.name;\n          err = credError(msg, err);\n        }\n        finish(err);\n      });\n    }\n\n    function getStaticCredentials() {\n      var err = null;\n      if (!self.credentials.accessKeyId || !self.credentials.secretAccessKey) {\n        err = credError('Missing credentials');\n      }\n      finish(err);\n    }\n\n    if (self.credentials) {\n      if (typeof self.credentials.get === 'function') {\n        getAsyncCredentials();\n      } else { // static credentials\n        getStaticCredentials();\n      }\n    } else if (self.credentialProvider) {\n      self.credentialProvider.resolve(function(err, creds) {\n        if (err) {\n          err = credError('Could not load credentials from any providers', err);\n        }\n        self.credentials = creds;\n        finish(err);\n      });\n    } else {\n      finish(credError('No credentials to load'));\n    }\n  },\n\n  /**\n   * @!group Loading and Setting Configuration Options\n   */\n\n  /**\n   * @overload update(options, allowUnknownKeys = false)\n   *   Updates the current configuration object with new options.\n   *\n   *   @example Update maxRetries property of a configuration object\n   *     config.update({maxRetries: 10});\n   *   @param [Object] options a map of option keys and values.\n   *   @param [Boolean] allowUnknownKeys whether unknown keys can be set on\n   *     the configuration object. Defaults to `false`.\n   *   @see constructor\n   */\n  update: function update(options, allowUnknownKeys) {\n    allowUnknownKeys = allowUnknownKeys || false;\n    options = this.extractCredentials(options);\n    AWS.util.each.call(this, options, function (key, value) {\n      if (allowUnknownKeys || Object.prototype.hasOwnProperty.call(this.keys, key) ||\n          AWS.Service.hasService(key)) {\n        this.set(key, value);\n      }\n    });\n  },\n\n  /**\n   * Loads configuration data from a JSON file into this config object.\n   * @note Loading configuration will reset all existing configuration\n   *   on the object.\n   * @!macro nobrowser\n   * @param path [String] the path relative to your process's current\n   *    working directory to load configuration from.\n   * @return [AWS.Config] the same configuration object\n   */\n  loadFromPath: function loadFromPath(path) {\n    this.clear();\n\n    var options = JSON.parse(AWS.util.readFileSync(path));\n    var fileSystemCreds = new AWS.FileSystemCredentials(path);\n    var chain = new AWS.CredentialProviderChain();\n    chain.providers.unshift(fileSystemCreds);\n    chain.resolve(function (err, creds) {\n      if (err) throw err;\n      else options.credentials = creds;\n    });\n\n    this.constructor(options);\n\n    return this;\n  },\n\n  /**\n   * Clears configuration data on this object\n   *\n   * @api private\n   */\n  clear: function clear() {\n    /*jshint forin:false */\n    AWS.util.each.call(this, this.keys, function (key) {\n      delete this[key];\n    });\n\n    // reset credential provider\n    this.set('credentials', undefined);\n    this.set('credentialProvider', undefined);\n  },\n\n  /**\n   * Sets a property on the configuration object, allowing for a\n   * default value\n   * @api private\n   */\n  set: function set(property, value, defaultValue) {\n    if (value === undefined) {\n      if (defaultValue === undefined) {\n        defaultValue = this.keys[property];\n      }\n      if (typeof defaultValue === 'function') {\n        this[property] = defaultValue.call(this);\n      } else {\n        this[property] = defaultValue;\n      }\n    } else if (property === 'httpOptions' && this[property]) {\n      // deep merge httpOptions\n      this[property] = AWS.util.merge(this[property], value);\n    } else {\n      this[property] = value;\n    }\n  },\n\n  /**\n   * All of the keys with their default values.\n   *\n   * @constant\n   * @api private\n   */\n  keys: {\n    credentials: null,\n    credentialProvider: null,\n    region: null,\n    logger: null,\n    apiVersions: {},\n    apiVersion: null,\n    endpoint: undefined,\n    httpOptions: {\n      timeout: 120000\n    },\n    maxRetries: undefined,\n    maxRedirects: 10,\n    paramValidation: true,\n    sslEnabled: true,\n    s3ForcePathStyle: false,\n    s3BucketEndpoint: false,\n    s3DisableBodySigning: true,\n    s3UsEast1RegionalEndpoint: 'legacy',\n    s3UseArnRegion: undefined,\n    computeChecksums: true,\n    convertResponseTypes: true,\n    correctClockSkew: false,\n    customUserAgent: null,\n    dynamoDbCrc32: true,\n    systemClockOffset: 0,\n    signatureVersion: null,\n    signatureCache: true,\n    retryDelayOptions: {},\n    useAccelerateEndpoint: false,\n    clientSideMonitoring: false,\n    endpointDiscoveryEnabled: undefined,\n    endpointCacheSize: 1000,\n    hostPrefixEnabled: true,\n    stsRegionalEndpoints: 'legacy'\n  },\n\n  /**\n   * Extracts accessKeyId, secretAccessKey and sessionToken\n   * from a configuration hash.\n   *\n   * @api private\n   */\n  extractCredentials: function extractCredentials(options) {\n    if (options.accessKeyId && options.secretAccessKey) {\n      options = AWS.util.copy(options);\n      options.credentials = new AWS.Credentials(options);\n    }\n    return options;\n  },\n\n  /**\n   * Sets the promise dependency the SDK will use wherever Promises are returned.\n   * Passing `null` will force the SDK to use native Promises if they are available.\n   * If native Promises are not available, passing `null` will have no effect.\n   * @param [Constructor] dep A reference to a Promise constructor\n   */\n  setPromisesDependency: function setPromisesDependency(dep) {\n    PromisesDependency = dep;\n    // if null was passed in, we should try to use native promises\n    if (dep === null && typeof Promise === 'function') {\n      PromisesDependency = Promise;\n    }\n    var constructors = [AWS.Request, AWS.Credentials, AWS.CredentialProviderChain];\n    if (AWS.S3) {\n      constructors.push(AWS.S3);\n      if (AWS.S3.ManagedUpload) {\n        constructors.push(AWS.S3.ManagedUpload);\n      }\n    }\n    AWS.util.addPromises(constructors, PromisesDependency);\n  },\n\n  /**\n   * Gets the promise dependency set by `AWS.config.setPromisesDependency`.\n   */\n  getPromisesDependency: function getPromisesDependency() {\n    return PromisesDependency;\n  }\n});\n\n/**\n * @return [AWS.Config] The global configuration object singleton instance\n * @readonly\n * @see AWS.Config\n */\nAWS.config = new AWS.Config();\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['ecr'] = {};\nAWS.ECR = Service.defineService('ecr', ['2015-09-21']);\nObject.defineProperty(apiLoader.services['ecr'], '2015-09-21', {\n  get: function get() {\n    var model = require('../apis/ecr-2015-09-21.min.json');\n    model.paginators = require('../apis/ecr-2015-09-21.paginators.json').pagination;\n    model.waiters = require('../apis/ecr-2015-09-21.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ECR;\n","var escapeElement = require('./escape-element').escapeElement;\n\n/**\n * Represents an XML text value.\n * @api private\n */\nfunction XmlText(value) {\n    this.value = value;\n}\n\nXmlText.prototype.toString = function () {\n    return escapeElement('' + this.value);\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n    XmlText: XmlText\n};\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['rekognition'] = {};\nAWS.Rekognition = Service.defineService('rekognition', ['2016-06-27']);\nObject.defineProperty(apiLoader.services['rekognition'], '2016-06-27', {\n  get: function get() {\n    var model = require('../apis/rekognition-2016-06-27.min.json');\n    model.paginators = require('../apis/rekognition-2016-06-27.paginators.json').pagination;\n    model.waiters = require('../apis/rekognition-2016-06-27.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Rekognition;\n","var parseMessage = require('./parse-message').parseMessage;\n\n/**\n *\n * @param {*} parser\n * @param {Buffer} message\n * @param {*} shape\n * @api private\n */\nfunction parseEvent(parser, message, shape) {\n    var parsedMessage = parseMessage(message);\n\n    // check if message is an event or error\n    var messageType = parsedMessage.headers[':message-type'];\n    if (messageType) {\n        if (messageType.value === 'error') {\n            throw parseError(parsedMessage);\n        } else if (messageType.value !== 'event') {\n            // not sure how to parse non-events/non-errors, ignore for now\n            return;\n        }\n    }\n\n    // determine event type\n    var eventType = parsedMessage.headers[':event-type'];\n    // check that the event type is modeled\n    var eventModel = shape.members[eventType.value];\n    if (!eventModel) {\n        return;\n    }\n\n    var result = {};\n    // check if an event payload exists\n    var eventPayloadMemberName = eventModel.eventPayloadMemberName;\n    if (eventPayloadMemberName) {\n        var payloadShape = eventModel.members[eventPayloadMemberName];\n        // if the shape is binary, return the byte array\n        if (payloadShape.type === 'binary') {\n            result[eventPayloadMemberName] = parsedMessage.body;\n        } else {\n            result[eventPayloadMemberName] = parser.parse(parsedMessage.body.toString(), payloadShape);\n        }\n    }\n\n    // read event headers\n    var eventHeaderNames = eventModel.eventHeaderMemberNames;\n    for (var i = 0; i < eventHeaderNames.length; i++) {\n        var name = eventHeaderNames[i];\n        if (parsedMessage.headers[name]) {\n            // parse the header!\n            result[name] = eventModel.members[name].toType(parsedMessage.headers[name].value);\n        }\n    }\n\n    var output = {};\n    output[eventType.value] = result;\n    return output;\n}\n\nfunction parseError(message) {\n    var errorCode = message.headers[':error-code'];\n    var errorMessage = message.headers[':error-message'];\n    var error = new Error(errorMessage.value || errorMessage);\n    error.code = error.name = errorCode.value || errorCode;\n    return error;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    parseEvent: parseEvent\n};\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['costexplorer'] = {};\nAWS.CostExplorer = Service.defineService('costexplorer', ['2017-10-25']);\nObject.defineProperty(apiLoader.services['costexplorer'], '2017-10-25', {\n  get: function get() {\n    var model = require('../apis/ce-2017-10-25.min.json');\n    model.paginators = require('../apis/ce-2017-10-25.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CostExplorer;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['route53'] = {};\nAWS.Route53 = Service.defineService('route53', ['2013-04-01']);\nrequire('../lib/services/route53');\nObject.defineProperty(apiLoader.services['route53'], '2013-04-01', {\n  get: function get() {\n    var model = require('../apis/route53-2013-04-01.min.json');\n    model.paginators = require('../apis/route53-2013-04-01.paginators.json').pagination;\n    model.waiters = require('../apis/route53-2013-04-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Route53;\n","var AWS = require('../core');\nvar util = require('../util');\nvar Rest = require('./rest');\n\nfunction populateBody(req) {\n  var input = req.service.api.operations[req.operation].input;\n  var builder = new AWS.XML.Builder();\n  var params = req.params;\n\n  var payload = input.payload;\n  if (payload) {\n    var payloadMember = input.members[payload];\n    params = params[payload];\n    if (params === undefined) return;\n\n    if (payloadMember.type === 'structure') {\n      var rootElement = payloadMember.name;\n      req.httpRequest.body = builder.toXML(params, payloadMember, rootElement, true);\n    } else { // non-xml payload\n      req.httpRequest.body = params;\n    }\n  } else {\n    req.httpRequest.body = builder.toXML(params, input, input.name ||\n      input.shape || util.string.upperFirst(req.operation) + 'Request');\n  }\n}\n\nfunction buildRequest(req) {\n  Rest.buildRequest(req);\n\n  // never send body payload on GET/HEAD\n  if (['GET', 'HEAD'].indexOf(req.httpRequest.method) < 0) {\n    populateBody(req);\n  }\n}\n\nfunction extractError(resp) {\n  Rest.extractError(resp);\n\n  var data;\n  try {\n    data = new AWS.XML.Parser().parse(resp.httpResponse.body.toString());\n  } catch (e) {\n    data = {\n      Code: resp.httpResponse.statusCode,\n      Message: resp.httpResponse.statusMessage\n    };\n  }\n\n  if (data.Errors) data = data.Errors;\n  if (data.Error) data = data.Error;\n  if (data.Code) {\n    resp.error = util.error(new Error(), {\n      code: data.Code,\n      message: data.Message\n    });\n  } else {\n    resp.error = util.error(new Error(), {\n      code: resp.httpResponse.statusCode,\n      message: null\n    });\n  }\n}\n\nfunction extractData(resp) {\n  Rest.extractData(resp);\n\n  var parser;\n  var req = resp.request;\n  var body = resp.httpResponse.body;\n  var operation = req.service.api.operations[req.operation];\n  var output = operation.output;\n\n  var hasEventOutput = operation.hasEventOutput;\n\n  var payload = output.payload;\n  if (payload) {\n    var payloadMember = output.members[payload];\n    if (payloadMember.isEventStream) {\n      parser = new AWS.XML.Parser();\n      resp.data[payload] = util.createEventStream(\n        AWS.HttpClient.streamsApiVersion === 2 ? resp.httpResponse.stream : resp.httpResponse.body,\n        parser,\n        payloadMember\n      );\n    } else if (payloadMember.type === 'structure') {\n      parser = new AWS.XML.Parser();\n      resp.data[payload] = parser.parse(body.toString(), payloadMember);\n    } else if (payloadMember.type === 'binary' || payloadMember.isStreaming) {\n      resp.data[payload] = body;\n    } else {\n      resp.data[payload] = payloadMember.toType(body);\n    }\n  } else if (body.length > 0) {\n    parser = new AWS.XML.Parser();\n    var data = parser.parse(body.toString(), output);\n    util.update(resp.data, data);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n","var AWS = require('./core');\n\n/**\n * @api private\n * @!method on(eventName, callback)\n *   Registers an event listener callback for the event given by `eventName`.\n *   Parameters passed to the callback function depend on the individual event\n *   being triggered. See the event documentation for those parameters.\n *\n *   @param eventName [String] the event name to register the listener for\n *   @param callback [Function] the listener callback function\n *   @param toHead [Boolean] attach the listener callback to the head of callback array if set to true.\n *     Default to be false.\n *   @return [AWS.SequentialExecutor] the same object for chaining\n */\nAWS.SequentialExecutor = AWS.util.inherit({\n\n  constructor: function SequentialExecutor() {\n    this._events = {};\n  },\n\n  /**\n   * @api private\n   */\n  listeners: function listeners(eventName) {\n    return this._events[eventName] ? this._events[eventName].slice(0) : [];\n  },\n\n  on: function on(eventName, listener, toHead) {\n    if (this._events[eventName]) {\n      toHead ?\n        this._events[eventName].unshift(listener) :\n        this._events[eventName].push(listener);\n    } else {\n      this._events[eventName] = [listener];\n    }\n    return this;\n  },\n\n  onAsync: function onAsync(eventName, listener, toHead) {\n    listener._isAsync = true;\n    return this.on(eventName, listener, toHead);\n  },\n\n  removeListener: function removeListener(eventName, listener) {\n    var listeners = this._events[eventName];\n    if (listeners) {\n      var length = listeners.length;\n      var position = -1;\n      for (var i = 0; i < length; ++i) {\n        if (listeners[i] === listener) {\n          position = i;\n        }\n      }\n      if (position > -1) {\n        listeners.splice(position, 1);\n      }\n    }\n    return this;\n  },\n\n  removeAllListeners: function removeAllListeners(eventName) {\n    if (eventName) {\n      delete this._events[eventName];\n    } else {\n      this._events = {};\n    }\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  emit: function emit(eventName, eventArgs, doneCallback) {\n    if (!doneCallback) doneCallback = function() { };\n    var listeners = this.listeners(eventName);\n    var count = listeners.length;\n    this.callListeners(listeners, eventArgs, doneCallback);\n    return count > 0;\n  },\n\n  /**\n   * @api private\n   */\n  callListeners: function callListeners(listeners, args, doneCallback, prevError) {\n    var self = this;\n    var error = prevError || null;\n\n    function callNextListener(err) {\n      if (err) {\n        error = AWS.util.error(error || new Error(), err);\n        if (self._haltHandlersOnError) {\n          return doneCallback.call(self, error);\n        }\n      }\n      self.callListeners(listeners, args, doneCallback, error);\n    }\n\n    while (listeners.length > 0) {\n      var listener = listeners.shift();\n      if (listener._isAsync) { // asynchronous listener\n        listener.apply(self, args.concat([callNextListener]));\n        return; // stop here, callNextListener will continue\n      } else { // synchronous listener\n        try {\n          listener.apply(self, args);\n        } catch (err) {\n          error = AWS.util.error(error || new Error(), err);\n        }\n        if (error && self._haltHandlersOnError) {\n          doneCallback.call(self, error);\n          return;\n        }\n      }\n    }\n    doneCallback.call(self, error);\n  },\n\n  /**\n   * Adds or copies a set of listeners from another list of\n   * listeners or SequentialExecutor object.\n   *\n   * @param listeners [map<String,Array<Function>>, AWS.SequentialExecutor]\n   *   a list of events and callbacks, or an event emitter object\n   *   containing listeners to add to this emitter object.\n   * @return [AWS.SequentialExecutor] the emitter object, for chaining.\n   * @example Adding listeners from a map of listeners\n   *   emitter.addListeners({\n   *     event1: [function() { ... }, function() { ... }],\n   *     event2: [function() { ... }]\n   *   });\n   *   emitter.emit('event1'); // emitter has event1\n   *   emitter.emit('event2'); // emitter has event2\n   * @example Adding listeners from another emitter object\n   *   var emitter1 = new AWS.SequentialExecutor();\n   *   emitter1.on('event1', function() { ... });\n   *   emitter1.on('event2', function() { ... });\n   *   var emitter2 = new AWS.SequentialExecutor();\n   *   emitter2.addListeners(emitter1);\n   *   emitter2.emit('event1'); // emitter2 has event1\n   *   emitter2.emit('event2'); // emitter2 has event2\n   */\n  addListeners: function addListeners(listeners) {\n    var self = this;\n\n    // extract listeners if parameter is an SequentialExecutor object\n    if (listeners._events) listeners = listeners._events;\n\n    AWS.util.each(listeners, function(event, callbacks) {\n      if (typeof callbacks === 'function') callbacks = [callbacks];\n      AWS.util.arrayEach(callbacks, function(callback) {\n        self.on(event, callback);\n      });\n    });\n\n    return self;\n  },\n\n  /**\n   * Registers an event with {on} and saves the callback handle function\n   * as a property on the emitter object using a given `name`.\n   *\n   * @param name [String] the property name to set on this object containing\n   *   the callback function handle so that the listener can be removed in\n   *   the future.\n   * @param (see on)\n   * @return (see on)\n   * @example Adding a named listener DATA_CALLBACK\n   *   var listener = function() { doSomething(); };\n   *   emitter.addNamedListener('DATA_CALLBACK', 'data', listener);\n   *\n   *   // the following prints: true\n   *   console.log(emitter.DATA_CALLBACK == listener);\n   */\n  addNamedListener: function addNamedListener(name, eventName, callback, toHead) {\n    this[name] = callback;\n    this.addListener(eventName, callback, toHead);\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  addNamedAsyncListener: function addNamedAsyncListener(name, eventName, callback, toHead) {\n    callback._isAsync = true;\n    return this.addNamedListener(name, eventName, callback, toHead);\n  },\n\n  /**\n   * Helper method to add a set of named listeners using\n   * {addNamedListener}. The callback contains a parameter\n   * with a handle to the `addNamedListener` method.\n   *\n   * @callback callback function(add)\n   *   The callback function is called immediately in order to provide\n   *   the `add` function to the block. This simplifies the addition of\n   *   a large group of named listeners.\n   *   @param add [Function] the {addNamedListener} function to call\n   *     when registering listeners.\n   * @example Adding a set of named listeners\n   *   emitter.addNamedListeners(function(add) {\n   *     add('DATA_CALLBACK', 'data', function() { ... });\n   *     add('OTHER', 'otherEvent', function() { ... });\n   *     add('LAST', 'lastEvent', function() { ... });\n   *   });\n   *\n   *   // these properties are now set:\n   *   emitter.DATA_CALLBACK;\n   *   emitter.OTHER;\n   *   emitter.LAST;\n   */\n  addNamedListeners: function addNamedListeners(callback) {\n    var self = this;\n    callback(\n      function() {\n        self.addNamedListener.apply(self, arguments);\n      },\n      function() {\n        self.addNamedAsyncListener.apply(self, arguments);\n      }\n    );\n    return this;\n  }\n});\n\n/**\n * {on} is the prefered method.\n * @api private\n */\nAWS.SequentialExecutor.prototype.addListener = AWS.SequentialExecutor.prototype.on;\n\n/**\n * @api private\n */\nmodule.exports = AWS.SequentialExecutor;\n","var util = require('../util');\n\nfunction QueryParamSerializer() {\n}\n\nQueryParamSerializer.prototype.serialize = function(params, shape, fn) {\n  serializeStructure('', params, shape, fn);\n};\n\nfunction ucfirst(shape) {\n  if (shape.isQueryName || shape.api.protocol !== 'ec2') {\n    return shape.name;\n  } else {\n    return shape.name[0].toUpperCase() + shape.name.substr(1);\n  }\n}\n\nfunction serializeStructure(prefix, struct, rules, fn) {\n  util.each(rules.members, function(name, member) {\n    var value = struct[name];\n    if (value === null || value === undefined) return;\n\n    var memberName = ucfirst(member);\n    memberName = prefix ? prefix + '.' + memberName : memberName;\n    serializeMember(memberName, value, member, fn);\n  });\n}\n\nfunction serializeMap(name, map, rules, fn) {\n  var i = 1;\n  util.each(map, function (key, value) {\n    var prefix = rules.flattened ? '.' : '.entry.';\n    var position = prefix + (i++) + '.';\n    var keyName = position + (rules.key.name || 'key');\n    var valueName = position + (rules.value.name || 'value');\n    serializeMember(name + keyName, key, rules.key, fn);\n    serializeMember(name + valueName, value, rules.value, fn);\n  });\n}\n\nfunction serializeList(name, list, rules, fn) {\n  var memberRules = rules.member || {};\n\n  if (list.length === 0) {\n    fn.call(this, name, null);\n    return;\n  }\n\n  util.arrayEach(list, function (v, n) {\n    var suffix = '.' + (n + 1);\n    if (rules.api.protocol === 'ec2') {\n      // Do nothing for EC2\n      suffix = suffix + ''; // make linter happy\n    } else if (rules.flattened) {\n      if (memberRules.name) {\n        var parts = name.split('.');\n        parts.pop();\n        parts.push(ucfirst(memberRules));\n        name = parts.join('.');\n      }\n    } else {\n      suffix = '.' + (memberRules.name ? memberRules.name : 'member') + suffix;\n    }\n    serializeMember(name + suffix, v, memberRules, fn);\n  });\n}\n\nfunction serializeMember(name, value, rules, fn) {\n  if (value === null || value === undefined) return;\n  if (rules.type === 'structure') {\n    serializeStructure(name, value, rules, fn);\n  } else if (rules.type === 'list') {\n    serializeList(name, value, rules, fn);\n  } else if (rules.type === 'map') {\n    serializeMap(name, value, rules, fn);\n  } else {\n    fn(name, rules.toWireFormat(value).toString());\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = QueryParamSerializer;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['opsworks'] = {};\nAWS.OpsWorks = Service.defineService('opsworks', ['2013-02-18']);\nObject.defineProperty(apiLoader.services['opsworks'], '2013-02-18', {\n  get: function get() {\n    var model = require('../apis/opsworks-2013-02-18.min.json');\n    model.paginators = require('../apis/opsworks-2013-02-18.paginators.json').pagination;\n    model.waiters = require('../apis/opsworks-2013-02-18.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.OpsWorks;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LinkedListNode = /** @class */ (function () {\n    function LinkedListNode(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    return LinkedListNode;\n}());\nvar LRUCache = /** @class */ (function () {\n    function LRUCache(size) {\n        this.nodeMap = {};\n        this.size = 0;\n        if (typeof size !== 'number' || size < 1) {\n            throw new Error('Cache size can only be positive number');\n        }\n        this.sizeLimit = size;\n    }\n    Object.defineProperty(LRUCache.prototype, \"length\", {\n        get: function () {\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LRUCache.prototype.prependToList = function (node) {\n        if (!this.headerNode) {\n            this.tailNode = node;\n        }\n        else {\n            this.headerNode.prev = node;\n            node.next = this.headerNode;\n        }\n        this.headerNode = node;\n        this.size++;\n    };\n    LRUCache.prototype.removeFromTail = function () {\n        if (!this.tailNode) {\n            return undefined;\n        }\n        var node = this.tailNode;\n        var prevNode = node.prev;\n        if (prevNode) {\n            prevNode.next = undefined;\n        }\n        node.prev = undefined;\n        this.tailNode = prevNode;\n        this.size--;\n        return node;\n    };\n    LRUCache.prototype.detachFromList = function (node) {\n        if (this.headerNode === node) {\n            this.headerNode = node.next;\n        }\n        if (this.tailNode === node) {\n            this.tailNode = node.prev;\n        }\n        if (node.prev) {\n            node.prev.next = node.next;\n        }\n        if (node.next) {\n            node.next.prev = node.prev;\n        }\n        node.next = undefined;\n        node.prev = undefined;\n        this.size--;\n    };\n    LRUCache.prototype.get = function (key) {\n        if (this.nodeMap[key]) {\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            this.prependToList(node);\n            return node.value;\n        }\n    };\n    LRUCache.prototype.remove = function (key) {\n        if (this.nodeMap[key]) {\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            delete this.nodeMap[key];\n        }\n    };\n    LRUCache.prototype.put = function (key, value) {\n        if (this.nodeMap[key]) {\n            this.remove(key);\n        }\n        else if (this.size === this.sizeLimit) {\n            var tailNode = this.removeFromTail();\n            var key_1 = tailNode.key;\n            delete this.nodeMap[key_1];\n        }\n        var newNode = new LinkedListNode(key, value);\n        this.nodeMap[key] = newNode;\n        this.prependToList(newNode);\n    };\n    LRUCache.prototype.empty = function () {\n        var keys = Object.keys(this.nodeMap);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            delete this.nodeMap[key];\n        }\n    };\n    return LRUCache;\n}());\nexports.LRUCache = LRUCache;","var util = require('../util');\n\nfunction JsonParser() { }\n\nJsonParser.prototype.parse = function(value, shape) {\n  return translate(JSON.parse(value), shape);\n};\n\nfunction translate(value, shape) {\n  if (!shape || value === undefined) return undefined;\n\n  switch (shape.type) {\n    case 'structure': return translateStructure(value, shape);\n    case 'map': return translateMap(value, shape);\n    case 'list': return translateList(value, shape);\n    default: return translateScalar(value, shape);\n  }\n}\n\nfunction translateStructure(structure, shape) {\n  if (structure == null) return undefined;\n\n  var struct = {};\n  var shapeMembers = shape.members;\n  util.each(shapeMembers, function(name, memberShape) {\n    var locationName = memberShape.isLocationName ? memberShape.name : name;\n    if (Object.prototype.hasOwnProperty.call(structure, locationName)) {\n      var value = structure[locationName];\n      var result = translate(value, memberShape);\n      if (result !== undefined) struct[name] = result;\n    }\n  });\n  return struct;\n}\n\nfunction translateList(list, shape) {\n  if (list == null) return undefined;\n\n  var out = [];\n  util.arrayEach(list, function(value) {\n    var result = translate(value, shape.member);\n    if (result === undefined) out.push(null);\n    else out.push(result);\n  });\n  return out;\n}\n\nfunction translateMap(map, shape) {\n  if (map == null) return undefined;\n\n  var out = {};\n  util.each(map, function(key, value) {\n    var result = translate(value, shape.value);\n    if (result === undefined) out[key] = null;\n    else out[key] = result;\n  });\n  return out;\n}\n\nfunction translateScalar(value, shape) {\n  return shape.toType(value);\n}\n\n/**\n * @api private\n */\nmodule.exports = JsonParser;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['comprehendmedical'] = {};\nAWS.ComprehendMedical = Service.defineService('comprehendmedical', ['2018-10-30']);\nObject.defineProperty(apiLoader.services['comprehendmedical'], '2018-10-30', {\n  get: function get() {\n    var model = require('../apis/comprehendmedical-2018-10-30.min.json');\n    model.paginators = require('../apis/comprehendmedical-2018-10-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ComprehendMedical;\n","var AWS = require('./core');\nvar AcceptorStateMachine = require('./state_machine');\nvar inherit = AWS.util.inherit;\nvar domain = AWS.util.domain;\nvar jmespath = require('jmespath');\n\n/**\n * @api private\n */\nvar hardErrorStates = {success: 1, error: 1, complete: 1};\n\nfunction isTerminalState(machine) {\n  return Object.prototype.hasOwnProperty.call(hardErrorStates, machine._asm.currentState);\n}\n\nvar fsm = new AcceptorStateMachine();\nfsm.setupStates = function() {\n  var transition = function(_, done) {\n    var self = this;\n    self._haltHandlersOnError = false;\n\n    self.emit(self._asm.currentState, function(err) {\n      if (err) {\n        if (isTerminalState(self)) {\n          if (domain && self.domain instanceof domain.Domain) {\n            err.domainEmitter = self;\n            err.domain = self.domain;\n            err.domainThrown = false;\n            self.domain.emit('error', err);\n          } else {\n            throw err;\n          }\n        } else {\n          self.response.error = err;\n          done(err);\n        }\n      } else {\n        done(self.response.error);\n      }\n    });\n\n  };\n\n  this.addState('validate', 'build', 'error', transition);\n  this.addState('build', 'afterBuild', 'restart', transition);\n  this.addState('afterBuild', 'sign', 'restart', transition);\n  this.addState('sign', 'send', 'retry', transition);\n  this.addState('retry', 'afterRetry', 'afterRetry', transition);\n  this.addState('afterRetry', 'sign', 'error', transition);\n  this.addState('send', 'validateResponse', 'retry', transition);\n  this.addState('validateResponse', 'extractData', 'extractError', transition);\n  this.addState('extractError', 'extractData', 'retry', transition);\n  this.addState('extractData', 'success', 'retry', transition);\n  this.addState('restart', 'build', 'error', transition);\n  this.addState('success', 'complete', 'complete', transition);\n  this.addState('error', 'complete', 'complete', transition);\n  this.addState('complete', null, null, transition);\n};\nfsm.setupStates();\n\n/**\n * ## Asynchronous Requests\n *\n * All requests made through the SDK are asynchronous and use a\n * callback interface. Each service method that kicks off a request\n * returns an `AWS.Request` object that you can use to register\n * callbacks.\n *\n * For example, the following service method returns the request\n * object as \"request\", which can be used to register callbacks:\n *\n * ```javascript\n * // request is an AWS.Request object\n * var request = ec2.describeInstances();\n *\n * // register callbacks on request to retrieve response data\n * request.on('success', function(response) {\n *   console.log(response.data);\n * });\n * ```\n *\n * When a request is ready to be sent, the {send} method should\n * be called:\n *\n * ```javascript\n * request.send();\n * ```\n *\n * Since registered callbacks may or may not be idempotent, requests should only\n * be sent once. To perform the same operation multiple times, you will need to\n * create multiple request objects, each with its own registered callbacks.\n *\n * ## Removing Default Listeners for Events\n *\n * Request objects are built with default listeners for the various events,\n * depending on the service type. In some cases, you may want to remove\n * some built-in listeners to customize behaviour. Doing this requires\n * access to the built-in listener functions, which are exposed through\n * the {AWS.EventListeners.Core} namespace. For instance, you may\n * want to customize the HTTP handler used when sending a request. In this\n * case, you can remove the built-in listener associated with the 'send'\n * event, the {AWS.EventListeners.Core.SEND} listener and add your own.\n *\n * ## Multiple Callbacks and Chaining\n *\n * You can register multiple callbacks on any request object. The\n * callbacks can be registered for different events, or all for the\n * same event. In addition, you can chain callback registration, for\n * example:\n *\n * ```javascript\n * request.\n *   on('success', function(response) {\n *     console.log(\"Success!\");\n *   }).\n *   on('error', function(error, response) {\n *     console.log(\"Error!\");\n *   }).\n *   on('complete', function(response) {\n *     console.log(\"Always!\");\n *   }).\n *   send();\n * ```\n *\n * The above example will print either \"Success! Always!\", or \"Error! Always!\",\n * depending on whether the request succeeded or not.\n *\n * @!attribute httpRequest\n *   @readonly\n *   @!group HTTP Properties\n *   @return [AWS.HttpRequest] the raw HTTP request object\n *     containing request headers and body information\n *     sent by the service.\n *\n * @!attribute startTime\n *   @readonly\n *   @!group Operation Properties\n *   @return [Date] the time that the request started\n *\n * @!group Request Building Events\n *\n * @!event validate(request)\n *   Triggered when a request is being validated. Listeners\n *   should throw an error if the request should not be sent.\n *   @param request [Request] the request object being sent\n *   @see AWS.EventListeners.Core.VALIDATE_CREDENTIALS\n *   @see AWS.EventListeners.Core.VALIDATE_REGION\n *   @example Ensuring that a certain parameter is set before sending a request\n *     var req = s3.putObject(params);\n *     req.on('validate', function() {\n *       if (!req.params.Body.match(/^Hello\\s/)) {\n *         throw new Error('Body must start with \"Hello \"');\n *       }\n *     });\n *     req.send(function(err, data) { ... });\n *\n * @!event build(request)\n *   Triggered when the request payload is being built. Listeners\n *   should fill the necessary information to send the request\n *   over HTTP.\n *   @param (see AWS.Request~validate)\n *   @example Add a custom HTTP header to a request\n *     var req = s3.putObject(params);\n *     req.on('build', function() {\n *       req.httpRequest.headers['Custom-Header'] = 'value';\n *     });\n *     req.send(function(err, data) { ... });\n *\n * @!event sign(request)\n *   Triggered when the request is being signed. Listeners should\n *   add the correct authentication headers and/or adjust the body,\n *   depending on the authentication mechanism being used.\n *   @param (see AWS.Request~validate)\n *\n * @!group Request Sending Events\n *\n * @!event send(response)\n *   Triggered when the request is ready to be sent. Listeners\n *   should call the underlying transport layer to initiate\n *   the sending of the request.\n *   @param response [Response] the response object\n *   @context [Request] the request object that was sent\n *   @see AWS.EventListeners.Core.SEND\n *\n * @!event retry(response)\n *   Triggered when a request failed and might need to be retried or redirected.\n *   If the response is retryable, the listener should set the\n *   `response.error.retryable` property to `true`, and optionally set\n *   `response.error.retryDelay` to the millisecond delay for the next attempt.\n *   In the case of a redirect, `response.error.redirect` should be set to\n *   `true` with `retryDelay` set to an optional delay on the next request.\n *\n *   If a listener decides that a request should not be retried,\n *   it should set both `retryable` and `redirect` to false.\n *\n *   Note that a retryable error will be retried at most\n *   {AWS.Config.maxRetries} times (based on the service object's config).\n *   Similarly, a request that is redirected will only redirect at most\n *   {AWS.Config.maxRedirects} times.\n *\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @example Adding a custom retry for a 404 response\n *     request.on('retry', function(response) {\n *       // this resource is not yet available, wait 10 seconds to get it again\n *       if (response.httpResponse.statusCode === 404 && response.error) {\n *         response.error.retryable = true;   // retry this error\n *         response.error.retryDelay = 10000; // wait 10 seconds\n *       }\n *     });\n *\n * @!group Data Parsing Events\n *\n * @!event extractError(response)\n *   Triggered on all non-2xx requests so that listeners can extract\n *   error details from the response body. Listeners to this event\n *   should set the `response.error` property.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event extractData(response)\n *   Triggered in successful requests to allow listeners to\n *   de-serialize the response body into `response.data`.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!group Completion Events\n *\n * @!event success(response)\n *   Triggered when the request completed successfully.\n *   `response.data` will contain the response data and\n *   `response.error` will be null.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event error(error, response)\n *   Triggered when an error occurs at any point during the\n *   request. `response.error` will contain details about the error\n *   that occurred. `response.data` will be null.\n *   @param error [Error] the error object containing details about\n *     the error that occurred.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event complete(response)\n *   Triggered whenever a request cycle completes. `response.error`\n *   should be checked, since the request may have failed.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!group HTTP Events\n *\n * @!event httpHeaders(statusCode, headers, response, statusMessage)\n *   Triggered when headers are sent by the remote server\n *   @param statusCode [Integer] the HTTP response code\n *   @param headers [map<String,String>] the response headers\n *   @param (see AWS.Request~send)\n *   @param statusMessage [String] A status message corresponding to the HTTP\n *                                 response code\n *   @context (see AWS.Request~send)\n *\n * @!event httpData(chunk, response)\n *   Triggered when data is sent by the remote server\n *   @param chunk [Buffer] the buffer data containing the next data chunk\n *     from the server\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @see AWS.EventListeners.Core.HTTP_DATA\n *\n * @!event httpUploadProgress(progress, response)\n *   Triggered when the HTTP request has uploaded more data\n *   @param progress [map] An object containing the `loaded` and `total` bytes\n *     of the request.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @note This event will not be emitted in Node.js 0.8.x.\n *\n * @!event httpDownloadProgress(progress, response)\n *   Triggered when the HTTP request has downloaded more data\n *   @param progress [map] An object containing the `loaded` and `total` bytes\n *     of the request.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @note This event will not be emitted in Node.js 0.8.x.\n *\n * @!event httpError(error, response)\n *   Triggered when the HTTP request failed\n *   @param error [Error] the error object that was thrown\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event httpDone(response)\n *   Triggered when the server is finished sending data\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @see AWS.Response\n */\nAWS.Request = inherit({\n\n  /**\n   * Creates a request for an operation on a given service with\n   * a set of input parameters.\n   *\n   * @param service [AWS.Service] the service to perform the operation on\n   * @param operation [String] the operation to perform on the service\n   * @param params [Object] parameters to send to the operation.\n   *   See the operation's documentation for the format of the\n   *   parameters.\n   */\n  constructor: function Request(service, operation, params) {\n    var endpoint = service.endpoint;\n    var region = service.config.region;\n    var customUserAgent = service.config.customUserAgent;\n\n    if (service.isGlobalEndpoint) {\n      if (service.signingRegion) {\n        region = service.signingRegion;\n      } else {\n        region = 'us-east-1';\n      }\n    }\n\n    this.domain = domain && domain.active;\n    this.service = service;\n    this.operation = operation;\n    this.params = params || {};\n    this.httpRequest = new AWS.HttpRequest(endpoint, region);\n    this.httpRequest.appendToUserAgent(customUserAgent);\n    this.startTime = service.getSkewCorrectedDate();\n\n    this.response = new AWS.Response(this);\n    this._asm = new AcceptorStateMachine(fsm.states, 'validate');\n    this._haltHandlersOnError = false;\n\n    AWS.SequentialExecutor.call(this);\n    this.emit = this.emitEvent;\n  },\n\n  /**\n   * @!group Sending a Request\n   */\n\n  /**\n   * @overload send(callback = null)\n   *   Sends the request object.\n   *\n   *   @callback callback function(err, data)\n   *     If a callback is supplied, it is called when a response is returned\n   *     from the service.\n   *     @context [AWS.Request] the request object being sent.\n   *     @param err [Error] the error object returned from the request.\n   *       Set to `null` if the request is successful.\n   *     @param data [Object] the de-serialized data returned from\n   *       the request. Set to `null` if a request error occurs.\n   *   @example Sending a request with a callback\n   *     request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n   *     request.send(function(err, data) { console.log(err, data); });\n   *   @example Sending a request with no callback (using event handlers)\n   *     request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n   *     request.on('complete', function(response) { ... }); // register a callback\n   *     request.send();\n   */\n  send: function send(callback) {\n    if (callback) {\n      // append to user agent\n      this.httpRequest.appendToUserAgent('callback');\n      this.on('complete', function (resp) {\n        callback.call(resp, resp.error, resp.data);\n      });\n    }\n    this.runTo();\n\n    return this.response;\n  },\n\n  /**\n   * @!method  promise()\n   *   Sends the request and returns a 'thenable' promise.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function(data)\n   *     Called if the promise is fulfilled.\n   *     @param data [Object] the de-serialized data returned from the request.\n   *   @callback rejectedCallback function(error)\n   *     Called if the promise is rejected.\n   *     @param error [Error] the error object returned from the request.\n   *   @return [Promise] A promise that represents the state of the request.\n   *   @example Sending a request using promises.\n   *     var request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n   *     var result = request.promise();\n   *     result.then(function(data) { ... }, function(error) { ... });\n   */\n\n  /**\n   * @api private\n   */\n  build: function build(callback) {\n    return this.runTo('send', callback);\n  },\n\n  /**\n   * @api private\n   */\n  runTo: function runTo(state, done) {\n    this._asm.runTo(state, done, this);\n    return this;\n  },\n\n  /**\n   * Aborts a request, emitting the error and complete events.\n   *\n   * @!macro nobrowser\n   * @example Aborting a request after sending\n   *   var params = {\n   *     Bucket: 'bucket', Key: 'key',\n   *     Body: Buffer.alloc(1024 * 1024 * 5) // 5MB payload\n   *   };\n   *   var request = s3.putObject(params);\n   *   request.send(function (err, data) {\n   *     if (err) console.log(\"Error:\", err.code, err.message);\n   *     else console.log(data);\n   *   });\n   *\n   *   // abort request in 1 second\n   *   setTimeout(request.abort.bind(request), 1000);\n   *\n   *   // prints \"Error: RequestAbortedError Request aborted by user\"\n   * @return [AWS.Request] the same request object, for chaining.\n   * @since v1.4.0\n   */\n  abort: function abort() {\n    this.removeAllListeners('validateResponse');\n    this.removeAllListeners('extractError');\n    this.on('validateResponse', function addAbortedError(resp) {\n      resp.error = AWS.util.error(new Error('Request aborted by user'), {\n         code: 'RequestAbortedError', retryable: false\n      });\n    });\n\n    if (this.httpRequest.stream && !this.httpRequest.stream.didCallback) { // abort HTTP stream\n      this.httpRequest.stream.abort();\n      if (this.httpRequest._abortCallback) {\n         this.httpRequest._abortCallback();\n      } else {\n        this.removeAllListeners('send'); // haven't sent yet, so let's not\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Iterates over each page of results given a pageable request, calling\n   * the provided callback with each page of data. After all pages have been\n   * retrieved, the callback is called with `null` data.\n   *\n   * @note This operation can generate multiple requests to a service.\n   * @example Iterating over multiple pages of objects in an S3 bucket\n   *   var pages = 1;\n   *   s3.listObjects().eachPage(function(err, data) {\n   *     if (err) return;\n   *     console.log(\"Page\", pages++);\n   *     console.log(data);\n   *   });\n   * @example Iterating over multiple pages with an asynchronous callback\n   *   s3.listObjects(params).eachPage(function(err, data, done) {\n   *     doSomethingAsyncAndOrExpensive(function() {\n   *       // The next page of results isn't fetched until done is called\n   *       done();\n   *     });\n   *   });\n   * @callback callback function(err, data, [doneCallback])\n   *   Called with each page of resulting data from the request. If the\n   *   optional `doneCallback` is provided in the function, it must be called\n   *   when the callback is complete.\n   *\n   *   @param err [Error] an error object, if an error occurred.\n   *   @param data [Object] a single page of response data. If there is no\n   *     more data, this object will be `null`.\n   *   @param doneCallback [Function] an optional done callback. If this\n   *     argument is defined in the function declaration, it should be called\n   *     when the next page is ready to be retrieved. This is useful for\n   *     controlling serial pagination across asynchronous operations.\n   *   @return [Boolean] if the callback returns `false`, pagination will\n   *     stop.\n   *\n   * @see AWS.Request.eachItem\n   * @see AWS.Response.nextPage\n   * @since v1.4.0\n   */\n  eachPage: function eachPage(callback) {\n    // Make all callbacks async-ish\n    callback = AWS.util.fn.makeAsync(callback, 3);\n\n    function wrappedCallback(response) {\n      callback.call(response, response.error, response.data, function (result) {\n        if (result === false) return;\n\n        if (response.hasNextPage()) {\n          response.nextPage().on('complete', wrappedCallback).send();\n        } else {\n          callback.call(response, null, null, AWS.util.fn.noop);\n        }\n      });\n    }\n\n    this.on('complete', wrappedCallback).send();\n  },\n\n  /**\n   * Enumerates over individual items of a request, paging the responses if\n   * necessary.\n   *\n   * @api experimental\n   * @since v1.4.0\n   */\n  eachItem: function eachItem(callback) {\n    var self = this;\n    function wrappedCallback(err, data) {\n      if (err) return callback(err, null);\n      if (data === null) return callback(null, null);\n\n      var config = self.service.paginationConfig(self.operation);\n      var resultKey = config.resultKey;\n      if (Array.isArray(resultKey)) resultKey = resultKey[0];\n      var items = jmespath.search(data, resultKey);\n      var continueIteration = true;\n      AWS.util.arrayEach(items, function(item) {\n        continueIteration = callback(null, item);\n        if (continueIteration === false) {\n          return AWS.util.abort;\n        }\n      });\n      return continueIteration;\n    }\n\n    this.eachPage(wrappedCallback);\n  },\n\n  /**\n   * @return [Boolean] whether the operation can return multiple pages of\n   *   response data.\n   * @see AWS.Response.eachPage\n   * @since v1.4.0\n   */\n  isPageable: function isPageable() {\n    return this.service.paginationConfig(this.operation) ? true : false;\n  },\n\n  /**\n   * Sends the request and converts the request object into a readable stream\n   * that can be read from or piped into a writable stream.\n   *\n   * @note The data read from a readable stream contains only\n   *   the raw HTTP body contents.\n   * @example Manually reading from a stream\n   *   request.createReadStream().on('data', function(data) {\n   *     console.log(\"Got data:\", data.toString());\n   *   });\n   * @example Piping a request body into a file\n   *   var out = fs.createWriteStream('/path/to/outfile.jpg');\n   *   s3.service.getObject(params).createReadStream().pipe(out);\n   * @return [Stream] the readable stream object that can be piped\n   *   or read from (by registering 'data' event listeners).\n   * @!macro nobrowser\n   */\n  createReadStream: function createReadStream() {\n    var streams = AWS.util.stream;\n    var req = this;\n    var stream = null;\n\n    if (AWS.HttpClient.streamsApiVersion === 2) {\n      stream = new streams.PassThrough();\n      process.nextTick(function() { req.send(); });\n    } else {\n      stream = new streams.Stream();\n      stream.readable = true;\n\n      stream.sent = false;\n      stream.on('newListener', function(event) {\n        if (!stream.sent && event === 'data') {\n          stream.sent = true;\n          process.nextTick(function() { req.send(); });\n        }\n      });\n    }\n\n    this.on('error', function(err) {\n      stream.emit('error', err);\n    });\n\n    this.on('httpHeaders', function streamHeaders(statusCode, headers, resp) {\n      if (statusCode < 300) {\n        req.removeListener('httpData', AWS.EventListeners.Core.HTTP_DATA);\n        req.removeListener('httpError', AWS.EventListeners.Core.HTTP_ERROR);\n        req.on('httpError', function streamHttpError(error) {\n          resp.error = error;\n          resp.error.retryable = false;\n        });\n\n        var shouldCheckContentLength = false;\n        var expectedLen;\n        if (req.httpRequest.method !== 'HEAD') {\n          expectedLen = parseInt(headers['content-length'], 10);\n        }\n        if (expectedLen !== undefined && !isNaN(expectedLen) && expectedLen >= 0) {\n          shouldCheckContentLength = true;\n          var receivedLen = 0;\n        }\n\n        var checkContentLengthAndEmit = function checkContentLengthAndEmit() {\n          if (shouldCheckContentLength && receivedLen !== expectedLen) {\n            stream.emit('error', AWS.util.error(\n              new Error('Stream content length mismatch. Received ' +\n                receivedLen + ' of ' + expectedLen + ' bytes.'),\n              { code: 'StreamContentLengthMismatch' }\n            ));\n          } else if (AWS.HttpClient.streamsApiVersion === 2) {\n            stream.end();\n          } else {\n            stream.emit('end');\n          }\n        };\n\n        var httpStream = resp.httpResponse.createUnbufferedStream();\n\n        if (AWS.HttpClient.streamsApiVersion === 2) {\n          if (shouldCheckContentLength) {\n            var lengthAccumulator = new streams.PassThrough();\n            lengthAccumulator._write = function(chunk) {\n              if (chunk && chunk.length) {\n                receivedLen += chunk.length;\n              }\n              return streams.PassThrough.prototype._write.apply(this, arguments);\n            };\n\n            lengthAccumulator.on('end', checkContentLengthAndEmit);\n            stream.on('error', function(err) {\n              shouldCheckContentLength = false;\n              httpStream.unpipe(lengthAccumulator);\n              lengthAccumulator.emit('end');\n              lengthAccumulator.end();\n            });\n            httpStream.pipe(lengthAccumulator).pipe(stream, { end: false });\n          } else {\n            httpStream.pipe(stream);\n          }\n        } else {\n\n          if (shouldCheckContentLength) {\n            httpStream.on('data', function(arg) {\n              if (arg && arg.length) {\n                receivedLen += arg.length;\n              }\n            });\n          }\n\n          httpStream.on('data', function(arg) {\n            stream.emit('data', arg);\n          });\n          httpStream.on('end', checkContentLengthAndEmit);\n        }\n\n        httpStream.on('error', function(err) {\n          shouldCheckContentLength = false;\n          stream.emit('error', err);\n        });\n      }\n    });\n\n    return stream;\n  },\n\n  /**\n   * @param [Array,Response] args This should be the response object,\n   *   or an array of args to send to the event.\n   * @api private\n   */\n  emitEvent: function emit(eventName, args, done) {\n    if (typeof args === 'function') { done = args; args = null; }\n    if (!done) done = function() { };\n    if (!args) args = this.eventParameters(eventName, this.response);\n\n    var origEmit = AWS.SequentialExecutor.prototype.emit;\n    origEmit.call(this, eventName, args, function (err) {\n      if (err) this.response.error = err;\n      done.call(this, err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  eventParameters: function eventParameters(eventName) {\n    switch (eventName) {\n      case 'restart':\n      case 'validate':\n      case 'sign':\n      case 'build':\n      case 'afterValidate':\n      case 'afterBuild':\n        return [this];\n      case 'error':\n        return [this.response.error, this.response];\n      default:\n        return [this.response];\n    }\n  },\n\n  /**\n   * @api private\n   */\n  presign: function presign(expires, callback) {\n    if (!callback && typeof expires === 'function') {\n      callback = expires;\n      expires = null;\n    }\n    return new AWS.Signers.Presign().sign(this.toGet(), expires, callback);\n  },\n\n  /**\n   * @api private\n   */\n  isPresigned: function isPresigned() {\n    return Object.prototype.hasOwnProperty.call(this.httpRequest.headers, 'presigned-expires');\n  },\n\n  /**\n   * @api private\n   */\n  toUnauthenticated: function toUnauthenticated() {\n    this._unAuthenticated = true;\n    this.removeListener('validate', AWS.EventListeners.Core.VALIDATE_CREDENTIALS);\n    this.removeListener('sign', AWS.EventListeners.Core.SIGN);\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  toGet: function toGet() {\n    if (this.service.api.protocol === 'query' ||\n        this.service.api.protocol === 'ec2') {\n      this.removeListener('build', this.buildAsGet);\n      this.addListener('build', this.buildAsGet);\n    }\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  buildAsGet: function buildAsGet(request) {\n    request.httpRequest.method = 'GET';\n    request.httpRequest.path = request.service.endpoint.path +\n                               '?' + request.httpRequest.body;\n    request.httpRequest.body = '';\n\n    // don't need these headers on a GET request\n    delete request.httpRequest.headers['Content-Length'];\n    delete request.httpRequest.headers['Content-Type'];\n  },\n\n  /**\n   * @api private\n   */\n  haltHandlersOnError: function haltHandlersOnError() {\n    this._haltHandlersOnError = true;\n  }\n});\n\n/**\n * @api private\n */\nAWS.Request.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.promise = function promise() {\n    var self = this;\n    // append to user agent\n    this.httpRequest.appendToUserAgent('promise');\n    return new PromiseDependency(function(resolve, reject) {\n      self.on('complete', function(resp) {\n        if (resp.error) {\n          reject(resp.error);\n        } else {\n          // define $response property so that it is not enumerable\n          // this prevents circular reference errors when stringifying the JSON object\n          resolve(Object.defineProperty(\n            resp.data || {},\n            '$response',\n            {value: resp}\n          ));\n        }\n      });\n      self.runTo();\n    });\n  };\n};\n\n/**\n * @api private\n */\nAWS.Request.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.promise;\n};\n\nAWS.util.addPromises(AWS.Request);\n\nAWS.util.mixin(AWS.Request, AWS.SequentialExecutor);\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['ecs'] = {};\nAWS.ECS = Service.defineService('ecs', ['2014-11-13']);\nObject.defineProperty(apiLoader.services['ecs'], '2014-11-13', {\n  get: function get() {\n    var model = require('../apis/ecs-2014-11-13.min.json');\n    model.paginators = require('../apis/ecs-2014-11-13.paginators.json').pagination;\n    model.waiters = require('../apis/ecs-2014-11-13.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ECS;\n","var AWS = require('../core');\nvar CognitoIdentity = require('../../clients/cognitoidentity');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents credentials retrieved from STS Web Identity Federation using\n * the Amazon Cognito Identity service.\n *\n * By default this provider gets credentials using the\n * {AWS.CognitoIdentity.getCredentialsForIdentity} service operation, which\n * requires either an `IdentityId` or an `IdentityPoolId` (Amazon Cognito\n * Identity Pool ID), which is used to call {AWS.CognitoIdentity.getId} to\n * obtain an `IdentityId`. If the identity or identity pool is not configured in\n * the Amazon Cognito Console to use IAM roles with the appropriate permissions,\n * then additionally a `RoleArn` is required containing the ARN of the IAM trust\n * policy for the Amazon Cognito role that the user will log into. If a `RoleArn`\n * is provided, then this provider gets credentials using the\n * {AWS.STS.assumeRoleWithWebIdentity} service operation, after first getting an\n * Open ID token from {AWS.CognitoIdentity.getOpenIdToken}.\n *\n * In addition, if this credential provider is used to provide authenticated\n * login, the `Logins` map may be set to the tokens provided by the respective\n * identity providers. See {constructor} for an example on creating a credentials\n * object with proper property values.\n *\n * ## Refreshing Credentials from Identity Service\n *\n * In addition to AWS credentials expiring after a given amount of time, the\n * login token from the identity provider will also expire. Once this token\n * expires, it will not be usable to refresh AWS credentials, and another\n * token will be needed. The SDK does not manage refreshing of the token value,\n * but this can be done through a \"refresh token\" supported by most identity\n * providers. Consult the documentation for the identity provider for refreshing\n * tokens. Once the refreshed token is acquired, you should make sure to update\n * this new token in the credentials object's {params} property. The following\n * code will update the WebIdentityToken, assuming you have retrieved an updated\n * token from the identity provider:\n *\n * ```javascript\n * AWS.config.credentials.params.Logins['graph.facebook.com'] = updatedToken;\n * ```\n *\n * Future calls to `credentials.refresh()` will now use the new token.\n *\n * @!attribute params\n *   @return [map] the map of params passed to\n *     {AWS.CognitoIdentity.getId},\n *     {AWS.CognitoIdentity.getOpenIdToken}, and\n *     {AWS.STS.assumeRoleWithWebIdentity}. To update the token, set the\n *     `params.WebIdentityToken` property.\n * @!attribute data\n *   @return [map] the raw data response from the call to\n *     {AWS.CognitoIdentity.getCredentialsForIdentity}, or\n *     {AWS.STS.assumeRoleWithWebIdentity}. Use this if you want to get\n *     access to other properties from the response.\n * @!attribute identityId\n *   @return [String] the Cognito ID returned by the last call to\n *     {AWS.CognitoIdentity.getOpenIdToken}. This ID represents the actual\n *     final resolved identity ID from Amazon Cognito.\n */\nAWS.CognitoIdentityCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * @api private\n   */\n  localStorageKey: {\n    id: 'aws.cognito.identity-id.',\n    providers: 'aws.cognito.identity-providers.'\n  },\n\n  /**\n   * Creates a new credentials object.\n   * @example Creating a new credentials object\n   *   AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n   *\n   *     // either IdentityPoolId or IdentityId is required\n   *     // See the IdentityPoolId param for AWS.CognitoIdentity.getID (linked below)\n   *     // See the IdentityId param for AWS.CognitoIdentity.getCredentialsForIdentity\n   *     // or AWS.CognitoIdentity.getOpenIdToken (linked below)\n   *     IdentityPoolId: 'us-east-1:1699ebc0-7900-4099-b910-2df94f52a030',\n   *     IdentityId: 'us-east-1:128d0a74-c82f-4553-916d-90053e4a8b0f'\n   *\n   *     // optional, only necessary when the identity pool is not configured\n   *     // to use IAM roles in the Amazon Cognito Console\n   *     // See the RoleArn param for AWS.STS.assumeRoleWithWebIdentity (linked below)\n   *     RoleArn: 'arn:aws:iam::1234567890:role/MYAPP-CognitoIdentity',\n   *\n   *     // optional tokens, used for authenticated login\n   *     // See the Logins param for AWS.CognitoIdentity.getID (linked below)\n   *     Logins: {\n   *       'graph.facebook.com': 'FBTOKEN',\n   *       'www.amazon.com': 'AMAZONTOKEN',\n   *       'accounts.google.com': 'GOOGLETOKEN',\n   *       'api.twitter.com': 'TWITTERTOKEN',\n   *       'www.digits.com': 'DIGITSTOKEN'\n   *     },\n   *\n   *     // optional name, defaults to web-identity\n   *     // See the RoleSessionName param for AWS.STS.assumeRoleWithWebIdentity (linked below)\n   *     RoleSessionName: 'web',\n   *\n   *     // optional, only necessary when application runs in a browser\n   *     // and multiple users are signed in at once, used for caching\n   *     LoginId: 'example@gmail.com'\n   *\n   *   }, {\n   *      // optionally provide configuration to apply to the underlying service clients\n   *      // if configuration is not provided, then configuration will be pulled from AWS.config\n   *\n   *      // region should match the region your identity pool is located in\n   *      region: 'us-east-1',\n   *\n   *      // specify timeout options\n   *      httpOptions: {\n   *        timeout: 100\n   *      }\n   *   });\n   * @see AWS.CognitoIdentity.getId\n   * @see AWS.CognitoIdentity.getCredentialsForIdentity\n   * @see AWS.STS.assumeRoleWithWebIdentity\n   * @see AWS.CognitoIdentity.getOpenIdToken\n   * @see AWS.Config\n   * @note If a region is not provided in the global AWS.config, or\n   *   specified in the `clientConfig` to the CognitoIdentityCredentials\n   *   constructor, you may encounter a 'Missing credentials in config' error\n   *   when calling making a service call.\n   */\n  constructor: function CognitoIdentityCredentials(params, clientConfig) {\n    AWS.Credentials.call(this);\n    this.expired = true;\n    this.params = params;\n    this.data = null;\n    this._identityId = null;\n    this._clientConfig = AWS.util.copy(clientConfig || {});\n    this.loadCachedId();\n    var self = this;\n    Object.defineProperty(this, 'identityId', {\n      get: function() {\n        self.loadCachedId();\n        return self._identityId || self.params.IdentityId;\n      },\n      set: function(identityId) {\n        self._identityId = identityId;\n      }\n    });\n  },\n\n  /**\n   * Refreshes credentials using {AWS.CognitoIdentity.getCredentialsForIdentity},\n   * or {AWS.STS.assumeRoleWithWebIdentity}.\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see AWS.Credentials.get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    var self = this;\n    self.createClients();\n    self.data = null;\n    self._identityId = null;\n    self.getId(function(err) {\n      if (!err) {\n        if (!self.params.RoleArn) {\n          self.getCredentialsForIdentity(callback);\n        } else {\n          self.getCredentialsFromSTS(callback);\n        }\n      } else {\n        self.clearIdOnNotAuthorized(err);\n        callback(err);\n      }\n    });\n  },\n\n  /**\n   * Clears the cached Cognito ID associated with the currently configured\n   * identity pool ID. Use this to manually invalidate your cache if\n   * the identity pool ID was deleted.\n   */\n  clearCachedId: function clearCache() {\n    this._identityId = null;\n    delete this.params.IdentityId;\n\n    var poolId = this.params.IdentityPoolId;\n    var loginId = this.params.LoginId || '';\n    delete this.storage[this.localStorageKey.id + poolId + loginId];\n    delete this.storage[this.localStorageKey.providers + poolId + loginId];\n  },\n\n  /**\n   * @api private\n   */\n  clearIdOnNotAuthorized: function clearIdOnNotAuthorized(err) {\n    var self = this;\n    if (err.code == 'NotAuthorizedException') {\n      self.clearCachedId();\n    }\n  },\n\n  /**\n   * Retrieves a Cognito ID, loading from cache if it was already retrieved\n   * on this device.\n   *\n   * @callback callback function(err, identityId)\n   *   @param err [Error, null] an error object if the call failed or null if\n   *     it succeeded.\n   *   @param identityId [String, null] if successful, the callback will return\n   *     the Cognito ID.\n   * @note If not loaded explicitly, the Cognito ID is loaded and stored in\n   *   localStorage in the browser environment of a device.\n   * @api private\n   */\n  getId: function getId(callback) {\n    var self = this;\n    if (typeof self.params.IdentityId === 'string') {\n      return callback(null, self.params.IdentityId);\n    }\n\n    self.cognito.getId(function(err, data) {\n      if (!err && data.IdentityId) {\n        self.params.IdentityId = data.IdentityId;\n        callback(null, data.IdentityId);\n      } else {\n        callback(err);\n      }\n    });\n  },\n\n\n  /**\n   * @api private\n   */\n  loadCredentials: function loadCredentials(data, credentials) {\n    if (!data || !credentials) return;\n    credentials.expired = false;\n    credentials.accessKeyId = data.Credentials.AccessKeyId;\n    credentials.secretAccessKey = data.Credentials.SecretKey;\n    credentials.sessionToken = data.Credentials.SessionToken;\n    credentials.expireTime = data.Credentials.Expiration;\n  },\n\n  /**\n   * @api private\n   */\n  getCredentialsForIdentity: function getCredentialsForIdentity(callback) {\n    var self = this;\n    self.cognito.getCredentialsForIdentity(function(err, data) {\n      if (!err) {\n        self.cacheId(data);\n        self.data = data;\n        self.loadCredentials(self.data, self);\n      } else {\n        self.clearIdOnNotAuthorized(err);\n      }\n      callback(err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  getCredentialsFromSTS: function getCredentialsFromSTS(callback) {\n    var self = this;\n    self.cognito.getOpenIdToken(function(err, data) {\n      if (!err) {\n        self.cacheId(data);\n        self.params.WebIdentityToken = data.Token;\n        self.webIdentityCredentials.refresh(function(webErr) {\n          if (!webErr) {\n            self.data = self.webIdentityCredentials.data;\n            self.sts.credentialsFrom(self.data, self);\n          }\n          callback(webErr);\n        });\n      } else {\n        self.clearIdOnNotAuthorized(err);\n        callback(err);\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  loadCachedId: function loadCachedId() {\n    var self = this;\n\n    // in the browser we source default IdentityId from localStorage\n    if (AWS.util.isBrowser() && !self.params.IdentityId) {\n      var id = self.getStorage('id');\n      if (id && self.params.Logins) {\n        var actualProviders = Object.keys(self.params.Logins);\n        var cachedProviders =\n          (self.getStorage('providers') || '').split(',');\n\n        // only load ID if at least one provider used this ID before\n        var intersect = cachedProviders.filter(function(n) {\n          return actualProviders.indexOf(n) !== -1;\n        });\n        if (intersect.length !== 0) {\n          self.params.IdentityId = id;\n        }\n      } else if (id) {\n        self.params.IdentityId = id;\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function() {\n    var clientConfig = this._clientConfig;\n    this.webIdentityCredentials = this.webIdentityCredentials ||\n      new AWS.WebIdentityCredentials(this.params, clientConfig);\n    if (!this.cognito) {\n      var cognitoConfig = AWS.util.merge({}, clientConfig);\n      cognitoConfig.params = this.params;\n      this.cognito = new CognitoIdentity(cognitoConfig);\n    }\n    this.sts = this.sts || new STS(clientConfig);\n  },\n\n  /**\n   * @api private\n   */\n  cacheId: function cacheId(data) {\n    this._identityId = data.IdentityId;\n    this.params.IdentityId = this._identityId;\n\n    // cache this IdentityId in browser localStorage if possible\n    if (AWS.util.isBrowser()) {\n      this.setStorage('id', data.IdentityId);\n\n      if (this.params.Logins) {\n        this.setStorage('providers', Object.keys(this.params.Logins).join(','));\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getStorage: function getStorage(key) {\n    return this.storage[this.localStorageKey[key] + this.params.IdentityPoolId + (this.params.LoginId || '')];\n  },\n\n  /**\n   * @api private\n   */\n  setStorage: function setStorage(key, val) {\n    try {\n      this.storage[this.localStorageKey[key] + this.params.IdentityPoolId + (this.params.LoginId || '')] = val;\n    } catch (_) {}\n  },\n\n  /**\n   * @api private\n   */\n  storage: (function() {\n    try {\n      var storage = AWS.util.isBrowser() && window.localStorage !== null && typeof window.localStorage === 'object' ?\n          window.localStorage : {};\n\n      // Test set/remove which would throw an error in Safari's private browsing\n      storage['aws.test-storage'] = 'foobar';\n      delete storage['aws.test-storage'];\n\n      return storage;\n    } catch (_) {\n      return {};\n    }\n  })()\n});\n","var AWS = require('./core');\nvar Api = require('./model/api');\nvar regionConfig = require('./region_config');\n\nvar inherit = AWS.util.inherit;\nvar clientCount = 0;\n\n/**\n * The service class representing an AWS service.\n *\n * @class_abstract This class is an abstract class.\n *\n * @!attribute apiVersions\n *   @return [Array<String>] the list of API versions supported by this service.\n *   @readonly\n */\nAWS.Service = inherit({\n  /**\n   * Create a new service object with a configuration object\n   *\n   * @param config [map] a map of configuration options\n   */\n  constructor: function Service(config) {\n    if (!this.loadServiceClass) {\n      throw AWS.util.error(new Error(),\n        'Service must be constructed with `new\\' operator');\n    }\n    var ServiceClass = this.loadServiceClass(config || {});\n    if (ServiceClass) {\n      var originalConfig = AWS.util.copy(config);\n      var svc = new ServiceClass(config);\n      Object.defineProperty(svc, '_originalConfig', {\n        get: function() { return originalConfig; },\n        enumerable: false,\n        configurable: true\n      });\n      svc._clientId = ++clientCount;\n      return svc;\n    }\n    this.initialize(config);\n  },\n\n  /**\n   * @api private\n   */\n  initialize: function initialize(config) {\n    var svcConfig = AWS.config[this.serviceIdentifier];\n    this.config = new AWS.Config(AWS.config);\n    if (svcConfig) this.config.update(svcConfig, true);\n    if (config) this.config.update(config, true);\n\n    this.validateService();\n    if (!this.config.endpoint) regionConfig.configureEndpoint(this);\n\n    this.config.endpoint = this.endpointFromTemplate(this.config.endpoint);\n    this.setEndpoint(this.config.endpoint);\n    //enable attaching listeners to service client\n    AWS.SequentialExecutor.call(this);\n    AWS.Service.addDefaultMonitoringListeners(this);\n    if ((this.config.clientSideMonitoring || AWS.Service._clientSideMonitoring) && this.publisher) {\n      var publisher = this.publisher;\n      this.addNamedListener('PUBLISH_API_CALL', 'apiCall', function PUBLISH_API_CALL(event) {\n        process.nextTick(function() {publisher.eventHandler(event);});\n      });\n      this.addNamedListener('PUBLISH_API_ATTEMPT', 'apiCallAttempt', function PUBLISH_API_ATTEMPT(event) {\n        process.nextTick(function() {publisher.eventHandler(event);});\n      });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateService: function validateService() {\n  },\n\n  /**\n   * @api private\n   */\n  loadServiceClass: function loadServiceClass(serviceConfig) {\n    var config = serviceConfig;\n    if (!AWS.util.isEmpty(this.api)) {\n      return null;\n    } else if (config.apiConfig) {\n      return AWS.Service.defineServiceApi(this.constructor, config.apiConfig);\n    } else if (!this.constructor.services) {\n      return null;\n    } else {\n      config = new AWS.Config(AWS.config);\n      config.update(serviceConfig, true);\n      var version = config.apiVersions[this.constructor.serviceIdentifier];\n      version = version || config.apiVersion;\n      return this.getLatestServiceClass(version);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceClass: function getLatestServiceClass(version) {\n    version = this.getLatestServiceVersion(version);\n    if (this.constructor.services[version] === null) {\n      AWS.Service.defineServiceApi(this.constructor, version);\n    }\n\n    return this.constructor.services[version];\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceVersion: function getLatestServiceVersion(version) {\n    if (!this.constructor.services || this.constructor.services.length === 0) {\n      throw new Error('No services defined on ' +\n                      this.constructor.serviceIdentifier);\n    }\n\n    if (!version) {\n      version = 'latest';\n    } else if (AWS.util.isType(version, Date)) {\n      version = AWS.util.date.iso8601(version).split('T')[0];\n    }\n\n    if (Object.hasOwnProperty(this.constructor.services, version)) {\n      return version;\n    }\n\n    var keys = Object.keys(this.constructor.services).sort();\n    var selectedVersion = null;\n    for (var i = keys.length - 1; i >= 0; i--) {\n      // versions that end in \"*\" are not available on disk and can be\n      // skipped, so do not choose these as selectedVersions\n      if (keys[i][keys[i].length - 1] !== '*') {\n        selectedVersion = keys[i];\n      }\n      if (keys[i].substr(0, 10) <= version) {\n        return selectedVersion;\n      }\n    }\n\n    throw new Error('Could not find ' + this.constructor.serviceIdentifier +\n                    ' API to satisfy version constraint `' + version + '\\'');\n  },\n\n  /**\n   * @api private\n   */\n  api: {},\n\n  /**\n   * @api private\n   */\n  defaultRetryCount: 3,\n\n  /**\n   * @api private\n   */\n  customizeRequests: function customizeRequests(callback) {\n    if (!callback) {\n      this.customRequestHandler = null;\n    } else if (typeof callback === 'function') {\n      this.customRequestHandler = callback;\n    } else {\n      throw new Error('Invalid callback type \\'' + typeof callback + '\\' provided in customizeRequests');\n    }\n  },\n\n  /**\n   * Calls an operation on a service with the given input parameters.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeRequest: function makeRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = null;\n    }\n\n    params = params || {};\n    if (this.config.params) { // copy only toplevel bound params\n      var rules = this.api.operations[operation];\n      if (rules) {\n        params = AWS.util.copy(params);\n        AWS.util.each(this.config.params, function(key, value) {\n          if (rules.input.members[key]) {\n            if (params[key] === undefined || params[key] === null) {\n              params[key] = value;\n            }\n          }\n        });\n      }\n    }\n\n    var request = new AWS.Request(this, operation, params);\n    this.addAllRequestListeners(request);\n    this.attachMonitoringEmitter(request);\n    if (callback) request.send(callback);\n    return request;\n  },\n\n  /**\n   * Calls an operation on a service with the given input parameters, without\n   * any authentication data. This method is useful for \"public\" API operations.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeUnauthenticatedRequest: function makeUnauthenticatedRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = {};\n    }\n\n    var request = this.makeRequest(operation, params).toUnauthenticated();\n    return callback ? request.send(callback) : request;\n  },\n\n  /**\n   * Waits for a given state\n   *\n   * @param state [String] the state on the service to wait for\n   * @param params [map] a map of parameters to pass with each request\n   * @option params $waiter [map] a map of configuration options for the waiter\n   * @option params $waiter.delay [Number] The number of seconds to wait between\n   *                                       requests\n   * @option params $waiter.maxAttempts [Number] The maximum number of requests\n   *                                             to send while waiting\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  waitFor: function waitFor(state, params, callback) {\n    var waiter = new AWS.ResourceWaiter(this, state);\n    return waiter.wait(params, callback);\n  },\n\n  /**\n   * @api private\n   */\n  addAllRequestListeners: function addAllRequestListeners(request) {\n    var list = [AWS.events, AWS.EventListeners.Core, this.serviceInterface(),\n                AWS.EventListeners.CorePost];\n    for (var i = 0; i < list.length; i++) {\n      if (list[i]) request.addListeners(list[i]);\n    }\n\n    // disable parameter validation\n    if (!this.config.paramValidation) {\n      request.removeListener('validate',\n        AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    }\n\n    if (this.config.logger) { // add logging events\n      request.addListeners(AWS.EventListeners.Logger);\n    }\n\n    this.setupRequestListeners(request);\n    // call prototype's customRequestHandler\n    if (typeof this.constructor.prototype.customRequestHandler === 'function') {\n      this.constructor.prototype.customRequestHandler(request);\n    }\n    // call instance's customRequestHandler\n    if (Object.prototype.hasOwnProperty.call(this, 'customRequestHandler') && typeof this.customRequestHandler === 'function') {\n      this.customRequestHandler(request);\n    }\n  },\n\n  /**\n   * Event recording metrics for a whole API call.\n   * @returns {object} a subset of api call metrics\n   * @api private\n   */\n  apiCallEvent: function apiCallEvent(request) {\n    var api = request.service.api.operations[request.operation];\n    var monitoringEvent = {\n      Type: 'ApiCall',\n      Api: api ? api.name : request.operation,\n      Version: 1,\n      Service: request.service.api.serviceId || request.service.api.endpointPrefix,\n      Region: request.httpRequest.region,\n      MaxRetriesExceeded: 0,\n      UserAgent: request.httpRequest.getUserAgent(),\n    };\n    var response = request.response;\n    if (response.httpResponse.statusCode) {\n      monitoringEvent.FinalHttpStatusCode = response.httpResponse.statusCode;\n    }\n    if (response.error) {\n      var error = response.error;\n      var statusCode = response.httpResponse.statusCode;\n      if (statusCode > 299) {\n        if (error.code) monitoringEvent.FinalAwsException = error.code;\n        if (error.message) monitoringEvent.FinalAwsExceptionMessage = error.message;\n      } else {\n        if (error.code || error.name) monitoringEvent.FinalSdkException = error.code || error.name;\n        if (error.message) monitoringEvent.FinalSdkExceptionMessage = error.message;\n      }\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Event recording metrics for an API call attempt.\n   * @returns {object} a subset of api call attempt metrics\n   * @api private\n   */\n  apiAttemptEvent: function apiAttemptEvent(request) {\n    var api = request.service.api.operations[request.operation];\n    var monitoringEvent = {\n      Type: 'ApiCallAttempt',\n      Api: api ? api.name : request.operation,\n      Version: 1,\n      Service: request.service.api.serviceId || request.service.api.endpointPrefix,\n      Fqdn: request.httpRequest.endpoint.hostname,\n      UserAgent: request.httpRequest.getUserAgent(),\n    };\n    var response = request.response;\n    if (response.httpResponse.statusCode) {\n      monitoringEvent.HttpStatusCode = response.httpResponse.statusCode;\n    }\n    if (\n      !request._unAuthenticated &&\n      request.service.config.credentials &&\n      request.service.config.credentials.accessKeyId\n    ) {\n      monitoringEvent.AccessKey = request.service.config.credentials.accessKeyId;\n    }\n    if (!response.httpResponse.headers) return monitoringEvent;\n    if (request.httpRequest.headers['x-amz-security-token']) {\n      monitoringEvent.SessionToken = request.httpRequest.headers['x-amz-security-token'];\n    }\n    if (response.httpResponse.headers['x-amzn-requestid']) {\n      monitoringEvent.XAmznRequestId = response.httpResponse.headers['x-amzn-requestid'];\n    }\n    if (response.httpResponse.headers['x-amz-request-id']) {\n      monitoringEvent.XAmzRequestId = response.httpResponse.headers['x-amz-request-id'];\n    }\n    if (response.httpResponse.headers['x-amz-id-2']) {\n      monitoringEvent.XAmzId2 = response.httpResponse.headers['x-amz-id-2'];\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Add metrics of failed request.\n   * @api private\n   */\n  attemptFailEvent: function attemptFailEvent(request) {\n    var monitoringEvent = this.apiAttemptEvent(request);\n    var response = request.response;\n    var error = response.error;\n    if (response.httpResponse.statusCode > 299 ) {\n      if (error.code) monitoringEvent.AwsException = error.code;\n      if (error.message) monitoringEvent.AwsExceptionMessage = error.message;\n    } else {\n      if (error.code || error.name) monitoringEvent.SdkException = error.code || error.name;\n      if (error.message) monitoringEvent.SdkExceptionMessage = error.message;\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Attach listeners to request object to fetch metrics of each request\n   * and emit data object through \\'ApiCall\\' and \\'ApiCallAttempt\\' events.\n   * @api private\n   */\n  attachMonitoringEmitter: function attachMonitoringEmitter(request) {\n    var attemptTimestamp; //timestamp marking the beginning of a request attempt\n    var attemptStartRealTime; //Start time of request attempt. Used to calculating attemptLatency\n    var attemptLatency; //latency from request sent out to http response reaching SDK\n    var callStartRealTime; //Start time of API call. Used to calculating API call latency\n    var attemptCount = 0; //request.retryCount is not reliable here\n    var region; //region cache region for each attempt since it can be updated in plase (e.g. s3)\n    var callTimestamp; //timestamp when the request is created\n    var self = this;\n    var addToHead = true;\n\n    request.on('validate', function () {\n      callStartRealTime = AWS.util.realClock.now();\n      callTimestamp = Date.now();\n    }, addToHead);\n    request.on('sign', function () {\n      attemptStartRealTime = AWS.util.realClock.now();\n      attemptTimestamp = Date.now();\n      region = request.httpRequest.region;\n      attemptCount++;\n    }, addToHead);\n    request.on('validateResponse', function() {\n      attemptLatency = Math.round(AWS.util.realClock.now() - attemptStartRealTime);\n    });\n    request.addNamedListener('API_CALL_ATTEMPT', 'success', function API_CALL_ATTEMPT() {\n      var apiAttemptEvent = self.apiAttemptEvent(request);\n      apiAttemptEvent.Timestamp = attemptTimestamp;\n      apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0;\n      apiAttemptEvent.Region = region;\n      self.emit('apiCallAttempt', [apiAttemptEvent]);\n    });\n    request.addNamedListener('API_CALL_ATTEMPT_RETRY', 'retry', function API_CALL_ATTEMPT_RETRY() {\n      var apiAttemptEvent = self.attemptFailEvent(request);\n      apiAttemptEvent.Timestamp = attemptTimestamp;\n      //attemptLatency may not be available if fail before response\n      attemptLatency = attemptLatency ||\n        Math.round(AWS.util.realClock.now() - attemptStartRealTime);\n      apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0;\n      apiAttemptEvent.Region = region;\n      self.emit('apiCallAttempt', [apiAttemptEvent]);\n    });\n    request.addNamedListener('API_CALL', 'complete', function API_CALL() {\n      var apiCallEvent = self.apiCallEvent(request);\n      apiCallEvent.AttemptCount = attemptCount;\n      if (apiCallEvent.AttemptCount <= 0) return;\n      apiCallEvent.Timestamp = callTimestamp;\n      var latency = Math.round(AWS.util.realClock.now() - callStartRealTime);\n      apiCallEvent.Latency = latency >= 0 ? latency : 0;\n      var response = request.response;\n      if (\n        response.error &&\n        response.error.retryable &&\n        typeof response.retryCount === 'number' &&\n        typeof response.maxRetries === 'number' &&\n        (response.retryCount >= response.maxRetries)\n      ) {\n        apiCallEvent.MaxRetriesExceeded = 1;\n      }\n      self.emit('apiCall', [apiCallEvent]);\n    });\n  },\n\n  /**\n   * Override this method to setup any custom request listeners for each\n   * new request to the service.\n   *\n   * @method_abstract This is an abstract method.\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n  },\n\n  /**\n   * Gets the signing name for a given request\n   * @api private\n   */\n  getSigningName: function getSigningName() {\n    return this.api.signingName || this.api.endpointPrefix;\n  },\n\n  /**\n   * Gets the signer class for a given request\n   * @api private\n   */\n  getSignerClass: function getSignerClass(request) {\n    var version;\n    // get operation authtype if present\n    var operation = null;\n    var authtype = '';\n    if (request) {\n      var operations = request.service.api.operations || {};\n      operation = operations[request.operation] || null;\n      authtype = operation ? operation.authtype : '';\n    }\n    if (this.config.signatureVersion) {\n      version = this.config.signatureVersion;\n    } else if (authtype === 'v4' || authtype === 'v4-unsigned-body') {\n      version = 'v4';\n    } else {\n      version = this.api.signatureVersion;\n    }\n    return AWS.Signers.RequestSigner.getVersion(version);\n  },\n\n  /**\n   * @api private\n   */\n  serviceInterface: function serviceInterface() {\n    switch (this.api.protocol) {\n      case 'ec2': return AWS.EventListeners.Query;\n      case 'query': return AWS.EventListeners.Query;\n      case 'json': return AWS.EventListeners.Json;\n      case 'rest-json': return AWS.EventListeners.RestJson;\n      case 'rest-xml': return AWS.EventListeners.RestXml;\n    }\n    if (this.api.protocol) {\n      throw new Error('Invalid service `protocol\\' ' +\n        this.api.protocol + ' in API config');\n    }\n  },\n\n  /**\n   * @api private\n   */\n  successfulResponse: function successfulResponse(resp) {\n    return resp.httpResponse.statusCode < 300;\n  },\n\n  /**\n   * How many times a failed request should be retried before giving up.\n   * the defaultRetryCount can be overriden by service classes.\n   *\n   * @api private\n   */\n  numRetries: function numRetries() {\n    if (this.config.maxRetries !== undefined) {\n      return this.config.maxRetries;\n    } else {\n      return this.defaultRetryCount;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  retryDelays: function retryDelays(retryCount, err) {\n    return AWS.util.calculateRetryDelay(retryCount, this.config.retryDelayOptions, err);\n  },\n\n  /**\n   * @api private\n   */\n  retryableError: function retryableError(error) {\n    if (this.timeoutError(error)) return true;\n    if (this.networkingError(error)) return true;\n    if (this.expiredCredentialsError(error)) return true;\n    if (this.throttledError(error)) return true;\n    if (error.statusCode >= 500) return true;\n    return false;\n  },\n\n  /**\n   * @api private\n   */\n  networkingError: function networkingError(error) {\n    return error.code === 'NetworkingError';\n  },\n\n  /**\n   * @api private\n   */\n  timeoutError: function timeoutError(error) {\n    return error.code === 'TimeoutError';\n  },\n\n  /**\n   * @api private\n   */\n  expiredCredentialsError: function expiredCredentialsError(error) {\n    // TODO : this only handles *one* of the expired credential codes\n    return (error.code === 'ExpiredTokenException');\n  },\n\n  /**\n   * @api private\n   */\n  clockSkewError: function clockSkewError(error) {\n    switch (error.code) {\n      case 'RequestTimeTooSkewed':\n      case 'RequestExpired':\n      case 'InvalidSignatureException':\n      case 'SignatureDoesNotMatch':\n      case 'AuthFailure':\n      case 'RequestInTheFuture':\n        return true;\n      default: return false;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getSkewCorrectedDate: function getSkewCorrectedDate() {\n    return new Date(Date.now() + this.config.systemClockOffset);\n  },\n\n  /**\n   * @api private\n   */\n  applyClockOffset: function applyClockOffset(newServerTime) {\n    if (newServerTime) {\n      this.config.systemClockOffset = newServerTime - Date.now();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  isClockSkewed: function isClockSkewed(newServerTime) {\n    if (newServerTime) {\n      return Math.abs(this.getSkewCorrectedDate().getTime() - newServerTime) >= 300000;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  throttledError: function throttledError(error) {\n    // this logic varies between services\n    if (error.statusCode === 429) return true;\n    switch (error.code) {\n      case 'ProvisionedThroughputExceededException':\n      case 'Throttling':\n      case 'ThrottlingException':\n      case 'RequestLimitExceeded':\n      case 'RequestThrottled':\n      case 'RequestThrottledException':\n      case 'TooManyRequestsException':\n      case 'TransactionInProgressException': //dynamodb\n      case 'EC2ThrottledException':\n        return true;\n      default:\n        return false;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  endpointFromTemplate: function endpointFromTemplate(endpoint) {\n    if (typeof endpoint !== 'string') return endpoint;\n\n    var e = endpoint;\n    e = e.replace(/\\{service\\}/g, this.api.endpointPrefix);\n    e = e.replace(/\\{region\\}/g, this.config.region);\n    e = e.replace(/\\{scheme\\}/g, this.config.sslEnabled ? 'https' : 'http');\n    return e;\n  },\n\n  /**\n   * @api private\n   */\n  setEndpoint: function setEndpoint(endpoint) {\n    this.endpoint = new AWS.Endpoint(endpoint, this.config);\n  },\n\n  /**\n   * @api private\n   */\n  paginationConfig: function paginationConfig(operation, throwException) {\n    var paginator = this.api.operations[operation].paginator;\n    if (!paginator) {\n      if (throwException) {\n        var e = new Error();\n        throw AWS.util.error(e, 'No pagination configuration for ' + operation);\n      }\n      return null;\n    }\n\n    return paginator;\n  }\n});\n\nAWS.util.update(AWS.Service, {\n\n  /**\n   * Adds one method for each operation described in the api configuration\n   *\n   * @api private\n   */\n  defineMethods: function defineMethods(svc) {\n    AWS.util.each(svc.prototype.api.operations, function iterator(method) {\n      if (svc.prototype[method]) return;\n      var operation = svc.prototype.api.operations[method];\n      if (operation.authtype === 'none') {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeUnauthenticatedRequest(method, params, callback);\n        };\n      } else {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeRequest(method, params, callback);\n        };\n      }\n    });\n  },\n\n  /**\n   * Defines a new Service class using a service identifier and list of versions\n   * including an optional set of features (functions) to apply to the class\n   * prototype.\n   *\n   * @param serviceIdentifier [String] the identifier for the service\n   * @param versions [Array<String>] a list of versions that work with this\n   *   service\n   * @param features [Object] an object to attach to the prototype\n   * @return [Class<Service>] the service class defined by this function.\n   */\n  defineService: function defineService(serviceIdentifier, versions, features) {\n    AWS.Service._serviceMap[serviceIdentifier] = true;\n    if (!Array.isArray(versions)) {\n      features = versions;\n      versions = [];\n    }\n\n    var svc = inherit(AWS.Service, features || {});\n\n    if (typeof serviceIdentifier === 'string') {\n      AWS.Service.addVersions(svc, versions);\n\n      var identifier = svc.serviceIdentifier || serviceIdentifier;\n      svc.serviceIdentifier = identifier;\n    } else { // defineService called with an API\n      svc.prototype.api = serviceIdentifier;\n      AWS.Service.defineMethods(svc);\n    }\n    AWS.SequentialExecutor.call(this.prototype);\n    //util.clientSideMonitoring is only available in node\n    if (!this.prototype.publisher && AWS.util.clientSideMonitoring) {\n      var Publisher = AWS.util.clientSideMonitoring.Publisher;\n      var configProvider = AWS.util.clientSideMonitoring.configProvider;\n      var publisherConfig = configProvider();\n      this.prototype.publisher = new Publisher(publisherConfig);\n      if (publisherConfig.enabled) {\n        //if csm is enabled in environment, SDK should send all metrics\n        AWS.Service._clientSideMonitoring = true;\n      }\n    }\n    AWS.SequentialExecutor.call(svc.prototype);\n    AWS.Service.addDefaultMonitoringListeners(svc.prototype);\n    return svc;\n  },\n\n  /**\n   * @api private\n   */\n  addVersions: function addVersions(svc, versions) {\n    if (!Array.isArray(versions)) versions = [versions];\n\n    svc.services = svc.services || {};\n    for (var i = 0; i < versions.length; i++) {\n      if (svc.services[versions[i]] === undefined) {\n        svc.services[versions[i]] = null;\n      }\n    }\n\n    svc.apiVersions = Object.keys(svc.services).sort();\n  },\n\n  /**\n   * @api private\n   */\n  defineServiceApi: function defineServiceApi(superclass, version, apiConfig) {\n    var svc = inherit(superclass, {\n      serviceIdentifier: superclass.serviceIdentifier\n    });\n\n    function setApi(api) {\n      if (api.isApi) {\n        svc.prototype.api = api;\n      } else {\n        svc.prototype.api = new Api(api, {\n          serviceIdentifier: superclass.serviceIdentifier\n        });\n      }\n    }\n\n    if (typeof version === 'string') {\n      if (apiConfig) {\n        setApi(apiConfig);\n      } else {\n        try {\n          setApi(AWS.apiLoader(superclass.serviceIdentifier, version));\n        } catch (err) {\n          throw AWS.util.error(err, {\n            message: 'Could not find API configuration ' +\n              superclass.serviceIdentifier + '-' + version\n          });\n        }\n      }\n      if (!Object.prototype.hasOwnProperty.call(superclass.services, version)) {\n        superclass.apiVersions = superclass.apiVersions.concat(version).sort();\n      }\n      superclass.services[version] = svc;\n    } else {\n      setApi(version);\n    }\n\n    AWS.Service.defineMethods(svc);\n    return svc;\n  },\n\n  /**\n   * @api private\n   */\n  hasService: function(identifier) {\n    return Object.prototype.hasOwnProperty.call(AWS.Service._serviceMap, identifier);\n  },\n\n  /**\n   * @param attachOn attach default monitoring listeners to object\n   *\n   * Each monitoring event should be emitted from service client to service constructor prototype and then\n   * to global service prototype like bubbling up. These default monitoring events listener will transfer\n   * the monitoring events to the upper layer.\n   * @api private\n   */\n  addDefaultMonitoringListeners: function addDefaultMonitoringListeners(attachOn) {\n    attachOn.addNamedListener('MONITOR_EVENTS_BUBBLE', 'apiCallAttempt', function EVENTS_BUBBLE(event) {\n      var baseClass = Object.getPrototypeOf(attachOn);\n      if (baseClass._events) baseClass.emit('apiCallAttempt', [event]);\n    });\n    attachOn.addNamedListener('CALL_EVENTS_BUBBLE', 'apiCall', function CALL_EVENTS_BUBBLE(event) {\n      var baseClass = Object.getPrototypeOf(attachOn);\n      if (baseClass._events) baseClass.emit('apiCall', [event]);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  _serviceMap: {}\n});\n\nAWS.util.mixin(AWS.Service, AWS.SequentialExecutor);\n\n/**\n * @api private\n */\nmodule.exports = AWS.Service;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cognitoidentityserviceprovider'] = {};\nAWS.CognitoIdentityServiceProvider = Service.defineService('cognitoidentityserviceprovider', ['2016-04-18']);\nObject.defineProperty(apiLoader.services['cognitoidentityserviceprovider'], '2016-04-18', {\n  get: function get() {\n    var model = require('../apis/cognito-idp-2016-04-18.min.json');\n    model.paginators = require('../apis/cognito-idp-2016-04-18.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CognitoIdentityServiceProvider;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['rds'] = {};\nAWS.RDS = Service.defineService('rds', ['2013-01-10', '2013-02-12', '2013-09-09', '2014-09-01', '2014-09-01*', '2014-10-31']);\nrequire('../lib/services/rds');\nObject.defineProperty(apiLoader.services['rds'], '2013-01-10', {\n  get: function get() {\n    var model = require('../apis/rds-2013-01-10.min.json');\n    model.paginators = require('../apis/rds-2013-01-10.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['rds'], '2013-02-12', {\n  get: function get() {\n    var model = require('../apis/rds-2013-02-12.min.json');\n    model.paginators = require('../apis/rds-2013-02-12.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['rds'], '2013-09-09', {\n  get: function get() {\n    var model = require('../apis/rds-2013-09-09.min.json');\n    model.paginators = require('../apis/rds-2013-09-09.paginators.json').pagination;\n    model.waiters = require('../apis/rds-2013-09-09.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['rds'], '2014-09-01', {\n  get: function get() {\n    var model = require('../apis/rds-2014-09-01.min.json');\n    model.paginators = require('../apis/rds-2014-09-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['rds'], '2014-10-31', {\n  get: function get() {\n    var model = require('../apis/rds-2014-10-31.min.json');\n    model.paginators = require('../apis/rds-2014-10-31.paginators.json').pagination;\n    model.waiters = require('../apis/rds-2014-10-31.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.RDS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cognitoidentity'] = {};\nAWS.CognitoIdentity = Service.defineService('cognitoidentity', ['2014-06-30']);\nrequire('../lib/services/cognitoidentity');\nObject.defineProperty(apiLoader.services['cognitoidentity'], '2014-06-30', {\n  get: function get() {\n    var model = require('../apis/cognito-identity-2014-06-30.min.json');\n    model.paginators = require('../apis/cognito-identity-2014-06-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CognitoIdentity;\n","var util =  require('../util');\nvar AWS = require('../core');\n\n/**\n * Prepend prefix defined by API model to endpoint that's already\n * constructed. This feature does not apply to operations using\n * endpoint discovery and can be disabled.\n * @api private\n */\nfunction populateHostPrefix(request)  {\n  var enabled = request.service.config.hostPrefixEnabled;\n  if (!enabled) return request;\n  var operationModel = request.service.api.operations[request.operation];\n  //don't marshal host prefix when operation has endpoint discovery traits\n  if (hasEndpointDiscover(request)) return request;\n  if (operationModel.endpoint && operationModel.endpoint.hostPrefix) {\n    var hostPrefixNotation = operationModel.endpoint.hostPrefix;\n    var hostPrefix = expandHostPrefix(hostPrefixNotation, request.params, operationModel.input);\n    prependEndpointPrefix(request.httpRequest.endpoint, hostPrefix);\n    validateHostname(request.httpRequest.endpoint.hostname);\n  }\n  return request;\n}\n\n/**\n * @api private\n */\nfunction hasEndpointDiscover(request) {\n  var api = request.service.api;\n  var operationModel = api.operations[request.operation];\n  var isEndpointOperation = api.endpointOperation && (api.endpointOperation === util.string.lowerFirst(operationModel.name));\n  return (operationModel.endpointDiscoveryRequired !== 'NULL' || isEndpointOperation === true);\n}\n\n/**\n * @api private\n */\nfunction expandHostPrefix(hostPrefixNotation, params, shape) {\n  util.each(shape.members, function(name, member) {\n    if (member.hostLabel === true) {\n      if (typeof params[name] !== 'string' || params[name] === '') {\n        throw util.error(new Error(), {\n          message: 'Parameter ' + name + ' should be a non-empty string.',\n          code: 'InvalidParameter'\n        });\n      }\n      var regex = new RegExp('\\\\{' + name + '\\\\}', 'g');\n      hostPrefixNotation = hostPrefixNotation.replace(regex, params[name]);\n    }\n  });\n  return hostPrefixNotation;\n}\n\n/**\n * @api private\n */\nfunction prependEndpointPrefix(endpoint, prefix) {\n  if (endpoint.host) {\n    endpoint.host = prefix + endpoint.host;\n  }\n  if (endpoint.hostname) {\n    endpoint.hostname = prefix + endpoint.hostname;\n  }\n}\n\n/**\n * @api private\n */\nfunction validateHostname(hostname) {\n  var labels = hostname.split('.');\n  //Reference: https://tools.ietf.org/html/rfc1123#section-2\n  var hostPattern = /^[a-zA-Z0-9]{1}$|^[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9]$/;\n  util.arrayEach(labels, function(label) {\n    if (!label.length || label.length < 1 || label.length > 63) {\n      throw util.error(new Error(), {\n        code: 'ValidationError',\n        message: 'Hostname label length should be between 1 to 63 characters, inclusive.'\n      });\n    }\n    if (!hostPattern.test(label)) {\n      throw AWS.util.error(new Error(),\n        {code: 'ValidationError', message: label + ' is not hostname compatible.'});\n    }\n  });\n}\n\nmodule.exports = {\n  populateHostPrefix: populateHostPrefix\n};\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['redshift'] = {};\nAWS.Redshift = Service.defineService('redshift', ['2012-12-01']);\nObject.defineProperty(apiLoader.services['redshift'], '2012-12-01', {\n  get: function get() {\n    var model = require('../apis/redshift-2012-12-01.min.json');\n    model.paginators = require('../apis/redshift-2012-12-01.paginators.json').pagination;\n    model.waiters = require('../apis/redshift-2012-12-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Redshift;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['lambda'] = {};\nAWS.Lambda = Service.defineService('lambda', ['2014-11-11', '2015-03-31']);\nrequire('../lib/services/lambda');\nObject.defineProperty(apiLoader.services['lambda'], '2014-11-11', {\n  get: function get() {\n    var model = require('../apis/lambda-2014-11-11.min.json');\n    model.paginators = require('../apis/lambda-2014-11-11.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['lambda'], '2015-03-31', {\n  get: function get() {\n    var model = require('../apis/lambda-2015-03-31.min.json');\n    model.paginators = require('../apis/lambda-2015-03-31.paginators.json').pagination;\n    model.waiters = require('../apis/lambda-2015-03-31.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Lambda;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['secretsmanager'] = {};\nAWS.SecretsManager = Service.defineService('secretsmanager', ['2017-10-17']);\nObject.defineProperty(apiLoader.services['secretsmanager'], '2017-10-17', {\n  get: function get() {\n    var model = require('../apis/secretsmanager-2017-10-17.min.json');\n    model.paginators = require('../apis/secretsmanager-2017-10-17.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SecretsManager;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['ssm'] = {};\nAWS.SSM = Service.defineService('ssm', ['2014-11-06']);\nObject.defineProperty(apiLoader.services['ssm'], '2014-11-06', {\n  get: function get() {\n    var model = require('../apis/ssm-2014-11-06.min.json');\n    model.paginators = require('../apis/ssm-2014-11-06.paginators.json').pagination;\n    model.waiters = require('../apis/ssm-2014-11-06.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SSM;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['polly'] = {};\nAWS.Polly = Service.defineService('polly', ['2016-06-10']);\nrequire('../lib/services/polly');\nObject.defineProperty(apiLoader.services['polly'], '2016-06-10', {\n  get: function get() {\n    var model = require('../apis/polly-2016-06-10.min.json');\n    model.paginators = require('../apis/polly-2016-06-10.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Polly;\n","var AWS = require('../core');\n\nAWS.util.update(AWS.SQS.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.addListener('build', this.buildEndpoint);\n\n    if (request.service.config.computeChecksums) {\n      if (request.operation === 'sendMessage') {\n        request.addListener('extractData', this.verifySendMessageChecksum);\n      } else if (request.operation === 'sendMessageBatch') {\n        request.addListener('extractData', this.verifySendMessageBatchChecksum);\n      } else if (request.operation === 'receiveMessage') {\n        request.addListener('extractData', this.verifyReceiveMessageChecksum);\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  verifySendMessageChecksum: function verifySendMessageChecksum(response) {\n    if (!response.data) return;\n\n    var md5 = response.data.MD5OfMessageBody;\n    var body = this.params.MessageBody;\n    var calculatedMd5 = this.service.calculateChecksum(body);\n    if (calculatedMd5 !== md5) {\n      var msg = 'Got \"' + response.data.MD5OfMessageBody +\n        '\", expecting \"' + calculatedMd5 + '\".';\n      this.service.throwInvalidChecksumError(response,\n        [response.data.MessageId], msg);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  verifySendMessageBatchChecksum: function verifySendMessageBatchChecksum(response) {\n    if (!response.data) return;\n\n    var service = this.service;\n    var entries = {};\n    var errors = [];\n    var messageIds = [];\n    AWS.util.arrayEach(response.data.Successful, function (entry) {\n      entries[entry.Id] = entry;\n    });\n    AWS.util.arrayEach(this.params.Entries, function (entry) {\n      if (entries[entry.Id]) {\n        var md5 = entries[entry.Id].MD5OfMessageBody;\n        var body = entry.MessageBody;\n        if (!service.isChecksumValid(md5, body)) {\n          errors.push(entry.Id);\n          messageIds.push(entries[entry.Id].MessageId);\n        }\n      }\n    });\n\n    if (errors.length > 0) {\n      service.throwInvalidChecksumError(response, messageIds,\n        'Invalid messages: ' + errors.join(', '));\n    }\n  },\n\n  /**\n   * @api private\n   */\n  verifyReceiveMessageChecksum: function verifyReceiveMessageChecksum(response) {\n    if (!response.data) return;\n\n    var service = this.service;\n    var messageIds = [];\n    AWS.util.arrayEach(response.data.Messages, function(message) {\n      var md5 = message.MD5OfBody;\n      var body = message.Body;\n      if (!service.isChecksumValid(md5, body)) {\n        messageIds.push(message.MessageId);\n      }\n    });\n\n    if (messageIds.length > 0) {\n      service.throwInvalidChecksumError(response, messageIds,\n        'Invalid messages: ' + messageIds.join(', '));\n    }\n  },\n\n  /**\n   * @api private\n   */\n  throwInvalidChecksumError: function throwInvalidChecksumError(response, ids, message) {\n    response.error = AWS.util.error(new Error(), {\n      retryable: true,\n      code: 'InvalidChecksum',\n      messageIds: ids,\n      message: response.request.operation +\n               ' returned an invalid MD5 response. ' + message\n    });\n  },\n\n  /**\n   * @api private\n   */\n  isChecksumValid: function isChecksumValid(checksum, data) {\n    return this.calculateChecksum(data) === checksum;\n  },\n\n  /**\n   * @api private\n   */\n  calculateChecksum: function calculateChecksum(data) {\n    return AWS.util.crypto.md5(data, 'hex');\n  },\n\n  /**\n   * @api private\n   */\n  buildEndpoint: function buildEndpoint(request) {\n    var url = request.httpRequest.params.QueueUrl;\n    if (url) {\n      request.httpRequest.endpoint = new AWS.Endpoint(url);\n\n      // signature version 4 requires the region name to be set,\n      // sqs queue urls contain the region name\n      var matches = request.httpRequest.endpoint.host.match(/^sqs\\.(.+?)\\./);\n      if (matches) request.httpRequest.region = matches[1];\n    }\n  }\n});\n","var util = require('./util');\n\n// browser specific modules\nutil.crypto.lib = require('./browserCryptoLib');\nutil.Buffer = require('buffer/').Buffer;\nutil.url = require('url/');\nutil.querystring = require('querystring/');\nutil.realClock = require('./realclock/browserClock');\nutil.environment = 'js';\nutil.createEventStream = require('./event-stream/buffered-create-event-stream').createEventStream;\nutil.isBrowser = function() { return true; };\nutil.isNode = function() { return false; };\n\nvar AWS = require('./core');\n\n/**\n * @api private\n */\nmodule.exports = AWS;\n\nrequire('./credentials');\nrequire('./credentials/credential_provider_chain');\nrequire('./credentials/temporary_credentials');\nrequire('./credentials/chainable_temporary_credentials');\nrequire('./credentials/web_identity_credentials');\nrequire('./credentials/cognito_identity_credentials');\nrequire('./credentials/saml_credentials');\n\n// Load the DOMParser XML parser\nAWS.XML.Parser = require('./xml/browser_parser');\n\n// Load the XHR HttpClient\nrequire('./http/xhr');\n\nif (typeof process === 'undefined') {\n  var process = {\n    browser: true\n  };\n}\n","var util = require('../core').util;\nvar toBuffer = util.buffer.toBuffer;\n\n// All prelude components are unsigned, 32-bit integers\nvar PRELUDE_MEMBER_LENGTH = 4;\n// The prelude consists of two components\nvar PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;\n// Checksums are always CRC32 hashes.\nvar CHECKSUM_LENGTH = 4;\n// Messages must include a full prelude, a prelude checksum, and a message checksum\nvar MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;\n\n/**\n * @api private\n *\n * @param {Buffer} message\n */\nfunction splitMessage(message) {\n    if (!util.Buffer.isBuffer(message)) message = toBuffer(message);\n\n    if (message.length < MINIMUM_MESSAGE_LENGTH) {\n        throw new Error('Provided message too short to accommodate event stream message overhead');\n    }\n\n    if (message.length !== message.readUInt32BE(0)) {\n        throw new Error('Reported message length does not match received message length');\n    }\n\n    var expectedPreludeChecksum = message.readUInt32BE(PRELUDE_LENGTH);\n\n    if (\n        expectedPreludeChecksum !== util.crypto.crc32(\n            message.slice(0, PRELUDE_LENGTH)\n        )\n    ) {\n        throw new Error(\n            'The prelude checksum specified in the message (' +\n            expectedPreludeChecksum +\n            ') does not match the calculated CRC32 checksum.'\n        );\n    }\n\n    var expectedMessageChecksum = message.readUInt32BE(message.length - CHECKSUM_LENGTH);\n\n    if (\n        expectedMessageChecksum !== util.crypto.crc32(\n            message.slice(0, message.length - CHECKSUM_LENGTH)\n        )\n    ) {\n        throw new Error(\n            'The message checksum did not match the expected value of ' +\n                expectedMessageChecksum\n        );\n    }\n\n    var headersStart = PRELUDE_LENGTH + CHECKSUM_LENGTH;\n    var headersEnd = headersStart + message.readUInt32BE(PRELUDE_MEMBER_LENGTH);\n\n    return {\n        headers: message.slice(headersStart, headersEnd),\n        body: message.slice(headersEnd, message.length - CHECKSUM_LENGTH),\n    };\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    splitMessage: splitMessage\n};\n","/**\n * Escapes characters that can not be in an XML attribute.\n */\nfunction escapeAttribute(value) {\n    return value.replace(/&/g, '&amp;').replace(/'/g, '&apos;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    escapeAttribute: escapeAttribute\n};\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['servicecatalog'] = {};\nAWS.ServiceCatalog = Service.defineService('servicecatalog', ['2015-12-10']);\nObject.defineProperty(apiLoader.services['servicecatalog'], '2015-12-10', {\n  get: function get() {\n    var model = require('../apis/servicecatalog-2015-12-10.min.json');\n    model.paginators = require('../apis/servicecatalog-2015-12-10.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ServiceCatalog;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['personalizeevents'] = {};\nAWS.PersonalizeEvents = Service.defineService('personalizeevents', ['2018-03-22']);\nObject.defineProperty(apiLoader.services['personalizeevents'], '2018-03-22', {\n  get: function get() {\n    var model = require('../apis/personalize-events-2018-03-22.min.json');\n    model.paginators = require('../apis/personalize-events-2018-03-22.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.PersonalizeEvents;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['dynamodb'] = {};\nAWS.DynamoDB = Service.defineService('dynamodb', ['2011-12-05', '2012-08-10']);\nrequire('../lib/services/dynamodb');\nObject.defineProperty(apiLoader.services['dynamodb'], '2011-12-05', {\n  get: function get() {\n    var model = require('../apis/dynamodb-2011-12-05.min.json');\n    model.paginators = require('../apis/dynamodb-2011-12-05.paginators.json').pagination;\n    model.waiters = require('../apis/dynamodb-2011-12-05.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(apiLoader.services['dynamodb'], '2012-08-10', {\n  get: function get() {\n    var model = require('../apis/dynamodb-2012-08-10.min.json');\n    model.paginators = require('../apis/dynamodb-2012-08-10.paginators.json').pagination;\n    model.waiters = require('../apis/dynamodb-2012-08-10.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.DynamoDB;\n","var Collection = require('./collection');\n\nvar util = require('../util');\n\nfunction property(obj, name, value) {\n  if (value !== null && value !== undefined) {\n    util.property.apply(this, arguments);\n  }\n}\n\nfunction memoizedProperty(obj, name) {\n  if (!obj.constructor.prototype[name]) {\n    util.memoizedProperty.apply(this, arguments);\n  }\n}\n\nfunction Shape(shape, options, memberName) {\n  options = options || {};\n\n  property(this, 'shape', shape.shape);\n  property(this, 'api', options.api, false);\n  property(this, 'type', shape.type);\n  property(this, 'enum', shape.enum);\n  property(this, 'min', shape.min);\n  property(this, 'max', shape.max);\n  property(this, 'pattern', shape.pattern);\n  property(this, 'location', shape.location || this.location || 'body');\n  property(this, 'name', this.name || shape.xmlName || shape.queryName ||\n    shape.locationName || memberName);\n  property(this, 'isStreaming', shape.streaming || this.isStreaming || false);\n  property(this, 'requiresLength', shape.requiresLength, false);\n  property(this, 'isComposite', shape.isComposite || false);\n  property(this, 'isShape', true, false);\n  property(this, 'isQueryName', Boolean(shape.queryName), false);\n  property(this, 'isLocationName', Boolean(shape.locationName), false);\n  property(this, 'isIdempotent', shape.idempotencyToken === true);\n  property(this, 'isJsonValue', shape.jsonvalue === true);\n  property(this, 'isSensitive', shape.sensitive === true || shape.prototype && shape.prototype.sensitive === true);\n  property(this, 'isEventStream', Boolean(shape.eventstream), false);\n  property(this, 'isEvent', Boolean(shape.event), false);\n  property(this, 'isEventPayload', Boolean(shape.eventpayload), false);\n  property(this, 'isEventHeader', Boolean(shape.eventheader), false);\n  property(this, 'isTimestampFormatSet', Boolean(shape.timestampFormat) || shape.prototype && shape.prototype.isTimestampFormatSet === true, false);\n  property(this, 'endpointDiscoveryId', Boolean(shape.endpointdiscoveryid), false);\n  property(this, 'hostLabel', Boolean(shape.hostLabel), false);\n\n  if (options.documentation) {\n    property(this, 'documentation', shape.documentation);\n    property(this, 'documentationUrl', shape.documentationUrl);\n  }\n\n  if (shape.xmlAttribute) {\n    property(this, 'isXmlAttribute', shape.xmlAttribute || false);\n  }\n\n  // type conversion and parsing\n  property(this, 'defaultValue', null);\n  this.toWireFormat = function(value) {\n    if (value === null || value === undefined) return '';\n    return value;\n  };\n  this.toType = function(value) { return value; };\n}\n\n/**\n * @api private\n */\nShape.normalizedTypes = {\n  character: 'string',\n  double: 'float',\n  long: 'integer',\n  short: 'integer',\n  biginteger: 'integer',\n  bigdecimal: 'float',\n  blob: 'binary'\n};\n\n/**\n * @api private\n */\nShape.types = {\n  'structure': StructureShape,\n  'list': ListShape,\n  'map': MapShape,\n  'boolean': BooleanShape,\n  'timestamp': TimestampShape,\n  'float': FloatShape,\n  'integer': IntegerShape,\n  'string': StringShape,\n  'base64': Base64Shape,\n  'binary': BinaryShape\n};\n\nShape.resolve = function resolve(shape, options) {\n  if (shape.shape) {\n    var refShape = options.api.shapes[shape.shape];\n    if (!refShape) {\n      throw new Error('Cannot find shape reference: ' + shape.shape);\n    }\n\n    return refShape;\n  } else {\n    return null;\n  }\n};\n\nShape.create = function create(shape, options, memberName) {\n  if (shape.isShape) return shape;\n\n  var refShape = Shape.resolve(shape, options);\n  if (refShape) {\n    var filteredKeys = Object.keys(shape);\n    if (!options.documentation) {\n      filteredKeys = filteredKeys.filter(function(name) {\n        return !name.match(/documentation/);\n      });\n    }\n\n    // create an inline shape with extra members\n    var InlineShape = function() {\n      refShape.constructor.call(this, shape, options, memberName);\n    };\n    InlineShape.prototype = refShape;\n    return new InlineShape();\n  } else {\n    // set type if not set\n    if (!shape.type) {\n      if (shape.members) shape.type = 'structure';\n      else if (shape.member) shape.type = 'list';\n      else if (shape.key) shape.type = 'map';\n      else shape.type = 'string';\n    }\n\n    // normalize types\n    var origType = shape.type;\n    if (Shape.normalizedTypes[shape.type]) {\n      shape.type = Shape.normalizedTypes[shape.type];\n    }\n\n    if (Shape.types[shape.type]) {\n      return new Shape.types[shape.type](shape, options, memberName);\n    } else {\n      throw new Error('Unrecognized shape type: ' + origType);\n    }\n  }\n};\n\nfunction CompositeShape(shape) {\n  Shape.apply(this, arguments);\n  property(this, 'isComposite', true);\n\n  if (shape.flattened) {\n    property(this, 'flattened', shape.flattened || false);\n  }\n}\n\nfunction StructureShape(shape, options) {\n  var self = this;\n  var requiredMap = null, firstInit = !this.isShape;\n\n  CompositeShape.apply(this, arguments);\n\n  if (firstInit) {\n    property(this, 'defaultValue', function() { return {}; });\n    property(this, 'members', {});\n    property(this, 'memberNames', []);\n    property(this, 'required', []);\n    property(this, 'isRequired', function() { return false; });\n  }\n\n  if (shape.members) {\n    property(this, 'members', new Collection(shape.members, options, function(name, member) {\n      return Shape.create(member, options, name);\n    }));\n    memoizedProperty(this, 'memberNames', function() {\n      return shape.xmlOrder || Object.keys(shape.members);\n    });\n\n    if (shape.event) {\n      memoizedProperty(this, 'eventPayloadMemberName', function() {\n        var members = self.members;\n        var memberNames = self.memberNames;\n        // iterate over members to find ones that are event payloads\n        for (var i = 0, iLen = memberNames.length; i < iLen; i++) {\n          if (members[memberNames[i]].isEventPayload) {\n            return memberNames[i];\n          }\n        }\n      });\n\n      memoizedProperty(this, 'eventHeaderMemberNames', function() {\n        var members = self.members;\n        var memberNames = self.memberNames;\n        var eventHeaderMemberNames = [];\n        // iterate over members to find ones that are event headers\n        for (var i = 0, iLen = memberNames.length; i < iLen; i++) {\n          if (members[memberNames[i]].isEventHeader) {\n            eventHeaderMemberNames.push(memberNames[i]);\n          }\n        }\n        return eventHeaderMemberNames;\n      });\n    }\n  }\n\n  if (shape.required) {\n    property(this, 'required', shape.required);\n    property(this, 'isRequired', function(name) {\n      if (!requiredMap) {\n        requiredMap = {};\n        for (var i = 0; i < shape.required.length; i++) {\n          requiredMap[shape.required[i]] = true;\n        }\n      }\n\n      return requiredMap[name];\n    }, false, true);\n  }\n\n  property(this, 'resultWrapper', shape.resultWrapper || null);\n\n  if (shape.payload) {\n    property(this, 'payload', shape.payload);\n  }\n\n  if (typeof shape.xmlNamespace === 'string') {\n    property(this, 'xmlNamespaceUri', shape.xmlNamespace);\n  } else if (typeof shape.xmlNamespace === 'object') {\n    property(this, 'xmlNamespacePrefix', shape.xmlNamespace.prefix);\n    property(this, 'xmlNamespaceUri', shape.xmlNamespace.uri);\n  }\n}\n\nfunction ListShape(shape, options) {\n  var self = this, firstInit = !this.isShape;\n  CompositeShape.apply(this, arguments);\n\n  if (firstInit) {\n    property(this, 'defaultValue', function() { return []; });\n  }\n\n  if (shape.member) {\n    memoizedProperty(this, 'member', function() {\n      return Shape.create(shape.member, options);\n    });\n  }\n\n  if (this.flattened) {\n    var oldName = this.name;\n    memoizedProperty(this, 'name', function() {\n      return self.member.name || oldName;\n    });\n  }\n}\n\nfunction MapShape(shape, options) {\n  var firstInit = !this.isShape;\n  CompositeShape.apply(this, arguments);\n\n  if (firstInit) {\n    property(this, 'defaultValue', function() { return {}; });\n    property(this, 'key', Shape.create({type: 'string'}, options));\n    property(this, 'value', Shape.create({type: 'string'}, options));\n  }\n\n  if (shape.key) {\n    memoizedProperty(this, 'key', function() {\n      return Shape.create(shape.key, options);\n    });\n  }\n  if (shape.value) {\n    memoizedProperty(this, 'value', function() {\n      return Shape.create(shape.value, options);\n    });\n  }\n}\n\nfunction TimestampShape(shape) {\n  var self = this;\n  Shape.apply(this, arguments);\n\n  if (shape.timestampFormat) {\n    property(this, 'timestampFormat', shape.timestampFormat);\n  } else if (self.isTimestampFormatSet && this.timestampFormat) {\n    property(this, 'timestampFormat', this.timestampFormat);\n  } else if (this.location === 'header') {\n    property(this, 'timestampFormat', 'rfc822');\n  } else if (this.location === 'querystring') {\n    property(this, 'timestampFormat', 'iso8601');\n  } else if (this.api) {\n    switch (this.api.protocol) {\n      case 'json':\n      case 'rest-json':\n        property(this, 'timestampFormat', 'unixTimestamp');\n        break;\n      case 'rest-xml':\n      case 'query':\n      case 'ec2':\n        property(this, 'timestampFormat', 'iso8601');\n        break;\n    }\n  }\n\n  this.toType = function(value) {\n    if (value === null || value === undefined) return null;\n    if (typeof value.toUTCString === 'function') return value;\n    return typeof value === 'string' || typeof value === 'number' ?\n           util.date.parseTimestamp(value) : null;\n  };\n\n  this.toWireFormat = function(value) {\n    return util.date.format(value, self.timestampFormat);\n  };\n}\n\nfunction StringShape() {\n  Shape.apply(this, arguments);\n\n  var nullLessProtocols = ['rest-xml', 'query', 'ec2'];\n  this.toType = function(value) {\n    value = this.api && nullLessProtocols.indexOf(this.api.protocol) > -1 ?\n      value || '' : value;\n    if (this.isJsonValue) {\n      return JSON.parse(value);\n    }\n\n    return value && typeof value.toString === 'function' ?\n      value.toString() : value;\n  };\n\n  this.toWireFormat = function(value) {\n    return this.isJsonValue ? JSON.stringify(value) : value;\n  };\n}\n\nfunction FloatShape() {\n  Shape.apply(this, arguments);\n\n  this.toType = function(value) {\n    if (value === null || value === undefined) return null;\n    return parseFloat(value);\n  };\n  this.toWireFormat = this.toType;\n}\n\nfunction IntegerShape() {\n  Shape.apply(this, arguments);\n\n  this.toType = function(value) {\n    if (value === null || value === undefined) return null;\n    return parseInt(value, 10);\n  };\n  this.toWireFormat = this.toType;\n}\n\nfunction BinaryShape() {\n  Shape.apply(this, arguments);\n  this.toType = function(value) {\n    var buf = util.base64.decode(value);\n    if (this.isSensitive && util.isNode() && typeof util.Buffer.alloc === 'function') {\n  /* Node.js can create a Buffer that is not isolated.\n   * i.e. buf.byteLength !== buf.buffer.byteLength\n   * This means that the sensitive data is accessible to anyone with access to buf.buffer.\n   * If this is the node shared Buffer, then other code within this process _could_ find this secret.\n   * Copy sensitive data to an isolated Buffer and zero the sensitive data.\n   * While this is safe to do here, copying this code somewhere else may produce unexpected results.\n   */\n      var secureBuf = util.Buffer.alloc(buf.length, buf);\n      buf.fill(0);\n      buf = secureBuf;\n    }\n    return buf;\n  };\n  this.toWireFormat = util.base64.encode;\n}\n\nfunction Base64Shape() {\n  BinaryShape.apply(this, arguments);\n}\n\nfunction BooleanShape() {\n  Shape.apply(this, arguments);\n\n  this.toType = function(value) {\n    if (typeof value === 'boolean') return value;\n    if (value === null || value === undefined) return null;\n    return value === 'true';\n  };\n}\n\n/**\n * @api private\n */\nShape.shapes = {\n  StructureShape: StructureShape,\n  ListShape: ListShape,\n  MapShape: MapShape,\n  StringShape: StringShape,\n  BooleanShape: BooleanShape,\n  Base64Shape: Base64Shape\n};\n\n/**\n * @api private\n */\nmodule.exports = Shape;\n","var util = require('../core').util;\nvar toBuffer = util.buffer.toBuffer;\n\n/**\n * A lossless representation of a signed, 64-bit integer. Instances of this\n * class may be used in arithmetic expressions as if they were numeric\n * primitives, but the binary representation will be preserved unchanged as the\n * `bytes` property of the object. The bytes should be encoded as big-endian,\n * two's complement integers.\n * @param {Buffer} bytes\n *\n * @api private\n */\nfunction Int64(bytes) {\n    if (bytes.length !== 8) {\n        throw new Error('Int64 buffers must be exactly 8 bytes');\n    }\n    if (!util.Buffer.isBuffer(bytes)) bytes = toBuffer(bytes);\n\n    this.bytes = bytes;\n}\n\n/**\n * @param {number} number\n * @returns {Int64}\n *\n * @api private\n */\nInt64.fromNumber = function(number) {\n    if (number > 9223372036854775807 || number < -9223372036854775808) {\n        throw new Error(\n            number + ' is too large (or, if negative, too small) to represent as an Int64'\n        );\n    }\n\n    var bytes = new Uint8Array(8);\n    for (\n        var i = 7, remaining = Math.abs(Math.round(number));\n        i > -1 && remaining > 0;\n        i--, remaining /= 256\n    ) {\n        bytes[i] = remaining;\n    }\n\n    if (number < 0) {\n        negate(bytes);\n    }\n\n    return new Int64(bytes);\n};\n\n/**\n * @returns {number}\n *\n * @api private\n */\nInt64.prototype.valueOf = function() {\n    var bytes = this.bytes.slice(0);\n    var negative = bytes[0] & 128;\n    if (negative) {\n        negate(bytes);\n    }\n\n    return parseInt(bytes.toString('hex'), 16) * (negative ? -1 : 1);\n};\n\nInt64.prototype.toString = function() {\n    return String(this.valueOf());\n};\n\n/**\n * @param {Buffer} bytes\n *\n * @api private\n */\nfunction negate(bytes) {\n    for (var i = 0; i < 8; i++) {\n        bytes[i] ^= 0xFF;\n    }\n    for (var i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0) {\n            break;\n        }\n    }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    Int64: Int64\n};\n","var Buffer = require('buffer/').Buffer;\n\n/**\n * This is a polyfill for the static method `isView` of `ArrayBuffer`, which is\n * e.g. missing in IE 10.\n *\n * @api private\n */\nif (\n    typeof ArrayBuffer !== 'undefined' &&\n    typeof ArrayBuffer.isView === 'undefined'\n) {\n    ArrayBuffer.isView = function(arg) {\n        return viewStrings.indexOf(Object.prototype.toString.call(arg)) > -1;\n    };\n}\n\n/**\n * @api private\n */\nvar viewStrings = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]',\n    '[object DataView]',\n];\n\n/**\n * @api private\n */\nfunction isEmptyData(data) {\n    if (typeof data === 'string') {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\n\n/**\n * @api private\n */\nfunction convertToBuffer(data) {\n    if (typeof data === 'string') {\n        data = new Buffer(data, 'utf8');\n    }\n\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n\n    return new Uint8Array(data);\n}\n\n/**\n * @api private\n */\nmodule.exports = exports = {\n    isEmptyData: isEmptyData,\n    convertToBuffer: convertToBuffer,\n};\n","require('../polly/presigner');\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['machinelearning'] = {};\nAWS.MachineLearning = Service.defineService('machinelearning', ['2014-12-12']);\nrequire('../lib/services/machinelearning');\nObject.defineProperty(apiLoader.services['machinelearning'], '2014-12-12', {\n  get: function get() {\n    var model = require('../apis/machinelearning-2014-12-12.min.json');\n    model.paginators = require('../apis/machinelearning-2014-12-12.paginators.json').pagination;\n    model.waiters = require('../apis/machinelearning-2014-12-12.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MachineLearning;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['codecommit'] = {};\nAWS.CodeCommit = Service.defineService('codecommit', ['2015-04-13']);\nObject.defineProperty(apiLoader.services['codecommit'], '2015-04-13', {\n  get: function get() {\n    var model = require('../apis/codecommit-2015-04-13.min.json');\n    model.paginators = require('../apis/codecommit-2015-04-13.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CodeCommit;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudtrail'] = {};\nAWS.CloudTrail = Service.defineService('cloudtrail', ['2013-11-01']);\nObject.defineProperty(apiLoader.services['cloudtrail'], '2013-11-01', {\n  get: function get() {\n    var model = require('../apis/cloudtrail-2013-11-01.min.json');\n    model.paginators = require('../apis/cloudtrail-2013-11-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudTrail;\n","/**\n * Copyright 2012-2013 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You\n * may not use this file except in compliance with the License. A copy of\n * the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n */\n\nvar AWS = require('./core');\nvar inherit = AWS.util.inherit;\nvar jmespath = require('jmespath');\n\n/**\n * @api private\n */\nfunction CHECK_ACCEPTORS(resp) {\n  var waiter = resp.request._waiter;\n  var acceptors = waiter.config.acceptors;\n  var acceptorMatched = false;\n  var state = 'retry';\n\n  acceptors.forEach(function(acceptor) {\n    if (!acceptorMatched) {\n      var matcher = waiter.matchers[acceptor.matcher];\n      if (matcher && matcher(resp, acceptor.expected, acceptor.argument)) {\n        acceptorMatched = true;\n        state = acceptor.state;\n      }\n    }\n  });\n\n  if (!acceptorMatched && resp.error) state = 'failure';\n\n  if (state === 'success') {\n    waiter.setSuccess(resp);\n  } else {\n    waiter.setError(resp, state === 'retry');\n  }\n}\n\n/**\n * @api private\n */\nAWS.ResourceWaiter = inherit({\n  /**\n   * Waits for a given state on a service object\n   * @param service [Service] the service object to wait on\n   * @param state [String] the state (defined in waiter configuration) to wait\n   *   for.\n   * @example Create a waiter for running EC2 instances\n   *   var ec2 = new AWS.EC2;\n   *   var waiter = new AWS.ResourceWaiter(ec2, 'instanceRunning');\n   */\n  constructor: function constructor(service, state) {\n    this.service = service;\n    this.state = state;\n    this.loadWaiterConfig(this.state);\n  },\n\n  service: null,\n\n  state: null,\n\n  config: null,\n\n  matchers: {\n    path: function(resp, expected, argument) {\n      try {\n        var result = jmespath.search(resp.data, argument);\n      } catch (err) {\n        return false;\n      }\n\n      return jmespath.strictDeepEqual(result,expected);\n    },\n\n    pathAll: function(resp, expected, argument) {\n      try {\n        var results = jmespath.search(resp.data, argument);\n      } catch (err) {\n        return false;\n      }\n\n      if (!Array.isArray(results)) results = [results];\n      var numResults = results.length;\n      if (!numResults) return false;\n      for (var ind = 0 ; ind < numResults; ind++) {\n        if (!jmespath.strictDeepEqual(results[ind], expected)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    pathAny: function(resp, expected, argument) {\n      try {\n        var results = jmespath.search(resp.data, argument);\n      } catch (err) {\n        return false;\n      }\n\n      if (!Array.isArray(results)) results = [results];\n      var numResults = results.length;\n      for (var ind = 0 ; ind < numResults; ind++) {\n        if (jmespath.strictDeepEqual(results[ind], expected)) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    status: function(resp, expected) {\n      var statusCode = resp.httpResponse.statusCode;\n      return (typeof statusCode === 'number') && (statusCode === expected);\n    },\n\n    error: function(resp, expected) {\n      if (typeof expected === 'string' && resp.error) {\n        return expected === resp.error.code;\n      }\n      // if expected is not string, can be boolean indicating presence of error\n      return expected === !!resp.error;\n    }\n  },\n\n  listeners: new AWS.SequentialExecutor().addNamedListeners(function(add) {\n    add('RETRY_CHECK', 'retry', function(resp) {\n      var waiter = resp.request._waiter;\n      if (resp.error && resp.error.code === 'ResourceNotReady') {\n        resp.error.retryDelay = (waiter.config.delay || 0) * 1000;\n      }\n    });\n\n    add('CHECK_OUTPUT', 'extractData', CHECK_ACCEPTORS);\n\n    add('CHECK_ERROR', 'extractError', CHECK_ACCEPTORS);\n  }),\n\n  /**\n   * @return [AWS.Request]\n   */\n  wait: function wait(params, callback) {\n    if (typeof params === 'function') {\n      callback = params; params = undefined;\n    }\n\n    if (params && params.$waiter) {\n      params = AWS.util.copy(params);\n      if (typeof params.$waiter.delay === 'number') {\n        this.config.delay = params.$waiter.delay;\n      }\n      if (typeof params.$waiter.maxAttempts === 'number') {\n        this.config.maxAttempts = params.$waiter.maxAttempts;\n      }\n      delete params.$waiter;\n    }\n\n    var request = this.service.makeRequest(this.config.operation, params);\n    request._waiter = this;\n    request.response.maxRetries = this.config.maxAttempts;\n    request.addListeners(this.listeners);\n\n    if (callback) request.send(callback);\n    return request;\n  },\n\n  setSuccess: function setSuccess(resp) {\n    resp.error = null;\n    resp.data = resp.data || {};\n    resp.request.removeAllListeners('extractData');\n  },\n\n  setError: function setError(resp, retryable) {\n    resp.data = null;\n    resp.error = AWS.util.error(resp.error || new Error(), {\n      code: 'ResourceNotReady',\n      message: 'Resource is not in the state ' + this.state,\n      retryable: retryable\n    });\n  },\n\n  /**\n   * Loads waiter configuration from API configuration\n   *\n   * @api private\n   */\n  loadWaiterConfig: function loadWaiterConfig(state) {\n    if (!this.service.api.waiters[state]) {\n      throw new AWS.util.error(new Error(), {\n        code: 'StateNotFoundError',\n        message: 'State ' + state + ' not found.'\n      });\n    }\n\n    this.config = AWS.util.copy(this.service.api.waiters[state]);\n  }\n});\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cognitosync'] = {};\nAWS.CognitoSync = Service.defineService('cognitosync', ['2014-06-30']);\nObject.defineProperty(apiLoader.services['cognitosync'], '2014-06-30', {\n  get: function get() {\n    var model = require('../apis/cognito-sync-2014-06-30.min.json');\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CognitoSync;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['autoscaling'] = {};\nAWS.AutoScaling = Service.defineService('autoscaling', ['2011-01-01']);\nObject.defineProperty(apiLoader.services['autoscaling'], '2011-01-01', {\n  get: function get() {\n    var model = require('../apis/autoscaling-2011-01-01.min.json');\n    model.paginators = require('../apis/autoscaling-2011-01-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.AutoScaling;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var AWS = require('../core');\nvar byteLength = AWS.util.string.byteLength;\nvar Buffer = AWS.util.Buffer;\n\n/**\n * The managed uploader allows for easy and efficient uploading of buffers,\n * blobs, or streams, using a configurable amount of concurrency to perform\n * multipart uploads where possible. This abstraction also enables uploading\n * streams of unknown size due to the use of multipart uploads.\n *\n * To construct a managed upload object, see the {constructor} function.\n *\n * ## Tracking upload progress\n *\n * The managed upload object can also track progress by attaching an\n * 'httpUploadProgress' listener to the upload manager. This event is similar\n * to {AWS.Request~httpUploadProgress} but groups all concurrent upload progress\n * into a single event. See {AWS.S3.ManagedUpload~httpUploadProgress} for more\n * information.\n *\n * ## Handling Multipart Cleanup\n *\n * By default, this class will automatically clean up any multipart uploads\n * when an individual part upload fails. This behavior can be disabled in order\n * to manually handle failures by setting the `leavePartsOnError` configuration\n * option to `true` when initializing the upload object.\n *\n * @!event httpUploadProgress(progress)\n *   Triggered when the uploader has uploaded more data.\n *   @note The `total` property may not be set if the stream being uploaded has\n *     not yet finished chunking. In this case the `total` will be undefined\n *     until the total stream size is known.\n *   @note This event will not be emitted in Node.js 0.8.x.\n *   @param progress [map] An object containing the `loaded` and `total` bytes\n *     of the request and the `key` of the S3 object. Note that `total` may be undefined until the payload\n *     size is known.\n *   @context (see AWS.Request~send)\n */\nAWS.S3.ManagedUpload = AWS.util.inherit({\n  /**\n   * Creates a managed upload object with a set of configuration options.\n   *\n   * @note A \"Body\" parameter is required to be set prior to calling {send}.\n   * @note In Node.js, sending \"Body\" as {https://nodejs.org/dist/latest/docs/api/stream.html#stream_object_mode object-mode stream}\n   *   may result in upload hangs. Using buffer stream is preferable.\n   * @option options params [map] a map of parameters to pass to the upload\n   *   requests. The \"Body\" parameter is required to be specified either on\n   *   the service or in the params option.\n   * @note ContentMD5 should not be provided when using the managed upload object.\n   *   Instead, setting \"computeChecksums\" to true will enable automatic ContentMD5 generation\n   *   by the managed upload object.\n   * @option options queueSize [Number] (4) the size of the concurrent queue\n   *   manager to upload parts in parallel. Set to 1 for synchronous uploading\n   *   of parts. Note that the uploader will buffer at most queueSize * partSize\n   *   bytes into memory at any given time.\n   * @option options partSize [Number] (5mb) the size in bytes for each\n   *   individual part to be uploaded. Adjust the part size to ensure the number\n   *   of parts does not exceed {maxTotalParts}. See {minPartSize} for the\n   *   minimum allowed part size.\n   * @option options leavePartsOnError [Boolean] (false) whether to abort the\n   *   multipart upload if an error occurs. Set to true if you want to handle\n   *   failures manually.\n   * @option options service [AWS.S3] an optional S3 service object to use for\n   *   requests. This object might have bound parameters used by the uploader.\n   * @option options tags [Array<map>] The tags to apply to the uploaded object.\n   *   Each tag should have a `Key` and `Value` keys.\n   * @example Creating a default uploader for a stream object\n   *   var upload = new AWS.S3.ManagedUpload({\n   *     params: {Bucket: 'bucket', Key: 'key', Body: stream}\n   *   });\n   * @example Creating an uploader with concurrency of 1 and partSize of 10mb\n   *   var upload = new AWS.S3.ManagedUpload({\n   *     partSize: 10 * 1024 * 1024, queueSize: 1,\n   *     params: {Bucket: 'bucket', Key: 'key', Body: stream}\n   *   });\n   * @example Creating an uploader with tags\n   *   var upload = new AWS.S3.ManagedUpload({\n   *     params: {Bucket: 'bucket', Key: 'key', Body: stream},\n   *     tags: [{Key: 'tag1', Value: 'value1'}, {Key: 'tag2', Value: 'value2'}]\n   *   });\n   * @see send\n   */\n  constructor: function ManagedUpload(options) {\n    var self = this;\n    AWS.SequentialExecutor.call(self);\n    self.body = null;\n    self.sliceFn = null;\n    self.callback = null;\n    self.parts = {};\n    self.completeInfo = [];\n    self.fillQueue = function() {\n      self.callback(new Error('Unsupported body payload ' + typeof self.body));\n    };\n\n    self.configure(options);\n  },\n\n  /**\n   * @api private\n   */\n  configure: function configure(options) {\n    options = options || {};\n    this.partSize = this.minPartSize;\n\n    if (options.queueSize) this.queueSize = options.queueSize;\n    if (options.partSize) this.partSize = options.partSize;\n    if (options.leavePartsOnError) this.leavePartsOnError = true;\n    if (options.tags) {\n      if (!Array.isArray(options.tags)) {\n        throw new Error('Tags must be specified as an array; ' +\n          typeof options.tags + ' provided.');\n      }\n      this.tags = options.tags;\n    }\n\n    if (this.partSize < this.minPartSize) {\n      throw new Error('partSize must be greater than ' +\n                      this.minPartSize);\n    }\n\n    this.service = options.service;\n    this.bindServiceObject(options.params);\n    this.validateBody();\n    this.adjustTotalBytes();\n  },\n\n  /**\n   * @api private\n   */\n  leavePartsOnError: false,\n\n  /**\n   * @api private\n   */\n  queueSize: 4,\n\n  /**\n   * @api private\n   */\n  partSize: null,\n\n  /**\n   * @readonly\n   * @return [Number] the minimum number of bytes for an individual part\n   *   upload.\n   */\n  minPartSize: 1024 * 1024 * 5,\n\n  /**\n   * @readonly\n   * @return [Number] the maximum allowed number of parts in a multipart upload.\n   */\n  maxTotalParts: 10000,\n\n  /**\n   * Initiates the managed upload for the payload.\n   *\n   * @callback callback function(err, data)\n   *   @param err [Error] an error or null if no error occurred.\n   *   @param data [map] The response data from the successful upload:\n   *     * `Location` (String) the URL of the uploaded object\n   *     * `ETag` (String) the ETag of the uploaded object\n   *     * `Bucket` (String) the bucket to which the object was uploaded\n   *     * `Key` (String) the key to which the object was uploaded\n   * @example Sending a managed upload object\n   *   var params = {Bucket: 'bucket', Key: 'key', Body: stream};\n   *   var upload = new AWS.S3.ManagedUpload({params: params});\n   *   upload.send(function(err, data) {\n   *     console.log(err, data);\n   *   });\n   */\n  send: function(callback) {\n    var self = this;\n    self.failed = false;\n    self.callback = callback || function(err) { if (err) throw err; };\n\n    var runFill = true;\n    if (self.sliceFn) {\n      self.fillQueue = self.fillBuffer;\n    } else if (AWS.util.isNode()) {\n      var Stream = AWS.util.stream.Stream;\n      if (self.body instanceof Stream) {\n        runFill = false;\n        self.fillQueue = self.fillStream;\n        self.partBuffers = [];\n        self.body.\n          on('error', function(err) { self.cleanup(err); }).\n          on('readable', function() { self.fillQueue(); }).\n          on('end', function() {\n            self.isDoneChunking = true;\n            self.numParts = self.totalPartNumbers;\n            self.fillQueue.call(self);\n\n            if (self.isDoneChunking && self.totalPartNumbers >= 1 && self.doneParts === self.numParts) {\n              self.finishMultiPart();\n            }\n          });\n      }\n    }\n\n    if (runFill) self.fillQueue.call(self);\n  },\n\n  /**\n   * @!method  promise()\n   *   Returns a 'thenable' promise.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function(data)\n   *     Called if the promise is fulfilled.\n   *     @param data [map] The response data from the successful upload:\n   *       `Location` (String) the URL of the uploaded object\n   *       `ETag` (String) the ETag of the uploaded object\n   *       `Bucket` (String) the bucket to which the object was uploaded\n   *       `Key` (String) the key to which the object was uploaded\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] an error or null if no error occurred.\n   *   @return [Promise] A promise that represents the state of the upload request.\n   *   @example Sending an upload request using promises.\n   *     var upload = s3.upload({Bucket: 'bucket', Key: 'key', Body: stream});\n   *     var promise = upload.promise();\n   *     promise.then(function(data) { ... }, function(err) { ... });\n   */\n\n  /**\n   * Aborts a managed upload, including all concurrent upload requests.\n   * @note By default, calling this function will cleanup a multipart upload\n   *   if one was created. To leave the multipart upload around after aborting\n   *   a request, configure `leavePartsOnError` to `true` in the {constructor}.\n   * @note Calling {abort} in the browser environment will not abort any requests\n   *   that are already in flight. If a multipart upload was created, any parts\n   *   not yet uploaded will not be sent, and the multipart upload will be cleaned up.\n   * @example Aborting an upload\n   *   var params = {\n   *     Bucket: 'bucket', Key: 'key',\n   *     Body: Buffer.alloc(1024 * 1024 * 25) // 25MB payload\n   *   };\n   *   var upload = s3.upload(params);\n   *   upload.send(function (err, data) {\n   *     if (err) console.log(\"Error:\", err.code, err.message);\n   *     else console.log(data);\n   *   });\n   *\n   *   // abort request in 1 second\n   *   setTimeout(upload.abort.bind(upload), 1000);\n   */\n  abort: function() {\n    var self = this;\n    //abort putObject request\n    if (self.isDoneChunking === true && self.totalPartNumbers === 1 && self.singlePart) {\n      self.singlePart.abort();\n    } else {\n      self.cleanup(AWS.util.error(new Error('Request aborted by user'), {\n        code: 'RequestAbortedError', retryable: false\n      }));\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateBody: function validateBody() {\n    var self = this;\n    self.body = self.service.config.params.Body;\n    if (typeof self.body === 'string') {\n      self.body = AWS.util.buffer.toBuffer(self.body);\n    } else if (!self.body) {\n      throw new Error('params.Body is required');\n    }\n    self.sliceFn = AWS.util.arraySliceFn(self.body);\n  },\n\n  /**\n   * @api private\n   */\n  bindServiceObject: function bindServiceObject(params) {\n    params = params || {};\n    var self = this;\n    // bind parameters to new service object\n    if (!self.service) {\n      self.service = new AWS.S3({params: params});\n    } else {\n      var service = self.service;\n      var config = AWS.util.copy(service._originalConfig || {});\n      config.signatureVersion = service.getSignatureVersion();\n      self.service = new service.constructor.__super__(config);\n      self.service.config.params =\n        AWS.util.merge(self.service.config.params || {}, params);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  adjustTotalBytes: function adjustTotalBytes() {\n    var self = this;\n    try { // try to get totalBytes\n      self.totalBytes = byteLength(self.body);\n    } catch (e) { }\n\n    // try to adjust partSize if we know payload length\n    if (self.totalBytes) {\n      var newPartSize = Math.ceil(self.totalBytes / self.maxTotalParts);\n      if (newPartSize > self.partSize) self.partSize = newPartSize;\n    } else {\n      self.totalBytes = undefined;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  isDoneChunking: false,\n\n  /**\n   * @api private\n   */\n  partPos: 0,\n\n  /**\n   * @api private\n   */\n  totalChunkedBytes: 0,\n\n  /**\n   * @api private\n   */\n  totalUploadedBytes: 0,\n\n  /**\n   * @api private\n   */\n  totalBytes: undefined,\n\n  /**\n   * @api private\n   */\n  numParts: 0,\n\n  /**\n   * @api private\n   */\n  totalPartNumbers: 0,\n\n  /**\n   * @api private\n   */\n  activeParts: 0,\n\n  /**\n   * @api private\n   */\n  doneParts: 0,\n\n  /**\n   * @api private\n   */\n  parts: null,\n\n  /**\n   * @api private\n   */\n  completeInfo: null,\n\n  /**\n   * @api private\n   */\n  failed: false,\n\n  /**\n   * @api private\n   */\n  multipartReq: null,\n\n  /**\n   * @api private\n   */\n  partBuffers: null,\n\n  /**\n   * @api private\n   */\n  partBufferLength: 0,\n\n  /**\n   * @api private\n   */\n  fillBuffer: function fillBuffer() {\n    var self = this;\n    var bodyLen = byteLength(self.body);\n\n    if (bodyLen === 0) {\n      self.isDoneChunking = true;\n      self.numParts = 1;\n      self.nextChunk(self.body);\n      return;\n    }\n\n    while (self.activeParts < self.queueSize && self.partPos < bodyLen) {\n      var endPos = Math.min(self.partPos + self.partSize, bodyLen);\n      var buf = self.sliceFn.call(self.body, self.partPos, endPos);\n      self.partPos += self.partSize;\n\n      if (byteLength(buf) < self.partSize || self.partPos === bodyLen) {\n        self.isDoneChunking = true;\n        self.numParts = self.totalPartNumbers + 1;\n      }\n      self.nextChunk(buf);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  fillStream: function fillStream() {\n    var self = this;\n    if (self.activeParts >= self.queueSize) return;\n\n    var buf = self.body.read(self.partSize - self.partBufferLength) ||\n              self.body.read();\n    if (buf) {\n      self.partBuffers.push(buf);\n      self.partBufferLength += buf.length;\n      self.totalChunkedBytes += buf.length;\n    }\n\n    if (self.partBufferLength >= self.partSize) {\n      // if we have single buffer we avoid copyfull concat\n      var pbuf = self.partBuffers.length === 1 ?\n        self.partBuffers[0] : Buffer.concat(self.partBuffers);\n      self.partBuffers = [];\n      self.partBufferLength = 0;\n\n      // if we have more than partSize, push the rest back on the queue\n      if (pbuf.length > self.partSize) {\n        var rest = pbuf.slice(self.partSize);\n        self.partBuffers.push(rest);\n        self.partBufferLength += rest.length;\n        pbuf = pbuf.slice(0, self.partSize);\n      }\n\n      self.nextChunk(pbuf);\n    }\n\n    if (self.isDoneChunking && !self.isDoneSending) {\n      // if we have single buffer we avoid copyfull concat\n      pbuf = self.partBuffers.length === 1 ?\n          self.partBuffers[0] : Buffer.concat(self.partBuffers);\n      self.partBuffers = [];\n      self.partBufferLength = 0;\n      self.totalBytes = self.totalChunkedBytes;\n      self.isDoneSending = true;\n\n      if (self.numParts === 0 || pbuf.length > 0) {\n        self.numParts++;\n        self.nextChunk(pbuf);\n      }\n    }\n\n    self.body.read(0);\n  },\n\n  /**\n   * @api private\n   */\n  nextChunk: function nextChunk(chunk) {\n    var self = this;\n    if (self.failed) return null;\n\n    var partNumber = ++self.totalPartNumbers;\n    if (self.isDoneChunking && partNumber === 1) {\n      var params = {Body: chunk};\n      if (this.tags) {\n        params.Tagging = this.getTaggingHeader();\n      }\n      var req = self.service.putObject(params);\n      req._managedUpload = self;\n      req.on('httpUploadProgress', self.progress).send(self.finishSinglePart);\n      self.singlePart = req; //save the single part request\n      return null;\n    } else if (self.service.config.params.ContentMD5) {\n      var err = AWS.util.error(new Error('The Content-MD5 you specified is invalid for multi-part uploads.'), {\n        code: 'InvalidDigest', retryable: false\n      });\n\n      self.cleanup(err);\n      return null;\n    }\n\n    if (self.completeInfo[partNumber] && self.completeInfo[partNumber].ETag !== null) {\n      return null; // Already uploaded this part.\n    }\n\n    self.activeParts++;\n    if (!self.service.config.params.UploadId) {\n\n      if (!self.multipartReq) { // create multipart\n        self.multipartReq = self.service.createMultipartUpload();\n        self.multipartReq.on('success', function(resp) {\n          self.service.config.params.UploadId = resp.data.UploadId;\n          self.multipartReq = null;\n        });\n        self.queueChunks(chunk, partNumber);\n        self.multipartReq.on('error', function(err) {\n          self.cleanup(err);\n        });\n        self.multipartReq.send();\n      } else {\n        self.queueChunks(chunk, partNumber);\n      }\n    } else { // multipart is created, just send\n      self.uploadPart(chunk, partNumber);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getTaggingHeader: function getTaggingHeader() {\n    var kvPairStrings = [];\n    for (var i = 0; i < this.tags.length; i++) {\n      kvPairStrings.push(AWS.util.uriEscape(this.tags[i].Key) + '=' +\n        AWS.util.uriEscape(this.tags[i].Value));\n    }\n\n    return kvPairStrings.join('&');\n  },\n\n  /**\n   * @api private\n   */\n  uploadPart: function uploadPart(chunk, partNumber) {\n    var self = this;\n\n    var partParams = {\n      Body: chunk,\n      ContentLength: AWS.util.string.byteLength(chunk),\n      PartNumber: partNumber\n    };\n\n    var partInfo = {ETag: null, PartNumber: partNumber};\n    self.completeInfo[partNumber] = partInfo;\n\n    var req = self.service.uploadPart(partParams);\n    self.parts[partNumber] = req;\n    req._lastUploadedBytes = 0;\n    req._managedUpload = self;\n    req.on('httpUploadProgress', self.progress);\n    req.send(function(err, data) {\n      delete self.parts[partParams.PartNumber];\n      self.activeParts--;\n\n      if (!err && (!data || !data.ETag)) {\n        var message = 'No access to ETag property on response.';\n        if (AWS.util.isBrowser()) {\n          message += ' Check CORS configuration to expose ETag header.';\n        }\n\n        err = AWS.util.error(new Error(message), {\n          code: 'ETagMissing', retryable: false\n        });\n      }\n      if (err) return self.cleanup(err);\n      //prevent sending part being returned twice (https://github.com/aws/aws-sdk-js/issues/2304)\n      if (self.completeInfo[partNumber] && self.completeInfo[partNumber].ETag !== null) return null;\n      partInfo.ETag = data.ETag;\n      self.doneParts++;\n      if (self.isDoneChunking && self.doneParts === self.numParts) {\n        self.finishMultiPart();\n      } else {\n        self.fillQueue.call(self);\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  queueChunks: function queueChunks(chunk, partNumber) {\n    var self = this;\n    self.multipartReq.on('success', function() {\n      self.uploadPart(chunk, partNumber);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  cleanup: function cleanup(err) {\n    var self = this;\n    if (self.failed) return;\n\n    // clean up stream\n    if (typeof self.body.removeAllListeners === 'function' &&\n        typeof self.body.resume === 'function') {\n      self.body.removeAllListeners('readable');\n      self.body.removeAllListeners('end');\n      self.body.resume();\n    }\n\n    // cleanup multipartReq listeners\n    if (self.multipartReq) {\n      self.multipartReq.removeAllListeners('success');\n      self.multipartReq.removeAllListeners('error');\n      self.multipartReq.removeAllListeners('complete');\n      delete self.multipartReq;\n    }\n\n    if (self.service.config.params.UploadId && !self.leavePartsOnError) {\n      self.service.abortMultipartUpload().send();\n    } else if (self.leavePartsOnError) {\n      self.isDoneChunking = false;\n    }\n\n    AWS.util.each(self.parts, function(partNumber, part) {\n      part.removeAllListeners('complete');\n      part.abort();\n    });\n\n    self.activeParts = 0;\n    self.partPos = 0;\n    self.numParts = 0;\n    self.totalPartNumbers = 0;\n    self.parts = {};\n    self.failed = true;\n    self.callback(err);\n  },\n\n  /**\n   * @api private\n   */\n  finishMultiPart: function finishMultiPart() {\n    var self = this;\n    var completeParams = { MultipartUpload: { Parts: self.completeInfo.slice(1) } };\n    self.service.completeMultipartUpload(completeParams, function(err, data) {\n      if (err) {\n        return self.cleanup(err);\n      }\n\n      if (data && typeof data.Location === 'string') {\n        data.Location = data.Location.replace(/%2F/g, '/');\n      }\n\n      if (Array.isArray(self.tags)) {\n        for (var i = 0; i < self.tags.length; i++) {\n          self.tags[i].Value = String(self.tags[i].Value);\n        }\n        self.service.putObjectTagging(\n          {Tagging: {TagSet: self.tags}},\n          function(e, d) {\n            if (e) {\n              self.callback(e);\n            } else {\n              self.callback(e, data);\n            }\n          }\n        );\n      } else {\n        self.callback(err, data);\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  finishSinglePart: function finishSinglePart(err, data) {\n    var upload = this.request._managedUpload;\n    var httpReq = this.request.httpRequest;\n    var endpoint = httpReq.endpoint;\n    if (err) return upload.callback(err);\n    data.Location =\n      [endpoint.protocol, '//', endpoint.host, httpReq.path].join('');\n    data.key = this.request.params.Key; // will stay undocumented\n    data.Key = this.request.params.Key;\n    data.Bucket = this.request.params.Bucket;\n    upload.callback(err, data);\n  },\n\n  /**\n   * @api private\n   */\n  progress: function progress(info) {\n    var upload = this._managedUpload;\n    if (this.operation === 'putObject') {\n      info.part = 1;\n      info.key = this.params.Key;\n    } else {\n      upload.totalUploadedBytes += info.loaded - this._lastUploadedBytes;\n      this._lastUploadedBytes = info.loaded;\n      info = {\n        loaded: upload.totalUploadedBytes,\n        total: upload.totalBytes,\n        part: this.params.PartNumber,\n        key: this.params.Key\n      };\n    }\n    upload.emit('httpUploadProgress', [info]);\n  }\n});\n\nAWS.util.mixin(AWS.S3.ManagedUpload, AWS.SequentialExecutor);\n\n/**\n * @api private\n */\nAWS.S3.ManagedUpload.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.promise = AWS.util.promisifyMethod('send', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.S3.ManagedUpload.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.promise;\n};\n\nAWS.util.addPromises(AWS.S3.ManagedUpload);\n\n/**\n * @api private\n */\nmodule.exports = AWS.S3.ManagedUpload;\n","var AWS = require('../core');\nrequire('../dynamodb/document_client');\n\nAWS.util.update(AWS.DynamoDB.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    if (request.service.config.dynamoDbCrc32) {\n      request.removeListener('extractData', AWS.EventListeners.Json.EXTRACT_DATA);\n      request.addListener('extractData', this.checkCrc32);\n      request.addListener('extractData', AWS.EventListeners.Json.EXTRACT_DATA);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  checkCrc32: function checkCrc32(resp) {\n    if (!resp.httpResponse.streaming && !resp.request.service.crc32IsValid(resp)) {\n      resp.data = null;\n      resp.error = AWS.util.error(new Error(), {\n        code: 'CRC32CheckFailed',\n        message: 'CRC32 integrity check failed',\n        retryable: true\n      });\n      resp.request.haltHandlersOnError();\n      throw (resp.error);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  crc32IsValid: function crc32IsValid(resp) {\n    var crc = resp.httpResponse.headers['x-amz-crc32'];\n    if (!crc) return true; // no (valid) CRC32 header\n    return parseInt(crc, 10) === AWS.util.crypto.crc32(resp.httpResponse.body);\n  },\n\n  /**\n   * @api private\n   */\n  defaultRetryCount: 10,\n\n  /**\n   * @api private\n   */\n  retryDelays: function retryDelays(retryCount, err) {\n    var retryDelayOptions = AWS.util.copy(this.config.retryDelayOptions);\n\n    if (typeof retryDelayOptions.base !== 'number') {\n        retryDelayOptions.base = 50; // default for dynamodb\n    }\n    var delay = AWS.util.calculateRetryDelay(retryCount, retryDelayOptions, err);\n    return delay;\n  }\n});\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['storagegateway'] = {};\nAWS.StorageGateway = Service.defineService('storagegateway', ['2013-06-30']);\nObject.defineProperty(apiLoader.services['storagegateway'], '2013-06-30', {\n  get: function get() {\n    var model = require('../apis/storagegateway-2013-06-30.min.json');\n    model.paginators = require('../apis/storagegateway-2013-06-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.StorageGateway;\n","var AWS = require('../core');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents temporary credentials retrieved from {AWS.STS}. Without any\n * extra parameters, credentials will be fetched from the\n * {AWS.STS.getSessionToken} operation. If an IAM role is provided, the\n * {AWS.STS.assumeRole} operation will be used to fetch credentials for the\n * role instead.\n *\n * AWS.ChainableTemporaryCredentials differs from AWS.TemporaryCredentials in\n * the way masterCredentials and refreshes are handled.\n * AWS.ChainableTemporaryCredentials refreshes expired credentials using the\n * masterCredentials passed by the user to support chaining of STS credentials.\n * However, AWS.TemporaryCredentials recursively collapses the masterCredentials\n * during instantiation, precluding the ability to refresh credentials which\n * require intermediate, temporary credentials.\n *\n * For example, if the application should use RoleA, which must be assumed from\n * RoleB, and the environment provides credentials which can assume RoleB, then\n * AWS.ChainableTemporaryCredentials must be used to support refreshing the\n * temporary credentials for RoleA:\n *\n * ```javascript\n * var roleACreds = new AWS.ChainableTemporaryCredentials({\n *   params: {RoleArn: 'RoleA'},\n *   masterCredentials: new AWS.ChainableTemporaryCredentials({\n *     params: {RoleArn: 'RoleB'},\n *     masterCredentials: new AWS.EnvironmentCredentials('AWS')\n *   })\n * });\n * ```\n *\n * If AWS.TemporaryCredentials had been used in the previous example,\n * `roleACreds` would fail to refresh because `roleACreds` would\n * use the environment credentials for the AssumeRole request.\n *\n * Another difference is that AWS.ChainableTemporaryCredentials creates the STS\n * service instance during instantiation while AWS.TemporaryCredentials creates\n * the STS service instance during the first refresh. Creating the service\n * instance during instantiation effectively captures the master credentials\n * from the global config, so that subsequent changes to the global config do\n * not affect the master credentials used to refresh the temporary credentials.\n *\n * This allows an instance of AWS.ChainableTemporaryCredentials to be assigned\n * to AWS.config.credentials:\n *\n * ```javascript\n * var envCreds = new AWS.EnvironmentCredentials('AWS');\n * AWS.config.credentials = envCreds;\n * // masterCredentials will be envCreds\n * AWS.config.credentials = new AWS.ChainableTemporaryCredentials({\n *   params: {RoleArn: '...'}\n * });\n * ```\n *\n * Similarly, to use the CredentialProviderChain's default providers as the\n * master credentials, simply create a new instance of\n * AWS.ChainableTemporaryCredentials:\n *\n * ```javascript\n * AWS.config.credentials = new ChainableTemporaryCredentials({\n *   params: {RoleArn: '...'}\n * });\n * ```\n *\n * @!attribute service\n *   @return [AWS.STS] the STS service instance used to\n *     get and refresh temporary credentials from AWS STS.\n * @note (see constructor)\n */\nAWS.ChainableTemporaryCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new temporary credentials object.\n   *\n   * @param options [map] a set of options\n   * @option options params [map] ({}) a map of options that are passed to the\n   *   {AWS.STS.assumeRole} or {AWS.STS.getSessionToken} operations.\n   *   If a `RoleArn` parameter is passed in, credentials will be based on the\n   *   IAM role. If a `SerialNumber` parameter is passed in, {tokenCodeFn} must\n   *   also be passed in or an error will be thrown.\n   * @option options masterCredentials [AWS.Credentials] the master credentials\n   *   used to get and refresh temporary credentials from AWS STS. By default,\n   *   AWS.config.credentials or AWS.config.credentialProvider will be used.\n   * @option options tokenCodeFn [Function] (null) Function to provide\n   *   `TokenCode`, if `SerialNumber` is provided for profile in {params}. Function\n   *   is called with value of `SerialNumber` and `callback`, and should provide\n   *   the `TokenCode` or an error to the callback in the format\n   *   `callback(err, token)`.\n   * @example Creating a new credentials object for generic temporary credentials\n   *   AWS.config.credentials = new AWS.ChainableTemporaryCredentials();\n   * @example Creating a new credentials object for an IAM role\n   *   AWS.config.credentials = new AWS.ChainableTemporaryCredentials({\n   *     params: {\n   *       RoleArn: 'arn:aws:iam::1234567890:role/TemporaryCredentials'\n   *     }\n   *   });\n   * @see AWS.STS.assumeRole\n   * @see AWS.STS.getSessionToken\n   */\n  constructor: function ChainableTemporaryCredentials(options) {\n    AWS.Credentials.call(this);\n    options = options || {};\n    this.errorCode = 'ChainableTemporaryCredentialsProviderFailure';\n    this.expired = true;\n    this.tokenCodeFn = null;\n\n    var params = AWS.util.copy(options.params) || {};\n    if (params.RoleArn) {\n      params.RoleSessionName = params.RoleSessionName || 'temporary-credentials';\n    }\n    if (params.SerialNumber) {\n      if (!options.tokenCodeFn || (typeof options.tokenCodeFn !== 'function')) {\n        throw new AWS.util.error(\n          new Error('tokenCodeFn must be a function when params.SerialNumber is given'),\n          {code: this.errorCode}\n        );\n      } else {\n        this.tokenCodeFn = options.tokenCodeFn;\n      }\n    }\n    var config = AWS.util.merge(\n      {\n        params: params,\n        credentials: options.masterCredentials || AWS.config.credentials\n      },\n      options.stsConfig || {}\n    );\n    this.service = new STS(config);\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRole} or\n   * {AWS.STS.getSessionToken}, depending on whether an IAM role ARN was passed\n   * to the credentials {constructor}.\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see AWS.Credentials.get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    var self = this;\n    var operation = self.service.config.params.RoleArn ? 'assumeRole' : 'getSessionToken';\n    this.getTokenCode(function (err, tokenCode) {\n      var params = {};\n      if (err) {\n        callback(err);\n        return;\n      }\n      if (tokenCode) {\n        params.TokenCode = tokenCode;\n      }\n      self.service[operation](params, function (err, data) {\n        if (!err) {\n          self.service.credentialsFrom(data, self);\n        }\n        callback(err);\n      });\n    });\n  },\n\n  /**\n   * @api private\n   */\n  getTokenCode: function getTokenCode(callback) {\n    var self = this;\n    if (this.tokenCodeFn) {\n      this.tokenCodeFn(this.service.config.params.SerialNumber, function (err, token) {\n        if (err) {\n          var message = err;\n          if (err instanceof Error) {\n            message = err.message;\n          }\n          callback(\n            AWS.util.error(\n              new Error('Error fetching MFA token: ' + message),\n              { code: self.errorCode}\n            )\n          );\n          return;\n        }\n        callback(null, token);\n      });\n    } else {\n      callback(null);\n    }\n  }\n});\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['personalizeruntime'] = {};\nAWS.PersonalizeRuntime = Service.defineService('personalizeruntime', ['2018-05-22']);\nObject.defineProperty(apiLoader.services['personalizeruntime'], '2018-05-22', {\n  get: function get() {\n    var model = require('../apis/personalize-runtime-2018-05-22.min.json');\n    model.paginators = require('../apis/personalize-runtime-2018-05-22.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.PersonalizeRuntime;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['s3'] = {};\nAWS.S3 = Service.defineService('s3', ['2006-03-01']);\nrequire('../lib/services/s3');\nObject.defineProperty(apiLoader.services['s3'], '2006-03-01', {\n  get: function get() {\n    var model = require('../apis/s3-2006-03-01.min.json');\n    model.paginators = require('../apis/s3-2006-03-01.paginators.json').pagination;\n    model.waiters = require('../apis/s3-2006-03-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.S3;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['elbv2'] = {};\nAWS.ELBv2 = Service.defineService('elbv2', ['2015-12-01']);\nObject.defineProperty(apiLoader.services['elbv2'], '2015-12-01', {\n  get: function get() {\n    var model = require('../apis/elasticloadbalancingv2-2015-12-01.min.json');\n    model.paginators = require('../apis/elasticloadbalancingv2-2015-12-01.paginators.json').pagination;\n    model.waiters = require('../apis/elasticloadbalancingv2-2015-12-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ELBv2;\n","var AWS = require('./core');\nvar SequentialExecutor = require('./sequential_executor');\nvar DISCOVER_ENDPOINT = require('./discover_endpoint').discoverEndpoint;\n/**\n * The namespace used to register global event listeners for request building\n * and sending.\n */\nAWS.EventListeners = {\n  /**\n   * @!attribute VALIDATE_CREDENTIALS\n   *   A request listener that validates whether the request is being\n   *   sent with credentials.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating credentials\n   *     var listener = AWS.EventListeners.Core.VALIDATE_CREDENTIALS;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_REGION\n   *   A request listener that validates whether the region is set\n   *   for a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating region configuration\n   *     var listener = AWS.EventListeners.Core.VALIDATE_REGION;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_PARAMETERS\n   *   A request listener that validates input parameters in a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating parameters\n   *     var listener = AWS.EventListeners.Core.VALIDATE_PARAMETERS;\n   *     request.removeListener('validate', listener);\n   *   @example Disable parameter validation globally\n   *     AWS.EventListeners.Core.removeListener('validate',\n   *       AWS.EventListeners.Core.VALIDATE_REGION);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute SEND\n   *   A request listener that initiates the HTTP connection for a\n   *   request being sent. Handles the {AWS.Request~send 'send' Request event}\n   *   @example Replacing the HTTP handler\n   *     var listener = AWS.EventListeners.Core.SEND;\n   *     request.removeListener('send', listener);\n   *     request.on('send', function(response) {\n   *       customHandler.send(response);\n   *     });\n   *   @return [Function]\n   *   @readonly\n   * @!attribute HTTP_DATA\n   *   A request listener that reads data from the HTTP connection in order\n   *   to build the response data.\n   *   Handles the {AWS.Request~httpData 'httpData' Request event}.\n   *   Remove this handler if you are overriding the 'httpData' event and\n   *   do not want extra data processing and buffering overhead.\n   *   @example Disabling default data processing\n   *     var listener = AWS.EventListeners.Core.HTTP_DATA;\n   *     request.removeListener('httpData', listener);\n   *   @return [Function]\n   *   @readonly\n   */\n  Core: {} /* doc hack */\n};\n\n/**\n * @api private\n */\nfunction getOperationAuthtype(req) {\n  if (!req.service.api.operations) {\n    return '';\n  }\n  var operation = req.service.api.operations[req.operation];\n  return operation ? operation.authtype : '';\n}\n\nAWS.EventListeners = {\n  Core: new SequentialExecutor().addNamedListeners(function(add, addAsync) {\n    addAsync('VALIDATE_CREDENTIALS', 'validate',\n        function VALIDATE_CREDENTIALS(req, done) {\n      if (!req.service.api.signatureVersion && !req.service.config.signatureVersion) return done(); // none\n      req.service.config.getCredentials(function(err) {\n        if (err) {\n          req.response.error = AWS.util.error(err,\n            {code: 'CredentialsError', message: 'Missing credentials in config, if using AWS_CONFIG_FILE, set AWS_SDK_LOAD_CONFIG=1'});\n        }\n        done();\n      });\n    });\n\n    add('VALIDATE_REGION', 'validate', function VALIDATE_REGION(req) {\n      if (!req.service.isGlobalEndpoint) {\n        var dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n        if (!req.service.config.region) {\n          req.response.error = AWS.util.error(new Error(),\n            {code: 'ConfigError', message: 'Missing region in config'});\n        } else if (!dnsHostRegex.test(req.service.config.region)) {\n          req.response.error = AWS.util.error(new Error(),\n            {code: 'ConfigError', message: 'Invalid region in config'});\n        }\n      }\n    });\n\n    add('BUILD_IDEMPOTENCY_TOKENS', 'validate', function BUILD_IDEMPOTENCY_TOKENS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      if (!operation) {\n        return;\n      }\n      var idempotentMembers = operation.idempotentMembers;\n      if (!idempotentMembers.length) {\n        return;\n      }\n      // creates a copy of params so user's param object isn't mutated\n      var params = AWS.util.copy(req.params);\n      for (var i = 0, iLen = idempotentMembers.length; i < iLen; i++) {\n        if (!params[idempotentMembers[i]]) {\n          // add the member\n          params[idempotentMembers[i]] = AWS.util.uuid.v4();\n        }\n      }\n      req.params = params;\n    });\n\n    add('VALIDATE_PARAMETERS', 'validate', function VALIDATE_PARAMETERS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var rules = req.service.api.operations[req.operation].input;\n      var validation = req.service.config.paramValidation;\n      new AWS.ParamValidator(validation).validate(rules, req.params);\n    });\n\n    addAsync('COMPUTE_SHA256', 'afterBuild', function COMPUTE_SHA256(req, done) {\n      req.haltHandlersOnError();\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!req.service.api.signatureVersion && !authtype && !req.service.config.signatureVersion) return done(); // none\n      if (req.service.getSignerClass(req) === AWS.Signers.V4) {\n        var body = req.httpRequest.body || '';\n        if (authtype.indexOf('unsigned-body') >= 0) {\n          req.httpRequest.headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n          return done();\n        }\n        AWS.util.computeSha256(body, function(err, sha) {\n          if (err) {\n            done(err);\n          }\n          else {\n            req.httpRequest.headers['X-Amz-Content-Sha256'] = sha;\n            done();\n          }\n        });\n      } else {\n        done();\n      }\n    });\n\n    add('SET_CONTENT_LENGTH', 'afterBuild', function SET_CONTENT_LENGTH(req) {\n      var authtype = getOperationAuthtype(req);\n      var payloadMember = AWS.util.getRequestPayloadShape(req);\n      if (req.httpRequest.headers['Content-Length'] === undefined) {\n        try {\n          var length = AWS.util.string.byteLength(req.httpRequest.body);\n          req.httpRequest.headers['Content-Length'] = length;\n        } catch (err) {\n          if (payloadMember && payloadMember.isStreaming) {\n            if (payloadMember.requiresLength) {\n              //streaming payload requires length(s3, glacier)\n              throw err;\n            } else if (authtype.indexOf('unsigned-body') >= 0) {\n              //unbounded streaming payload(lex, mediastore)\n              req.httpRequest.headers['Transfer-Encoding'] = 'chunked';\n              return;\n            } else {\n              throw err;\n            }\n          }\n          throw err;\n        }\n      }\n    });\n\n    add('SET_HTTP_HOST', 'afterBuild', function SET_HTTP_HOST(req) {\n      req.httpRequest.headers['Host'] = req.httpRequest.endpoint.host;\n    });\n\n    add('RESTART', 'restart', function RESTART() {\n      var err = this.response.error;\n      if (!err || !err.retryable) return;\n\n      this.httpRequest = new AWS.HttpRequest(\n        this.service.endpoint,\n        this.service.region\n      );\n\n      if (this.response.retryCount < this.service.config.maxRetries) {\n        this.response.retryCount++;\n      } else {\n        this.response.error = null;\n      }\n    });\n\n    var addToHead = true;\n    addAsync('DISCOVER_ENDPOINT', 'sign', DISCOVER_ENDPOINT, addToHead);\n\n    addAsync('SIGN', 'sign', function SIGN(req, done) {\n      var service = req.service;\n      var operations = req.service.api.operations || {};\n      var operation = operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!service.api.signatureVersion && !authtype && !service.config.signatureVersion) return done(); // none\n\n      service.config.getCredentials(function (err, credentials) {\n        if (err) {\n          req.response.error = err;\n          return done();\n        }\n\n        try {\n          var date = service.getSkewCorrectedDate();\n          var SignerClass = service.getSignerClass(req);\n          var signer = new SignerClass(req.httpRequest,\n            service.getSigningName(),\n            {\n              signatureCache: service.config.signatureCache,\n              operation: operation,\n              signatureVersion: service.api.signatureVersion\n            });\n          signer.setServiceClientId(service._clientId);\n\n          // clear old authorization headers\n          delete req.httpRequest.headers['Authorization'];\n          delete req.httpRequest.headers['Date'];\n          delete req.httpRequest.headers['X-Amz-Date'];\n\n          // add new authorization\n          signer.addAuthorization(credentials, date);\n          req.signedAt = date;\n        } catch (e) {\n          req.response.error = e;\n        }\n        done();\n      });\n    });\n\n    add('VALIDATE_RESPONSE', 'validateResponse', function VALIDATE_RESPONSE(resp) {\n      if (this.service.successfulResponse(resp, this)) {\n        resp.data = {};\n        resp.error = null;\n      } else {\n        resp.data = null;\n        resp.error = AWS.util.error(new Error(),\n          {code: 'UnknownError', message: 'An unknown error occurred.'});\n      }\n    });\n\n    addAsync('SEND', 'send', function SEND(resp, done) {\n      resp.httpResponse._abortCallback = done;\n      resp.error = null;\n      resp.data = null;\n\n      function callback(httpResp) {\n        resp.httpResponse.stream = httpResp;\n        var stream = resp.request.httpRequest.stream;\n        var service = resp.request.service;\n        var api = service.api;\n        var operationName = resp.request.operation;\n        var operation = api.operations[operationName] || {};\n\n        httpResp.on('headers', function onHeaders(statusCode, headers, statusMessage) {\n          resp.request.emit(\n            'httpHeaders',\n            [statusCode, headers, resp, statusMessage]\n          );\n\n          if (!resp.httpResponse.streaming) {\n            if (AWS.HttpClient.streamsApiVersion === 2) { // streams2 API check\n              // if we detect event streams, we're going to have to\n              // return the stream immediately\n              if (operation.hasEventOutput && service.successfulResponse(resp)) {\n                // skip reading the IncomingStream\n                resp.request.emit('httpDone');\n                done();\n                return;\n              }\n\n              httpResp.on('readable', function onReadable() {\n                var data = httpResp.read();\n                if (data !== null) {\n                  resp.request.emit('httpData', [data, resp]);\n                }\n              });\n            } else { // legacy streams API\n              httpResp.on('data', function onData(data) {\n                resp.request.emit('httpData', [data, resp]);\n              });\n            }\n          }\n        });\n\n        httpResp.on('end', function onEnd() {\n          if (!stream || !stream.didCallback) {\n            if (AWS.HttpClient.streamsApiVersion === 2 && (operation.hasEventOutput && service.successfulResponse(resp))) {\n              // don't concatenate response chunks when streaming event stream data when response is successful\n              return;\n            }\n            resp.request.emit('httpDone');\n            done();\n          }\n        });\n      }\n\n      function progress(httpResp) {\n        httpResp.on('sendProgress', function onSendProgress(value) {\n          resp.request.emit('httpUploadProgress', [value, resp]);\n        });\n\n        httpResp.on('receiveProgress', function onReceiveProgress(value) {\n          resp.request.emit('httpDownloadProgress', [value, resp]);\n        });\n      }\n\n      function error(err) {\n        if (err.code !== 'RequestAbortedError') {\n          var errCode = err.code === 'TimeoutError' ? err.code : 'NetworkingError';\n          err = AWS.util.error(err, {\n            code: errCode,\n            region: resp.request.httpRequest.region,\n            hostname: resp.request.httpRequest.endpoint.hostname,\n            retryable: true\n          });\n        }\n        resp.error = err;\n        resp.request.emit('httpError', [resp.error, resp], function() {\n          done();\n        });\n      }\n\n      function executeSend() {\n        var http = AWS.HttpClient.getInstance();\n        var httpOptions = resp.request.service.config.httpOptions || {};\n        try {\n          var stream = http.handleRequest(resp.request.httpRequest, httpOptions,\n                                          callback, error);\n          progress(stream);\n        } catch (err) {\n          error(err);\n        }\n      }\n      var timeDiff = (resp.request.service.getSkewCorrectedDate() - this.signedAt) / 1000;\n      if (timeDiff >= 60 * 10) { // if we signed 10min ago, re-sign\n        this.emit('sign', [this], function(err) {\n          if (err) done(err);\n          else executeSend();\n        });\n      } else {\n        executeSend();\n      }\n    });\n\n    add('HTTP_HEADERS', 'httpHeaders',\n        function HTTP_HEADERS(statusCode, headers, resp, statusMessage) {\n      resp.httpResponse.statusCode = statusCode;\n      resp.httpResponse.statusMessage = statusMessage;\n      resp.httpResponse.headers = headers;\n      resp.httpResponse.body = AWS.util.buffer.toBuffer('');\n      resp.httpResponse.buffers = [];\n      resp.httpResponse.numBytes = 0;\n      var dateHeader = headers.date || headers.Date;\n      var service = resp.request.service;\n      if (dateHeader) {\n        var serverTime = Date.parse(dateHeader);\n        if (service.config.correctClockSkew\n            && service.isClockSkewed(serverTime)) {\n          service.applyClockOffset(serverTime);\n        }\n      }\n    });\n\n    add('HTTP_DATA', 'httpData', function HTTP_DATA(chunk, resp) {\n      if (chunk) {\n        if (AWS.util.isNode()) {\n          resp.httpResponse.numBytes += chunk.length;\n\n          var total = resp.httpResponse.headers['content-length'];\n          var progress = { loaded: resp.httpResponse.numBytes, total: total };\n          resp.request.emit('httpDownloadProgress', [progress, resp]);\n        }\n\n        resp.httpResponse.buffers.push(AWS.util.buffer.toBuffer(chunk));\n      }\n    });\n\n    add('HTTP_DONE', 'httpDone', function HTTP_DONE(resp) {\n      // convert buffers array into single buffer\n      if (resp.httpResponse.buffers && resp.httpResponse.buffers.length > 0) {\n        var body = AWS.util.buffer.concat(resp.httpResponse.buffers);\n        resp.httpResponse.body = body;\n      }\n      delete resp.httpResponse.numBytes;\n      delete resp.httpResponse.buffers;\n    });\n\n    add('FINALIZE_ERROR', 'retry', function FINALIZE_ERROR(resp) {\n      if (resp.httpResponse.statusCode) {\n        resp.error.statusCode = resp.httpResponse.statusCode;\n        if (resp.error.retryable === undefined) {\n          resp.error.retryable = this.service.retryableError(resp.error, this);\n        }\n      }\n    });\n\n    add('INVALIDATE_CREDENTIALS', 'retry', function INVALIDATE_CREDENTIALS(resp) {\n      if (!resp.error) return;\n      switch (resp.error.code) {\n        case 'RequestExpired': // EC2 only\n        case 'ExpiredTokenException':\n        case 'ExpiredToken':\n          resp.error.retryable = true;\n          resp.request.service.config.credentials.expired = true;\n      }\n    });\n\n    add('EXPIRED_SIGNATURE', 'retry', function EXPIRED_SIGNATURE(resp) {\n      var err = resp.error;\n      if (!err) return;\n      if (typeof err.code === 'string' && typeof err.message === 'string') {\n        if (err.code.match(/Signature/) && err.message.match(/expired/)) {\n          resp.error.retryable = true;\n        }\n      }\n    });\n\n    add('CLOCK_SKEWED', 'retry', function CLOCK_SKEWED(resp) {\n      if (!resp.error) return;\n      if (this.service.clockSkewError(resp.error)\n          && this.service.config.correctClockSkew) {\n        resp.error.retryable = true;\n      }\n    });\n\n    add('REDIRECT', 'retry', function REDIRECT(resp) {\n      if (resp.error && resp.error.statusCode >= 300 &&\n          resp.error.statusCode < 400 && resp.httpResponse.headers['location']) {\n        this.httpRequest.endpoint =\n          new AWS.Endpoint(resp.httpResponse.headers['location']);\n        this.httpRequest.headers['Host'] = this.httpRequest.endpoint.host;\n        resp.error.redirect = true;\n        resp.error.retryable = true;\n      }\n    });\n\n    add('RETRY_CHECK', 'retry', function RETRY_CHECK(resp) {\n      if (resp.error) {\n        if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.error.retryDelay = 0;\n        } else if (resp.retryCount < resp.maxRetries) {\n          resp.error.retryDelay = this.service.retryDelays(resp.retryCount, resp.error) || 0;\n        }\n      }\n    });\n\n    addAsync('RESET_RETRY_STATE', 'afterRetry', function RESET_RETRY_STATE(resp, done) {\n      var delay, willRetry = false;\n\n      if (resp.error) {\n        delay = resp.error.retryDelay || 0;\n        if (resp.error.retryable && resp.retryCount < resp.maxRetries) {\n          resp.retryCount++;\n          willRetry = true;\n        } else if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.redirectCount++;\n          willRetry = true;\n        }\n      }\n\n      // delay < 0 is a signal from customBackoff to skip retries\n      if (willRetry && delay >= 0) {\n        resp.error = null;\n        setTimeout(done, delay);\n      } else {\n        done();\n      }\n    });\n  }),\n\n  CorePost: new SequentialExecutor().addNamedListeners(function(add) {\n    add('EXTRACT_REQUEST_ID', 'extractData', AWS.util.extractRequestId);\n    add('EXTRACT_REQUEST_ID', 'extractError', AWS.util.extractRequestId);\n\n    add('ENOTFOUND_ERROR', 'httpError', function ENOTFOUND_ERROR(err) {\n      function isDNSError(err) {\n        return err.errno === 'ENOTFOUND' ||\n          typeof err.errno === 'number' &&\n          typeof AWS.util.getSystemErrorName === 'function' &&\n          ['EAI_NONAME', 'EAI_NODATA'].indexOf(AWS.util.getSystemErrorName(err.errno) >= 0);\n      }\n      if (err.code === 'NetworkingError' && isDNSError(err)) {\n        var message = 'Inaccessible host: `' + err.hostname +\n          '\\'. This service may not be available in the `' + err.region +\n          '\\' region.';\n        this.response.error = AWS.util.error(new Error(message), {\n          code: 'UnknownEndpoint',\n          region: err.region,\n          hostname: err.hostname,\n          retryable: true,\n          originalError: err\n        });\n      }\n    });\n  }),\n\n  Logger: new SequentialExecutor().addNamedListeners(function(add) {\n    add('LOG_REQUEST', 'complete', function LOG_REQUEST(resp) {\n      var req = resp.request;\n      var logger = req.service.config.logger;\n      if (!logger) return;\n      function filterSensitiveLog(inputShape, shape) {\n        if (!shape) {\n          return shape;\n        }\n        if (inputShape.isSensitive) {\n          return '***SensitiveInformation***';\n        }\n        switch (inputShape.type) {\n          case 'structure':\n            var struct = {};\n            AWS.util.each(shape, function(subShapeName, subShape) {\n              if (Object.prototype.hasOwnProperty.call(inputShape.members, subShapeName)) {\n                struct[subShapeName] = filterSensitiveLog(inputShape.members[subShapeName], subShape);\n              } else {\n                struct[subShapeName] = subShape;\n              }\n            });\n            return struct;\n          case 'list':\n            var list = [];\n            AWS.util.arrayEach(shape, function(subShape, index) {\n              list.push(filterSensitiveLog(inputShape.member, subShape));\n            });\n            return list;\n          case 'map':\n            var map = {};\n            AWS.util.each(shape, function(key, value) {\n              map[key] = filterSensitiveLog(inputShape.value, value);\n            });\n            return map;\n          default:\n            return shape;\n        }\n      }\n\n      function buildMessage() {\n        var time = resp.request.service.getSkewCorrectedDate().getTime();\n        var delta = (time - req.startTime.getTime()) / 1000;\n        var ansi = logger.isTTY ? true : false;\n        var status = resp.httpResponse.statusCode;\n        var censoredParams = req.params;\n        if (\n          req.service.api.operations &&\n              req.service.api.operations[req.operation] &&\n              req.service.api.operations[req.operation].input\n        ) {\n          var inputShape = req.service.api.operations[req.operation].input;\n          censoredParams = filterSensitiveLog(inputShape, req.params);\n        }\n        var params = require('util').inspect(censoredParams, true, null);\n        var message = '';\n        if (ansi) message += '\\x1B[33m';\n        message += '[AWS ' + req.service.serviceIdentifier + ' ' + status;\n        message += ' ' + delta.toString() + 's ' + resp.retryCount + ' retries]';\n        if (ansi) message += '\\x1B[0;1m';\n        message += ' ' + AWS.util.string.lowerFirst(req.operation);\n        message += '(' + params + ')';\n        if (ansi) message += '\\x1B[0m';\n        return message;\n      }\n\n      var line = buildMessage();\n      if (typeof logger.log === 'function') {\n        logger.log(line);\n      } else if (typeof logger.write === 'function') {\n        logger.write(line + '\\n');\n      }\n    });\n  }),\n\n  Json: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/json');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  Rest: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  RestJson: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest_json');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  RestXml: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest_xml');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  Query: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/query');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  })\n};\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudformation'] = {};\nAWS.CloudFormation = Service.defineService('cloudformation', ['2010-05-15']);\nObject.defineProperty(apiLoader.services['cloudformation'], '2010-05-15', {\n  get: function get() {\n    var model = require('../apis/cloudformation-2010-05-15.min.json');\n    model.paginators = require('../apis/cloudformation-2010-05-15.paginators.json').pagination;\n    model.waiters = require('../apis/cloudformation-2010-05-15.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudFormation;\n","var AWS = require('../core');\n\n/**\n * Creates a credential provider chain that searches for AWS credentials\n * in a list of credential providers specified by the {providers} property.\n *\n * By default, the chain will use the {defaultProviders} to resolve credentials.\n * These providers will look in the environment using the\n * {AWS.EnvironmentCredentials} class with the 'AWS' and 'AMAZON' prefixes.\n *\n * ## Setting Providers\n *\n * Each provider in the {providers} list should be a function that returns\n * a {AWS.Credentials} object, or a hardcoded credentials object. The function\n * form allows for delayed execution of the credential construction.\n *\n * ## Resolving Credentials from a Chain\n *\n * Call {resolve} to return the first valid credential object that can be\n * loaded by the provider chain.\n *\n * For example, to resolve a chain with a custom provider that checks a file\n * on disk after the set of {defaultProviders}:\n *\n * ```javascript\n * var diskProvider = new AWS.FileSystemCredentials('./creds.json');\n * var chain = new AWS.CredentialProviderChain();\n * chain.providers.push(diskProvider);\n * chain.resolve();\n * ```\n *\n * The above code will return the `diskProvider` object if the\n * file contains credentials and the `defaultProviders` do not contain\n * any credential settings.\n *\n * @!attribute providers\n *   @return [Array<AWS.Credentials, Function>]\n *     a list of credentials objects or functions that return credentials\n *     objects. If the provider is a function, the function will be\n *     executed lazily when the provider needs to be checked for valid\n *     credentials. By default, this object will be set to the\n *     {defaultProviders}.\n *   @see defaultProviders\n */\nAWS.CredentialProviderChain = AWS.util.inherit(AWS.Credentials, {\n\n  /**\n   * Creates a new CredentialProviderChain with a default set of providers\n   * specified by {defaultProviders}.\n   */\n  constructor: function CredentialProviderChain(providers) {\n    if (providers) {\n      this.providers = providers;\n    } else {\n      this.providers = AWS.CredentialProviderChain.defaultProviders.slice(0);\n    }\n    this.resolveCallbacks = [];\n  },\n\n  /**\n   * @!method  resolvePromise()\n   *   Returns a 'thenable' promise.\n   *   Resolves the provider chain by searching for the first set of\n   *   credentials in {providers}.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function(credentials)\n   *     Called if the promise is fulfilled and the provider resolves the chain\n   *     to a credentials object\n   *     @param credentials [AWS.Credentials] the credentials object resolved\n   *       by the provider chain.\n   *   @callback rejectedCallback function(error)\n   *     Called if the promise is rejected.\n   *     @param err [Error] the error object returned if no credentials are found.\n   *   @return [Promise] A promise that represents the state of the `resolve` method call.\n   *   @example Calling the `resolvePromise` method.\n   *     var promise = chain.resolvePromise();\n   *     promise.then(function(credentials) { ... }, function(err) { ... });\n   */\n\n  /**\n   * Resolves the provider chain by searching for the first set of\n   * credentials in {providers}.\n   *\n   * @callback callback function(err, credentials)\n   *   Called when the provider resolves the chain to a credentials object\n   *   or null if no credentials can be found.\n   *\n   *   @param err [Error] the error object returned if no credentials are\n   *     found.\n   *   @param credentials [AWS.Credentials] the credentials object resolved\n   *     by the provider chain.\n   * @return [AWS.CredentialProviderChain] the provider, for chaining.\n   */\n  resolve: function resolve(callback) {\n    var self = this;\n    if (self.providers.length === 0) {\n      callback(new Error('No providers'));\n      return self;\n    }\n\n    if (self.resolveCallbacks.push(callback) === 1) {\n      var index = 0;\n      var providers = self.providers.slice(0);\n\n      function resolveNext(err, creds) {\n        if ((!err && creds) || index === providers.length) {\n          AWS.util.arrayEach(self.resolveCallbacks, function (callback) {\n            callback(err, creds);\n          });\n          self.resolveCallbacks.length = 0;\n          return;\n        }\n\n        var provider = providers[index++];\n        if (typeof provider === 'function') {\n          creds = provider.call();\n        } else {\n          creds = provider;\n        }\n\n        if (creds.get) {\n          creds.get(function (getErr) {\n            resolveNext(getErr, getErr ? null : creds);\n          });\n        } else {\n          resolveNext(null, creds);\n        }\n      }\n\n      resolveNext();\n    }\n\n    return self;\n  }\n});\n\n/**\n * The default set of providers used by a vanilla CredentialProviderChain.\n *\n * In the browser:\n *\n * ```javascript\n * AWS.CredentialProviderChain.defaultProviders = []\n * ```\n *\n * In Node.js:\n *\n * ```javascript\n * AWS.CredentialProviderChain.defaultProviders = [\n *   function () { return new AWS.EnvironmentCredentials('AWS'); },\n *   function () { return new AWS.EnvironmentCredentials('AMAZON'); },\n *   function () { return new AWS.SharedIniFileCredentials(); },\n *   function () { return new AWS.ECSCredentials(); },\n *   function () { return new AWS.ProcessCredentials(); },\n *   function () { return new AWS.TokenFileWebIdentityCredentials(); },\n *   function () { return new AWS.EC2MetadataCredentials() }\n * ]\n * ```\n */\nAWS.CredentialProviderChain.defaultProviders = [];\n\n/**\n * @api private\n */\nAWS.CredentialProviderChain.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.resolvePromise = AWS.util.promisifyMethod('resolve', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.CredentialProviderChain.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.resolvePromise;\n};\n\nAWS.util.addPromises(AWS.CredentialProviderChain);\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['acm'] = {};\nAWS.ACM = Service.defineService('acm', ['2015-12-08']);\nObject.defineProperty(apiLoader.services['acm'], '2015-12-08', {\n  get: function get() {\n    var model = require('../apis/acm-2015-12-08.min.json');\n    model.paginators = require('../apis/acm-2015-12-08.paginators.json').pagination;\n    model.waiters = require('../apis/acm-2015-12-08.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ACM;\n","var AWS = require('../core');\nvar STS = require('../../clients/sts');\n\n/**\n * Represents credentials retrieved from STS SAML support.\n *\n * By default this provider gets credentials using the\n * {AWS.STS.assumeRoleWithSAML} service operation. This operation\n * requires a `RoleArn` containing the ARN of the IAM trust policy for the\n * application for which credentials will be given, as well as a `PrincipalArn`\n * representing the ARN for the SAML identity provider. In addition, the\n * `SAMLAssertion` must be set to the token provided by the identity\n * provider. See {constructor} for an example on creating a credentials\n * object with proper `RoleArn`, `PrincipalArn`, and `SAMLAssertion` values.\n *\n * ## Refreshing Credentials from Identity Service\n *\n * In addition to AWS credentials expiring after a given amount of time, the\n * login token from the identity provider will also expire. Once this token\n * expires, it will not be usable to refresh AWS credentials, and another\n * token will be needed. The SDK does not manage refreshing of the token value,\n * but this can be done through a \"refresh token\" supported by most identity\n * providers. Consult the documentation for the identity provider for refreshing\n * tokens. Once the refreshed token is acquired, you should make sure to update\n * this new token in the credentials object's {params} property. The following\n * code will update the SAMLAssertion, assuming you have retrieved an updated\n * token from the identity provider:\n *\n * ```javascript\n * AWS.config.credentials.params.SAMLAssertion = updatedToken;\n * ```\n *\n * Future calls to `credentials.refresh()` will now use the new token.\n *\n * @!attribute params\n *   @return [map] the map of params passed to\n *     {AWS.STS.assumeRoleWithSAML}. To update the token, set the\n *     `params.SAMLAssertion` property.\n */\nAWS.SAMLCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new credentials object.\n   * @param (see AWS.STS.assumeRoleWithSAML)\n   * @example Creating a new credentials object\n   *   AWS.config.credentials = new AWS.SAMLCredentials({\n   *     RoleArn: 'arn:aws:iam::1234567890:role/SAMLRole',\n   *     PrincipalArn: 'arn:aws:iam::1234567890:role/SAMLPrincipal',\n   *     SAMLAssertion: 'base64-token', // base64-encoded token from IdP\n   *   });\n   * @see AWS.STS.assumeRoleWithSAML\n   */\n  constructor: function SAMLCredentials(params) {\n    AWS.Credentials.call(this);\n    this.expired = true;\n    this.params = params;\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRoleWithSAML}\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    self.createClients();\n    self.service.assumeRoleWithSAML(function (err, data) {\n      if (!err) {\n        self.service.credentialsFrom(data, self);\n      }\n      callback(err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function() {\n    this.service = this.service || new STS({params: this.params});\n  }\n\n});\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['kinesisvideoarchivedmedia'] = {};\nAWS.KinesisVideoArchivedMedia = Service.defineService('kinesisvideoarchivedmedia', ['2017-09-30']);\nObject.defineProperty(apiLoader.services['kinesisvideoarchivedmedia'], '2017-09-30', {\n  get: function get() {\n    var model = require('../apis/kinesis-video-archived-media-2017-09-30.min.json');\n    model.paginators = require('../apis/kinesis-video-archived-media-2017-09-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.KinesisVideoArchivedMedia;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['sns'] = {};\nAWS.SNS = Service.defineService('sns', ['2010-03-31']);\nObject.defineProperty(apiLoader.services['sns'], '2010-03-31', {\n  get: function get() {\n    var model = require('../apis/sns-2010-03-31.min.json');\n    model.paginators = require('../apis/sns-2010-03-31.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SNS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['mturk'] = {};\nAWS.MTurk = Service.defineService('mturk', ['2017-01-17']);\nObject.defineProperty(apiLoader.services['mturk'], '2017-01-17', {\n  get: function get() {\n    var model = require('../apis/mturk-requester-2017-01-17.min.json');\n    model.paginators = require('../apis/mturk-requester-2017-01-17.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MTurk;\n","var AWS = require('../core');\n\n/**\n * @api private\n */\nvar service = null;\n\n/**\n * @api private\n */\nvar api = {\n    signatureVersion: 'v4',\n    signingName: 'rds-db',\n    operations: {}\n};\n\n/**\n * @api private\n */\nvar requiredAuthTokenOptions = {\n    region: 'string',\n    hostname: 'string',\n    port: 'number',\n    username: 'string'\n};\n\n/**\n * A signer object can be used to generate an auth token to a database.\n */\nAWS.RDS.Signer = AWS.util.inherit({\n    /**\n     * Creates a signer object can be used to generate an auth token.\n     *\n     * @option options credentials [AWS.Credentials] the AWS credentials\n     *   to sign requests with. Uses the default credential provider chain\n     *   if not specified.\n     * @option options hostname [String] the hostname of the database to connect to.\n     * @option options port [Number] the port number the database is listening on.\n     * @option options region [String] the region the database is located in.\n     * @option options username [String] the username to login as.\n     * @example Passing in options to constructor\n     *   var signer = new AWS.RDS.Signer({\n     *     credentials: new AWS.SharedIniFileCredentials({profile: 'default'}),\n     *     region: 'us-east-1',\n     *     hostname: 'db.us-east-1.rds.amazonaws.com',\n     *     port: 8000,\n     *     username: 'name'\n     *   });\n     */\n    constructor: function Signer(options) {\n        this.options = options || {};\n    },\n\n    /**\n     * @api private\n     * Strips the protocol from a url.\n     */\n    convertUrlToAuthToken: function convertUrlToAuthToken(url) {\n        // we are always using https as the protocol\n        var protocol = 'https://';\n        if (url.indexOf(protocol) === 0) {\n            return url.substring(protocol.length);\n        }\n    },\n\n    /**\n     * @overload getAuthToken(options = {}, [callback])\n     *   Generate an auth token to a database.\n     *   @note You must ensure that you have static or previously resolved\n     *     credentials if you call this method synchronously (with no callback),\n     *     otherwise it may not properly sign the request. If you cannot guarantee\n     *     this (you are using an asynchronous credential provider, i.e., EC2\n     *     IAM roles), you should always call this method with an asynchronous\n     *     callback.\n     *\n     *   @param options [map] The fields to use when generating an auth token.\n     *     Any options specified here will be merged on top of any options passed\n     *     to AWS.RDS.Signer:\n     *\n     *     * **credentials** (AWS.Credentials) &mdash; the AWS credentials\n     *         to sign requests with. Uses the default credential provider chain\n     *         if not specified.\n     *     * **hostname** (String) &mdash; the hostname of the database to connect to.\n     *     * **port** (Number) &mdash; the port number the database is listening on.\n     *     * **region** (String) &mdash; the region the database is located in.\n     *     * **username** (String) &mdash; the username to login as.\n     *   @return [String] if called synchronously (with no callback), returns the\n     *     auth token.\n     *   @return [null] nothing is returned if a callback is provided.\n     *   @callback callback function (err, token)\n     *     If a callback is supplied, it is called when an auth token has been generated.\n     *     @param err [Error] the error object returned from the signer.\n     *     @param token [String] the auth token.\n     *\n     *   @example Generating an auth token synchronously\n     *     var signer = new AWS.RDS.Signer({\n     *       // configure options\n     *       region: 'us-east-1',\n     *       username: 'default',\n     *       hostname: 'db.us-east-1.amazonaws.com',\n     *       port: 8000\n     *     });\n     *     var token = signer.getAuthToken({\n     *       // these options are merged with those defined when creating the signer, overriding in the case of a duplicate option\n     *       // credentials are not specified here or when creating the signer, so default credential provider will be used\n     *       username: 'test' // overriding username\n     *     });\n     *   @example Generating an auth token asynchronously\n     *     var signer = new AWS.RDS.Signer({\n     *       // configure options\n     *       region: 'us-east-1',\n     *       username: 'default',\n     *       hostname: 'db.us-east-1.amazonaws.com',\n     *       port: 8000\n     *     });\n     *     signer.getAuthToken({\n     *       // these options are merged with those defined when creating the signer, overriding in the case of a duplicate option\n     *       // credentials are not specified here or when creating the signer, so default credential provider will be used\n     *       username: 'test' // overriding username\n     *     }, function(err, token) {\n     *       if (err) {\n     *         // handle error\n     *       } else {\n     *         // use token\n     *       }\n     *     });\n     *\n     */\n    getAuthToken: function getAuthToken(options, callback) {\n        if (typeof options === 'function' && callback === undefined) {\n            callback = options;\n            options = {};\n        }\n        var self = this;\n        var hasCallback = typeof callback === 'function';\n        // merge options with existing options\n        options = AWS.util.merge(this.options, options);\n        // validate options\n        var optionsValidation = this.validateAuthTokenOptions(options);\n        if (optionsValidation !== true) {\n            if (hasCallback) {\n                return callback(optionsValidation, null);\n            }\n            throw optionsValidation;\n        }\n\n        // 15 minutes\n        var expires = 900;\n        // create service to generate a request from\n        var serviceOptions = {\n            region: options.region,\n            endpoint: new AWS.Endpoint(options.hostname + ':' + options.port),\n            paramValidation: false,\n            signatureVersion: 'v4'\n        };\n        if (options.credentials) {\n            serviceOptions.credentials = options.credentials;\n        }\n        service = new AWS.Service(serviceOptions);\n        // ensure the SDK is using sigv4 signing (config is not enough)\n        service.api = api;\n\n        var request = service.makeRequest();\n        // add listeners to request to properly build auth token\n        this.modifyRequestForAuthToken(request, options);\n\n        if (hasCallback) {\n            request.presign(expires, function(err, url) {\n                if (url) {\n                    url = self.convertUrlToAuthToken(url);\n                }\n                callback(err, url);\n            });\n        } else {\n            var url = request.presign(expires);\n            return this.convertUrlToAuthToken(url);\n        }\n    },\n\n    /**\n     * @api private\n     * Modifies a request to allow the presigner to generate an auth token.\n     */\n    modifyRequestForAuthToken: function modifyRequestForAuthToken(request, options) {\n        request.on('build', request.buildAsGet);\n        var httpRequest = request.httpRequest;\n        httpRequest.body = AWS.util.queryParamsToString({\n            Action: 'connect',\n            DBUser: options.username\n        });\n    },\n\n    /**\n     * @api private\n     * Validates that the options passed in contain all the keys with values of the correct type that\n     *   are needed to generate an auth token.\n     */\n    validateAuthTokenOptions: function validateAuthTokenOptions(options) {\n        // iterate over all keys in options\n        var message = '';\n        options = options || {};\n        for (var key in requiredAuthTokenOptions) {\n            if (!Object.prototype.hasOwnProperty.call(requiredAuthTokenOptions, key)) {\n                continue;\n            }\n            if (typeof options[key] !== requiredAuthTokenOptions[key]) {\n                message += 'option \\'' + key + '\\' should have been type \\'' + requiredAuthTokenOptions[key] + '\\', was \\'' + typeof options[key] + '\\'.\\n';\n            }\n        }\n        if (message.length) {\n            return AWS.util.error(new Error(), {\n                code: 'InvalidParameter',\n                message: message\n            });\n        }\n        return true;\n    }\n});\n","var util = require('../util');\nvar XmlNode = require('./xml-node').XmlNode;\nvar XmlText = require('./xml-text').XmlText;\n\nfunction XmlBuilder() { }\n\nXmlBuilder.prototype.toXML = function(params, shape, rootElement, noEmpty) {\n  var xml = new XmlNode(rootElement);\n  applyNamespaces(xml, shape, true);\n  serialize(xml, params, shape);\n  return xml.children.length > 0 || noEmpty ? xml.toString() : '';\n};\n\nfunction serialize(xml, value, shape) {\n  switch (shape.type) {\n    case 'structure': return serializeStructure(xml, value, shape);\n    case 'map': return serializeMap(xml, value, shape);\n    case 'list': return serializeList(xml, value, shape);\n    default: return serializeScalar(xml, value, shape);\n  }\n}\n\nfunction serializeStructure(xml, params, shape) {\n  util.arrayEach(shape.memberNames, function(memberName) {\n    var memberShape = shape.members[memberName];\n    if (memberShape.location !== 'body') return;\n\n    var value = params[memberName];\n    var name = memberShape.name;\n    if (value !== undefined && value !== null) {\n      if (memberShape.isXmlAttribute) {\n        xml.addAttribute(name, value);\n      } else if (memberShape.flattened) {\n        serialize(xml, value, memberShape);\n      } else {\n        var element = new XmlNode(name);\n        xml.addChildNode(element);\n        applyNamespaces(element, memberShape);\n        serialize(element, value, memberShape);\n      }\n    }\n  });\n}\n\nfunction serializeMap(xml, map, shape) {\n  var xmlKey = shape.key.name || 'key';\n  var xmlValue = shape.value.name || 'value';\n\n  util.each(map, function(key, value) {\n    var entry = new XmlNode(shape.flattened ? shape.name : 'entry');\n    xml.addChildNode(entry);\n\n    var entryKey = new XmlNode(xmlKey);\n    var entryValue = new XmlNode(xmlValue);\n    entry.addChildNode(entryKey);\n    entry.addChildNode(entryValue);\n\n    serialize(entryKey, key, shape.key);\n    serialize(entryValue, value, shape.value);\n  });\n}\n\nfunction serializeList(xml, list, shape) {\n  if (shape.flattened) {\n    util.arrayEach(list, function(value) {\n      var name = shape.member.name || shape.name;\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  } else {\n    util.arrayEach(list, function(value) {\n      var name = shape.member.name || 'member';\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  }\n}\n\nfunction serializeScalar(xml, value, shape) {\n  xml.addChildNode(\n    new XmlText(shape.toWireFormat(value))\n  );\n}\n\nfunction applyNamespaces(xml, shape, isRoot) {\n  var uri, prefix = 'xmlns';\n  if (shape.xmlNamespaceUri) {\n    uri = shape.xmlNamespaceUri;\n    if (shape.xmlNamespacePrefix) prefix += ':' + shape.xmlNamespacePrefix;\n  } else if (isRoot && shape.api.xmlNamespaceUri) {\n    uri = shape.api.xmlNamespaceUri;\n  }\n\n  if (uri) xml.addAttribute(prefix, uri);\n}\n\n/**\n * @api private\n */\nmodule.exports = XmlBuilder;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudwatch'] = {};\nAWS.CloudWatch = Service.defineService('cloudwatch', ['2010-08-01']);\nObject.defineProperty(apiLoader.services['cloudwatch'], '2010-08-01', {\n  get: function get() {\n    var model = require('../apis/monitoring-2010-08-01.min.json');\n    model.paginators = require('../apis/monitoring-2010-08-01.paginators.json').pagination;\n    model.waiters = require('../apis/monitoring-2010-08-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudWatch;\n","var Buffer = require('buffer/').Buffer;\nvar hashUtils = require('./browserHashUtils');\n\nvar BLOCK_SIZE = 64;\n\nvar DIGEST_LENGTH = 20;\n\nvar KEY = new Uint32Array([\n    0x5a827999,\n    0x6ed9eba1,\n    0x8f1bbcdc | 0,\n    0xca62c1d6 | 0\n]);\n\nvar INIT = [\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19,\n];\n\nvar MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n\n/**\n * @api private\n */\nfunction Sha1() {\n    this.h0 = 0x67452301;\n    this.h1 = 0xEFCDAB89;\n    this.h2 = 0x98BADCFE;\n    this.h3 = 0x10325476;\n    this.h4 = 0xC3D2E1F0;\n    // The first 64 bytes (16 words) is the data chunk\n    this.block = new Uint32Array(80);\n    this.offset = 0;\n    this.shift = 24;\n    this.totalLength = 0;\n}\n\n/**\n * @api private\n */\nmodule.exports = exports = Sha1;\n\nSha1.BLOCK_SIZE = BLOCK_SIZE;\n\nSha1.prototype.update = function (data) {\n    if (this.finished) {\n        throw new Error('Attempted to update an already finished hash.');\n    }\n\n    if (hashUtils.isEmptyData(data)) {\n        return this;\n    }\n\n    data = hashUtils.convertToBuffer(data);\n\n    var length = data.length;\n    this.totalLength += length * 8;\n    for (var i = 0; i < length; i++) {\n        this.write(data[i]);\n    }\n\n    return this;\n};\n\nSha1.prototype.write = function write(byte) {\n    this.block[this.offset] |= (byte & 0xff) << this.shift;\n    if (this.shift) {\n        this.shift -= 8;\n    } else {\n        this.offset++;\n        this.shift = 24;\n    }\n\n    if (this.offset === 16) this.processBlock();\n};\n\nSha1.prototype.digest = function (encoding) {\n    // Pad\n    this.write(0x80);\n    if (this.offset > 14 || (this.offset === 14 && this.shift < 24)) {\n      this.processBlock();\n    }\n    this.offset = 14;\n    this.shift = 24;\n\n    // 64-bit length big-endian\n    this.write(0x00); // numbers this big aren't accurate in javascript anyway\n    this.write(0x00); // ..So just hard-code to zero.\n    this.write(this.totalLength > 0xffffffffff ? this.totalLength / 0x10000000000 : 0x00);\n    this.write(this.totalLength > 0xffffffff ? this.totalLength / 0x100000000 : 0x00);\n    for (var s = 24; s >= 0; s -= 8) {\n        this.write(this.totalLength >> s);\n    }\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    var out = new Buffer(DIGEST_LENGTH);\n    var outView = new DataView(out.buffer);\n    outView.setUint32(0, this.h0, false);\n    outView.setUint32(4, this.h1, false);\n    outView.setUint32(8, this.h2, false);\n    outView.setUint32(12, this.h3, false);\n    outView.setUint32(16, this.h4, false);\n\n    return encoding ? out.toString(encoding) : out;\n};\n\nSha1.prototype.processBlock = function processBlock() {\n    // Extend the sixteen 32-bit words into eighty 32-bit words:\n    for (var i = 16; i < 80; i++) {\n      var w = this.block[i - 3] ^ this.block[i - 8] ^ this.block[i - 14] ^ this.block[i - 16];\n      this.block[i] = (w << 1) | (w >>> 31);\n    }\n\n    // Initialize hash value for this chunk:\n    var a = this.h0;\n    var b = this.h1;\n    var c = this.h2;\n    var d = this.h3;\n    var e = this.h4;\n    var f, k;\n\n    // Main loop:\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = d ^ (b & (c ^ d));\n        k = 0x5A827999;\n      }\n      else if (i < 40) {\n        f = b ^ c ^ d;\n        k = 0x6ED9EBA1;\n      }\n      else if (i < 60) {\n        f = (b & c) | (d & (b | c));\n        k = 0x8F1BBCDC;\n      }\n      else {\n        f = b ^ c ^ d;\n        k = 0xCA62C1D6;\n      }\n      var temp = (a << 5 | a >>> 27) + f + e + k + (this.block[i]|0);\n      e = d;\n      d = c;\n      c = (b << 30 | b >>> 2);\n      b = a;\n      a = temp;\n    }\n\n    // Add this chunk's hash to result so far:\n    this.h0 = (this.h0 + a) | 0;\n    this.h1 = (this.h1 + b) | 0;\n    this.h2 = (this.h2 + c) | 0;\n    this.h3 = (this.h3 + d) | 0;\n    this.h4 = (this.h4 + e) | 0;\n\n    // The block is now reusable.\n    this.offset = 0;\n    for (i = 0; i < 16; i++) {\n        this.block[i] = 0;\n    }\n};\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['forecastqueryservice'] = {};\nAWS.ForecastQueryService = Service.defineService('forecastqueryservice', ['2018-06-26']);\nObject.defineProperty(apiLoader.services['forecastqueryservice'], '2018-06-26', {\n  get: function get() {\n    var model = require('../apis/forecastquery-2018-06-26.min.json');\n    model.paginators = require('../apis/forecastquery-2018-06-26.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ForecastQueryService;\n","var hashUtils = require('./browserHashUtils');\nvar Buffer = require('buffer/').Buffer;\n\nvar BLOCK_SIZE = 64;\n\nvar DIGEST_LENGTH = 16;\n\nvar INIT = [\n    0x67452301,\n    0xefcdab89,\n    0x98badcfe,\n    0x10325476,\n];\n\n/**\n * @api private\n */\nfunction Md5() {\n    this.state = [\n        0x67452301,\n        0xefcdab89,\n        0x98badcfe,\n        0x10325476,\n    ];\n    this.buffer = new DataView(new ArrayBuffer(BLOCK_SIZE));\n    this.bufferLength = 0;\n    this.bytesHashed = 0;\n    this.finished = false;\n}\n\n/**\n * @api private\n */\nmodule.exports = exports = Md5;\n\nMd5.BLOCK_SIZE = BLOCK_SIZE;\n\nMd5.prototype.update = function (sourceData) {\n    if (hashUtils.isEmptyData(sourceData)) {\n        return this;\n    } else if (this.finished) {\n        throw new Error('Attempted to update an already finished hash.');\n    }\n\n    var data = hashUtils.convertToBuffer(sourceData);\n    var position = 0;\n    var byteLength = data.byteLength;\n    this.bytesHashed += byteLength;\n    while (byteLength > 0) {\n        this.buffer.setUint8(this.bufferLength++, data[position++]);\n        byteLength--;\n        if (this.bufferLength === BLOCK_SIZE) {\n            this.hashBuffer();\n            this.bufferLength = 0;\n        }\n    }\n\n    return this;\n};\n\nMd5.prototype.digest = function (encoding) {\n    if (!this.finished) {\n        var _a = this, buffer = _a.buffer, undecoratedLength = _a.bufferLength, bytesHashed = _a.bytesHashed;\n        var bitsHashed = bytesHashed * 8;\n        buffer.setUint8(this.bufferLength++, 128);\n        // Ensure the final block has enough room for the hashed length\n        if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n            for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {\n                buffer.setUint8(i, 0);\n            }\n            this.hashBuffer();\n            this.bufferLength = 0;\n        }\n        for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n            buffer.setUint8(i, 0);\n        }\n        buffer.setUint32(BLOCK_SIZE - 8, bitsHashed >>> 0, true);\n        buffer.setUint32(BLOCK_SIZE - 4, Math.floor(bitsHashed / 0x100000000), true);\n        this.hashBuffer();\n        this.finished = true;\n    }\n    var out = new DataView(new ArrayBuffer(DIGEST_LENGTH));\n    for (var i = 0; i < 4; i++) {\n        out.setUint32(i * 4, this.state[i], true);\n    }\n    var buff = new Buffer(out.buffer, out.byteOffset, out.byteLength);\n    return encoding ? buff.toString(encoding) : buff;\n};\n\nMd5.prototype.hashBuffer = function () {\n    var _a = this, buffer = _a.buffer, state = _a.state;\n    var a = state[0], b = state[1], c = state[2], d = state[3];\n    a = ff(a, b, c, d, buffer.getUint32(0, true), 7, 0xd76aa478);\n    d = ff(d, a, b, c, buffer.getUint32(4, true), 12, 0xe8c7b756);\n    c = ff(c, d, a, b, buffer.getUint32(8, true), 17, 0x242070db);\n    b = ff(b, c, d, a, buffer.getUint32(12, true), 22, 0xc1bdceee);\n    a = ff(a, b, c, d, buffer.getUint32(16, true), 7, 0xf57c0faf);\n    d = ff(d, a, b, c, buffer.getUint32(20, true), 12, 0x4787c62a);\n    c = ff(c, d, a, b, buffer.getUint32(24, true), 17, 0xa8304613);\n    b = ff(b, c, d, a, buffer.getUint32(28, true), 22, 0xfd469501);\n    a = ff(a, b, c, d, buffer.getUint32(32, true), 7, 0x698098d8);\n    d = ff(d, a, b, c, buffer.getUint32(36, true), 12, 0x8b44f7af);\n    c = ff(c, d, a, b, buffer.getUint32(40, true), 17, 0xffff5bb1);\n    b = ff(b, c, d, a, buffer.getUint32(44, true), 22, 0x895cd7be);\n    a = ff(a, b, c, d, buffer.getUint32(48, true), 7, 0x6b901122);\n    d = ff(d, a, b, c, buffer.getUint32(52, true), 12, 0xfd987193);\n    c = ff(c, d, a, b, buffer.getUint32(56, true), 17, 0xa679438e);\n    b = ff(b, c, d, a, buffer.getUint32(60, true), 22, 0x49b40821);\n    a = gg(a, b, c, d, buffer.getUint32(4, true), 5, 0xf61e2562);\n    d = gg(d, a, b, c, buffer.getUint32(24, true), 9, 0xc040b340);\n    c = gg(c, d, a, b, buffer.getUint32(44, true), 14, 0x265e5a51);\n    b = gg(b, c, d, a, buffer.getUint32(0, true), 20, 0xe9b6c7aa);\n    a = gg(a, b, c, d, buffer.getUint32(20, true), 5, 0xd62f105d);\n    d = gg(d, a, b, c, buffer.getUint32(40, true), 9, 0x02441453);\n    c = gg(c, d, a, b, buffer.getUint32(60, true), 14, 0xd8a1e681);\n    b = gg(b, c, d, a, buffer.getUint32(16, true), 20, 0xe7d3fbc8);\n    a = gg(a, b, c, d, buffer.getUint32(36, true), 5, 0x21e1cde6);\n    d = gg(d, a, b, c, buffer.getUint32(56, true), 9, 0xc33707d6);\n    c = gg(c, d, a, b, buffer.getUint32(12, true), 14, 0xf4d50d87);\n    b = gg(b, c, d, a, buffer.getUint32(32, true), 20, 0x455a14ed);\n    a = gg(a, b, c, d, buffer.getUint32(52, true), 5, 0xa9e3e905);\n    d = gg(d, a, b, c, buffer.getUint32(8, true), 9, 0xfcefa3f8);\n    c = gg(c, d, a, b, buffer.getUint32(28, true), 14, 0x676f02d9);\n    b = gg(b, c, d, a, buffer.getUint32(48, true), 20, 0x8d2a4c8a);\n    a = hh(a, b, c, d, buffer.getUint32(20, true), 4, 0xfffa3942);\n    d = hh(d, a, b, c, buffer.getUint32(32, true), 11, 0x8771f681);\n    c = hh(c, d, a, b, buffer.getUint32(44, true), 16, 0x6d9d6122);\n    b = hh(b, c, d, a, buffer.getUint32(56, true), 23, 0xfde5380c);\n    a = hh(a, b, c, d, buffer.getUint32(4, true), 4, 0xa4beea44);\n    d = hh(d, a, b, c, buffer.getUint32(16, true), 11, 0x4bdecfa9);\n    c = hh(c, d, a, b, buffer.getUint32(28, true), 16, 0xf6bb4b60);\n    b = hh(b, c, d, a, buffer.getUint32(40, true), 23, 0xbebfbc70);\n    a = hh(a, b, c, d, buffer.getUint32(52, true), 4, 0x289b7ec6);\n    d = hh(d, a, b, c, buffer.getUint32(0, true), 11, 0xeaa127fa);\n    c = hh(c, d, a, b, buffer.getUint32(12, true), 16, 0xd4ef3085);\n    b = hh(b, c, d, a, buffer.getUint32(24, true), 23, 0x04881d05);\n    a = hh(a, b, c, d, buffer.getUint32(36, true), 4, 0xd9d4d039);\n    d = hh(d, a, b, c, buffer.getUint32(48, true), 11, 0xe6db99e5);\n    c = hh(c, d, a, b, buffer.getUint32(60, true), 16, 0x1fa27cf8);\n    b = hh(b, c, d, a, buffer.getUint32(8, true), 23, 0xc4ac5665);\n    a = ii(a, b, c, d, buffer.getUint32(0, true), 6, 0xf4292244);\n    d = ii(d, a, b, c, buffer.getUint32(28, true), 10, 0x432aff97);\n    c = ii(c, d, a, b, buffer.getUint32(56, true), 15, 0xab9423a7);\n    b = ii(b, c, d, a, buffer.getUint32(20, true), 21, 0xfc93a039);\n    a = ii(a, b, c, d, buffer.getUint32(48, true), 6, 0x655b59c3);\n    d = ii(d, a, b, c, buffer.getUint32(12, true), 10, 0x8f0ccc92);\n    c = ii(c, d, a, b, buffer.getUint32(40, true), 15, 0xffeff47d);\n    b = ii(b, c, d, a, buffer.getUint32(4, true), 21, 0x85845dd1);\n    a = ii(a, b, c, d, buffer.getUint32(32, true), 6, 0x6fa87e4f);\n    d = ii(d, a, b, c, buffer.getUint32(60, true), 10, 0xfe2ce6e0);\n    c = ii(c, d, a, b, buffer.getUint32(24, true), 15, 0xa3014314);\n    b = ii(b, c, d, a, buffer.getUint32(52, true), 21, 0x4e0811a1);\n    a = ii(a, b, c, d, buffer.getUint32(16, true), 6, 0xf7537e82);\n    d = ii(d, a, b, c, buffer.getUint32(44, true), 10, 0xbd3af235);\n    c = ii(c, d, a, b, buffer.getUint32(8, true), 15, 0x2ad7d2bb);\n    b = ii(b, c, d, a, buffer.getUint32(36, true), 21, 0xeb86d391);\n    state[0] = (a + state[0]) & 0xFFFFFFFF;\n    state[1] = (b + state[1]) & 0xFFFFFFFF;\n    state[2] = (c + state[2]) & 0xFFFFFFFF;\n    state[3] = (d + state[3]) & 0xFFFFFFFF;\n};\n\nfunction cmn(q, a, b, x, s, t) {\n    a = (((a + q) & 0xFFFFFFFF) + ((x + t) & 0xFFFFFFFF)) & 0xFFFFFFFF;\n    return (((a << s) | (a >>> (32 - s))) + b) & 0xFFFFFFFF;\n}\n\nfunction ff(a, b, c, d, x, s, t) {\n    return cmn((b & c) | ((~b) & d), a, b, x, s, t);\n}\n\nfunction gg(a, b, c, d, x, s, t) {\n    return cmn((b & d) | (c & (~d)), a, b, x, s, t);\n}\n\nfunction hh(a, b, c, d, x, s, t) {\n    return cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction ii(a, b, c, d, x, s, t) {\n    return cmn(c ^ (b | (~d)), a, b, x, s, t);\n}\n","var AWS = require('../core');\nvar resolveRegionalEndpointsFlag = require('../config_regional_endpoint');\nvar ENV_REGIONAL_ENDPOINT_ENABLED = 'AWS_STS_REGIONAL_ENDPOINTS';\nvar CONFIG_REGIONAL_ENDPOINT_ENABLED = 'sts_regional_endpoints';\n\nAWS.util.update(AWS.STS.prototype, {\n  /**\n   * @overload credentialsFrom(data, credentials = null)\n   *   Creates a credentials object from STS response data containing\n   *   credentials information. Useful for quickly setting AWS credentials.\n   *\n   *   @note This is a low-level utility function. If you want to load temporary\n   *     credentials into your process for subsequent requests to AWS resources,\n   *     you should use {AWS.TemporaryCredentials} instead.\n   *   @param data [map] data retrieved from a call to {getFederatedToken},\n   *     {getSessionToken}, {assumeRole}, or {assumeRoleWithWebIdentity}.\n   *   @param credentials [AWS.Credentials] an optional credentials object to\n   *     fill instead of creating a new object. Useful when modifying an\n   *     existing credentials object from a refresh call.\n   *   @return [AWS.TemporaryCredentials] the set of temporary credentials\n   *     loaded from a raw STS operation response.\n   *   @example Using credentialsFrom to load global AWS credentials\n   *     var sts = new AWS.STS();\n   *     sts.getSessionToken(function (err, data) {\n   *       if (err) console.log(\"Error getting credentials\");\n   *       else {\n   *         AWS.config.credentials = sts.credentialsFrom(data);\n   *       }\n   *     });\n   *   @see AWS.TemporaryCredentials\n   */\n  credentialsFrom: function credentialsFrom(data, credentials) {\n    if (!data) return null;\n    if (!credentials) credentials = new AWS.TemporaryCredentials();\n    credentials.expired = false;\n    credentials.accessKeyId = data.Credentials.AccessKeyId;\n    credentials.secretAccessKey = data.Credentials.SecretAccessKey;\n    credentials.sessionToken = data.Credentials.SessionToken;\n    credentials.expireTime = data.Credentials.Expiration;\n    return credentials;\n  },\n\n  assumeRoleWithWebIdentity: function assumeRoleWithWebIdentity(params, callback) {\n    return this.makeUnauthenticatedRequest('assumeRoleWithWebIdentity', params, callback);\n  },\n\n  assumeRoleWithSAML: function assumeRoleWithSAML(params, callback) {\n    return this.makeUnauthenticatedRequest('assumeRoleWithSAML', params, callback);\n  },\n\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.addListener('validate', this.optInRegionalEndpoint, true);\n  },\n\n  /**\n   * @api private\n   */\n  optInRegionalEndpoint: function optInRegionalEndpoint(req) {\n    var service = req.service;\n    var config = service.config;\n    config.stsRegionalEndpoints = resolveRegionalEndpointsFlag(service._originalConfig, {\n      env: ENV_REGIONAL_ENDPOINT_ENABLED,\n      sharedConfig: CONFIG_REGIONAL_ENDPOINT_ENABLED,\n      clientConfig: 'stsRegionalEndpoints'\n    });\n    if (\n      config.stsRegionalEndpoints === 'regional' &&\n      service.isGlobalEndpoint\n    ) {\n      //client will throw if region is not supplied; request will be signed with specified region\n      if (!config.region) {\n        throw AWS.util.error(new Error(),\n          {code: 'ConfigError', message: 'Missing region in config'});\n      }\n      var insertPoint = config.endpoint.indexOf('.amazonaws.com');\n      var regionalEndpoint = config.endpoint.substring(0, insertPoint) +\n        '.' + config.region + config.endpoint.substring(insertPoint);\n      req.httpRequest.updateEndpoint(regionalEndpoint);\n      req.httpRequest.region = config.region;\n    }\n  }\n\n});\n","var Buffer = require('buffer/').Buffer;\nvar hashUtils = require('./browserHashUtils');\n\nvar BLOCK_SIZE = 64;\n\nvar DIGEST_LENGTH = 32;\n\nvar KEY = new Uint32Array([\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2\n]);\n\nvar INIT = [\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19,\n];\n\nvar MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n\n/**\n * @private\n */\nfunction Sha256() {\n    this.state = [\n        0x6a09e667,\n        0xbb67ae85,\n        0x3c6ef372,\n        0xa54ff53a,\n        0x510e527f,\n        0x9b05688c,\n        0x1f83d9ab,\n        0x5be0cd19,\n    ];\n    this.temp = new Int32Array(64);\n    this.buffer = new Uint8Array(64);\n    this.bufferLength = 0;\n    this.bytesHashed = 0;\n    /**\n     * @private\n     */\n    this.finished = false;\n}\n\n/**\n * @api private\n */\nmodule.exports = exports = Sha256;\n\nSha256.BLOCK_SIZE = BLOCK_SIZE;\n\nSha256.prototype.update = function (data) {\n    if (this.finished) {\n        throw new Error('Attempted to update an already finished hash.');\n    }\n\n    if (hashUtils.isEmptyData(data)) {\n        return this;\n    }\n\n    data = hashUtils.convertToBuffer(data);\n\n    var position = 0;\n    var byteLength = data.byteLength;\n    this.bytesHashed += byteLength;\n    if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n        throw new Error('Cannot hash more than 2^53 - 1 bits');\n    }\n\n    while (byteLength > 0) {\n        this.buffer[this.bufferLength++] = data[position++];\n        byteLength--;\n        if (this.bufferLength === BLOCK_SIZE) {\n            this.hashBuffer();\n            this.bufferLength = 0;\n        }\n    }\n\n    return this;\n};\n\nSha256.prototype.digest = function (encoding) {\n    if (!this.finished) {\n        var bitsHashed = this.bytesHashed * 8;\n        var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n        var undecoratedLength = this.bufferLength;\n        bufferView.setUint8(this.bufferLength++, 0x80);\n        // Ensure the final block has enough room for the hashed length\n        if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n            for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {\n                bufferView.setUint8(i, 0);\n            }\n            this.hashBuffer();\n            this.bufferLength = 0;\n        }\n        for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n            bufferView.setUint8(i, 0);\n        }\n        bufferView.setUint32(BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n        bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n        this.hashBuffer();\n        this.finished = true;\n    }\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    var out = new Buffer(DIGEST_LENGTH);\n    for (var i = 0; i < 8; i++) {\n        out[i * 4] = (this.state[i] >>> 24) & 0xff;\n        out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n        out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n        out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n    return encoding ? out.toString(encoding) : out;\n};\n\nSha256.prototype.hashBuffer = function () {\n    var _a = this,\n        buffer = _a.buffer,\n        state = _a.state;\n    var state0 = state[0],\n        state1 = state[1],\n        state2 = state[2],\n        state3 = state[3],\n        state4 = state[4],\n        state5 = state[5],\n        state6 = state[6],\n        state7 = state[7];\n    for (var i = 0; i < BLOCK_SIZE; i++) {\n        if (i < 16) {\n            this.temp[i] = (((buffer[i * 4] & 0xff) << 24) |\n                ((buffer[(i * 4) + 1] & 0xff) << 16) |\n                ((buffer[(i * 4) + 2] & 0xff) << 8) |\n                (buffer[(i * 4) + 3] & 0xff));\n        }\n        else {\n            var u = this.temp[i - 2];\n            var t1_1 = (u >>> 17 | u << 15) ^\n                (u >>> 19 | u << 13) ^\n                (u >>> 10);\n            u = this.temp[i - 15];\n            var t2_1 = (u >>> 7 | u << 25) ^\n                (u >>> 18 | u << 14) ^\n                (u >>> 3);\n            this.temp[i] = (t1_1 + this.temp[i - 7] | 0) +\n                (t2_1 + this.temp[i - 16] | 0);\n        }\n        var t1 = (((((state4 >>> 6 | state4 << 26) ^\n            (state4 >>> 11 | state4 << 21) ^\n            (state4 >>> 25 | state4 << 7))\n            + ((state4 & state5) ^ (~state4 & state6))) | 0)\n            + ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) | 0;\n        var t2 = (((state0 >>> 2 | state0 << 30) ^\n            (state0 >>> 13 | state0 << 19) ^\n            (state0 >>> 22 | state0 << 10)) + ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) | 0;\n        state7 = state6;\n        state6 = state5;\n        state5 = state4;\n        state4 = (state3 + t1) | 0;\n        state3 = state2;\n        state2 = state1;\n        state1 = state0;\n        state0 = (t1 + t2) | 0;\n    }\n    state[0] += state0;\n    state[1] += state1;\n    state[2] += state2;\n    state[3] += state3;\n    state[4] += state4;\n    state[5] += state5;\n    state[6] += state6;\n    state[7] += state7;\n};\n","var AWS = require('../core');\nvar regionUtil = require('../region_config');\n\nvar s3util = {\n  /**\n   * @api private\n   */\n  isArnInParam: function isArnInParam(req, paramName) {\n    var inputShape = (req.service.api.operations[req.operation] || {}).input || {};\n    var inputMembers = inputShape.members || {};\n    if (!req.params[paramName] || !inputMembers[paramName]) return false;\n    return AWS.util.ARN.validate(req.params[paramName]);\n  },\n\n  /**\n   * Validate service component from ARN supplied in Bucket parameter\n   */\n  validateArnService: function validateArnService(req) {\n    var parsedArn = req.service._parsedArn;\n\n    if (parsedArn.service !== 's3' && parsedArn.service !== 's3-outposts') {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'expect \\'s3\\' or \\'s3-outposts\\' in ARN service component'\n      });\n    }\n  },\n\n  /**\n   * Validate account ID from ARN supplied in Bucket parameter is a valid account\n   */\n  validateArnAccount: function validateArnAccount(req) {\n    var parsedArn = req.service._parsedArn;\n\n    if (!/[0-9]{12}/.exec(parsedArn.accountId)) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'ARN accountID does not match regex \"[0-9]{12}\"'\n      });\n    }\n  },\n\n  /**\n   * Validate ARN supplied in Bucket parameter is a valid access point ARN\n   */\n  validateS3AccessPointArn: function validateS3AccessPointArn(req) {\n    var parsedArn = req.service._parsedArn;\n\n    //can be ':' or '/'\n    var delimiter = parsedArn.resource['accesspoint'.length];\n\n    if (parsedArn.resource.split(delimiter).length !== 2) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'Access Point ARN should have one resource accesspoint/{accesspointName}'\n      });\n    }\n\n    var accessPoint = parsedArn.resource.split(delimiter)[1];\n    var accessPointPrefix = accessPoint + '-' + parsedArn.accountId;\n    if (!s3util.dnsCompatibleBucketName(accessPointPrefix) || accessPointPrefix.match(/\\./)) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'Access point resource in ARN is not DNS compatible. Got ' + accessPoint\n      });\n    }\n\n    //set parsed valid access point\n    req.service._parsedArn.accessPoint = accessPoint;\n  },\n\n  /**\n   * Validate Outposts ARN supplied in Bucket parameter is a valid outposts ARN\n   */\n  validateOutpostsArn: function validateOutpostsArn(req) {\n    var parsedArn = req.service._parsedArn;\n\n    if (\n      parsedArn.resource.indexOf('outpost:') !== 0 &&\n      parsedArn.resource.indexOf('outpost/') !== 0\n    ) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'ARN resource should begin with \\'outpost/\\''\n      });\n    }\n\n    //can be ':' or '/'\n    var delimiter = parsedArn.resource['outpost'.length];\n    var outpostId = parsedArn.resource.split(delimiter)[1];\n    var dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n    if (!dnsHostRegex.test(outpostId)) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'Outpost resource in ARN is not DNS compatible. Got ' + outpostId\n      });\n    }\n    req.service._parsedArn.outpostId = outpostId;\n  },\n\n  /**\n   * Validate Outposts ARN supplied in Bucket parameter is a valid outposts ARN\n   */\n  validateOutpostsAccessPointArn: function validateOutpostsAccessPointArn(req) {\n    var parsedArn = req.service._parsedArn;\n\n    //can be ':' or '/'\n    var delimiter = parsedArn.resource['outpost'.length];\n\n    if (parsedArn.resource.split(delimiter).length !== 4) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'Outposts ARN should have two resources outpost/{outpostId}/accesspoint/{accesspointName}'\n      });\n    }\n\n    var accessPoint = parsedArn.resource.split(delimiter)[3];\n    var accessPointPrefix = accessPoint + '-' + parsedArn.accountId;\n    if (!s3util.dnsCompatibleBucketName(accessPointPrefix) || accessPointPrefix.match(/\\./)) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'Access point resource in ARN is not DNS compatible. Got ' + accessPoint\n      });\n    }\n\n    //set parsed valid access point\n    req.service._parsedArn.accessPoint = accessPoint;\n  },\n\n  /**\n   * Validate region field in ARN supplied in Bucket parameter is a valid region\n   */\n  validateArnRegion: function validateArnRegion(req) {\n    var useArnRegion = s3util.loadUseArnRegionConfig(req);\n    var regionFromArn = req.service._parsedArn.region;\n    var clientRegion = req.service.config.region;\n\n    if (!regionFromArn) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'ARN region is empty'\n      });\n    }\n\n    if (\n      clientRegion.indexOf('fips') >= 0 ||\n      regionFromArn.indexOf('fips') >= 0\n    ) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'ARN endpoint is not compatible with FIPS region'\n      });\n    }\n\n    if (!useArnRegion && regionFromArn !== clientRegion) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'Configured region conflicts with access point region'\n      });\n    } else if (\n      useArnRegion &&\n      regionUtil.getEndpointSuffix(regionFromArn) !== regionUtil.getEndpointSuffix(clientRegion)\n    ) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'Configured region and access point region not in same partition'\n      });\n    }\n\n    if (req.service.config.useAccelerateEndpoint) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'useAccelerateEndpoint config is not supported with access point ARN'\n      });\n    }\n\n    if (req.service._parsedArn.service === 's3-outposts' && req.service.config.useDualstack) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'useDualstack config is not supported with outposts access point ARN'\n      });\n    }\n  },\n\n  loadUseArnRegionConfig: function loadUseArnRegionConfig(req) {\n    var envName = 'AWS_S3_USE_ARN_REGION';\n    var configName = 's3_use_arn_region';\n    var useArnRegion = true;\n    var originalConfig = req.service._originalConfig || {};\n    if (req.service.config.s3UseArnRegion !== undefined) {\n      return req.service.config.s3UseArnRegion;\n    } else if (originalConfig.s3UseArnRegion !== undefined) {\n      useArnRegion = originalConfig.s3UseArnRegion === true;\n    } else if (AWS.util.isNode()) {\n      //load from environmental variable AWS_USE_ARN_REGION\n      if (process.env[envName]) {\n        var value = process.env[envName].trim().toLowerCase();\n        if (['false', 'true'].indexOf(value) < 0) {\n          throw AWS.util.error(new Error(), {\n            code: 'InvalidConfiguration',\n            message: envName + ' only accepts true or false. Got ' + process.env[envName],\n            retryable: false\n          });\n        }\n        useArnRegion = value === 'true';\n      } else {  //load from shared config property use_arn_region\n        var profiles = {};\n        var profile = {};\n        try {\n          profiles = AWS.util.getProfilesFromSharedConfig(AWS.util.iniLoader);\n          profile = profiles[process.env.AWS_PROFILE || AWS.util.defaultProfile];\n        } catch (e) {}\n        if (profile[configName]) {\n          if (['false', 'true'].indexOf(profile[configName].trim().toLowerCase()) < 0) {\n            throw AWS.util.error(new Error(), {\n              code: 'InvalidConfiguration',\n              message: configName + ' only accepts true or false. Got ' + profile[configName],\n              retryable: false\n            });\n          }\n          useArnRegion = profile[configName].trim().toLowerCase() === 'true';\n        }\n      }\n    }\n    req.service.config.s3UseArnRegion = useArnRegion;\n    return useArnRegion;\n  },\n\n  /**\n   * Validations before URI can be populated\n   */\n  validatePopulateUriFromArn: function validatePopulateUriFromArn(req) {\n    if (req.service._originalConfig && req.service._originalConfig.endpoint) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'Custom endpoint is not compatible with access point ARN'\n      });\n    }\n\n    if (req.service.config.s3ForcePathStyle) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'Cannot construct path-style endpoint with access point'\n      });\n    }\n  },\n\n  /**\n   * Returns true if the bucket name is DNS compatible.  Buckets created\n   * outside of the classic region MUST be DNS compatible.\n   *\n   * @api private\n   */\n  dnsCompatibleBucketName: function dnsCompatibleBucketName(bucketName) {\n    var b = bucketName;\n    var domain = new RegExp(/^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/);\n    var ipAddress = new RegExp(/(\\d+\\.){3}\\d+/);\n    var dots = new RegExp(/\\.\\./);\n    return (b.match(domain) && !b.match(ipAddress) && !b.match(dots)) ? true : false;\n  },\n};\n\n/**\n * @api private\n */\nmodule.exports = s3util;\n","var AWS = require('../core');\nvar util = require('../util');\nvar QueryParamSerializer = require('../query/query_param_serializer');\nvar Shape = require('../model/shape');\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\n\nfunction buildRequest(req) {\n  var operation = req.service.api.operations[req.operation];\n  var httpRequest = req.httpRequest;\n  httpRequest.headers['Content-Type'] =\n    'application/x-www-form-urlencoded; charset=utf-8';\n  httpRequest.params = {\n    Version: req.service.api.apiVersion,\n    Action: operation.name\n  };\n\n  // convert the request parameters into a list of query params,\n  // e.g. Deeply.NestedParam.0.Name=value\n  var builder = new QueryParamSerializer();\n  builder.serialize(req.params, operation.input, function(name, value) {\n    httpRequest.params[name] = value;\n  });\n  httpRequest.body = util.queryParamsToString(httpRequest.params);\n\n  populateHostPrefix(req);\n}\n\nfunction extractError(resp) {\n  var data, body = resp.httpResponse.body.toString();\n  if (body.match('<UnknownOperationException')) {\n    data = {\n      Code: 'UnknownOperation',\n      Message: 'Unknown operation ' + resp.request.operation\n    };\n  } else {\n    try {\n      data = new AWS.XML.Parser().parse(body);\n    } catch (e) {\n      data = {\n        Code: resp.httpResponse.statusCode,\n        Message: resp.httpResponse.statusMessage\n      };\n    }\n  }\n\n  if (data.requestId && !resp.requestId) resp.requestId = data.requestId;\n  if (data.Errors) data = data.Errors;\n  if (data.Error) data = data.Error;\n  if (data.Code) {\n    resp.error = util.error(new Error(), {\n      code: data.Code,\n      message: data.Message\n    });\n  } else {\n    resp.error = util.error(new Error(), {\n      code: resp.httpResponse.statusCode,\n      message: null\n    });\n  }\n}\n\nfunction extractData(resp) {\n  var req = resp.request;\n  var operation = req.service.api.operations[req.operation];\n  var shape = operation.output || {};\n  var origRules = shape;\n\n  if (origRules.resultWrapper) {\n    var tmp = Shape.create({type: 'structure'});\n    tmp.members[origRules.resultWrapper] = shape;\n    tmp.memberNames = [origRules.resultWrapper];\n    util.property(shape, 'name', shape.resultWrapper);\n    shape = tmp;\n  }\n\n  var parser = new AWS.XML.Parser();\n\n  // TODO: Refactor XML Parser to parse RequestId from response.\n  if (shape && shape.members && !shape.members._XAMZRequestId) {\n    var requestIdShape = Shape.create(\n      { type: 'string' },\n      { api: { protocol: 'query' } },\n      'requestId'\n    );\n    shape.members._XAMZRequestId = requestIdShape;\n  }\n\n  var data = parser.parse(resp.httpResponse.body.toString(), shape);\n  resp.requestId = data._XAMZRequestId || data.requestId;\n\n  if (data._XAMZRequestId) delete data._XAMZRequestId;\n\n  if (origRules.resultWrapper) {\n    if (data[origRules.resultWrapper]) {\n      util.update(data, data[origRules.resultWrapper]);\n      delete data[origRules.resultWrapper];\n    }\n  }\n\n  resp.data = data;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['pricing'] = {};\nAWS.Pricing = Service.defineService('pricing', ['2017-10-15']);\nObject.defineProperty(apiLoader.services['pricing'], '2017-10-15', {\n  get: function get() {\n    var model = require('../apis/pricing-2017-10-15.min.json');\n    model.paginators = require('../apis/pricing-2017-10-15.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Pricing;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['workdocs'] = {};\nAWS.WorkDocs = Service.defineService('workdocs', ['2016-05-01']);\nObject.defineProperty(apiLoader.services['workdocs'], '2016-05-01', {\n  get: function get() {\n    var model = require('../apis/workdocs-2016-05-01.min.json');\n    model.paginators = require('../apis/workdocs-2016-05-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.WorkDocs;\n","var AWS = require('../core'),\n    url = AWS.util.url,\n    crypto = AWS.util.crypto.lib,\n    base64Encode = AWS.util.base64.encode,\n    inherit = AWS.util.inherit;\n\nvar queryEncode = function (string) {\n    var replacements = {\n        '+': '-',\n        '=': '_',\n        '/': '~'\n    };\n    return string.replace(/[\\+=\\/]/g, function (match) {\n        return replacements[match];\n    });\n};\n\nvar signPolicy = function (policy, privateKey) {\n    var sign = crypto.createSign('RSA-SHA1');\n    sign.write(policy);\n    return queryEncode(sign.sign(privateKey, 'base64'));\n};\n\nvar signWithCannedPolicy = function (url, expires, keyPairId, privateKey) {\n    var policy = JSON.stringify({\n        Statement: [\n            {\n                Resource: url,\n                Condition: { DateLessThan: { 'AWS:EpochTime': expires } }\n            }\n        ]\n    });\n\n    return {\n        Expires: expires,\n        'Key-Pair-Id': keyPairId,\n        Signature: signPolicy(policy.toString(), privateKey)\n    };\n};\n\nvar signWithCustomPolicy = function (policy, keyPairId, privateKey) {\n    policy = policy.replace(/\\s/mg, '');\n\n    return {\n        Policy: queryEncode(base64Encode(policy)),\n        'Key-Pair-Id': keyPairId,\n        Signature: signPolicy(policy, privateKey)\n    };\n};\n\nvar determineScheme = function (url) {\n    var parts = url.split('://');\n    if (parts.length < 2) {\n        throw new Error('Invalid URL.');\n    }\n\n    return parts[0].replace('*', '');\n};\n\nvar getRtmpUrl = function (rtmpUrl) {\n    var parsed = url.parse(rtmpUrl);\n    return parsed.path.replace(/^\\//, '') + (parsed.hash || '');\n};\n\nvar getResource = function (url) {\n    switch (determineScheme(url)) {\n        case 'http':\n        case 'https':\n            return url;\n        case 'rtmp':\n            return getRtmpUrl(url);\n        default:\n            throw new Error('Invalid URI scheme. Scheme must be one of'\n                + ' http, https, or rtmp');\n    }\n};\n\nvar handleError = function (err, callback) {\n    if (!callback || typeof callback !== 'function') {\n        throw err;\n    }\n\n    callback(err);\n};\n\nvar handleSuccess = function (result, callback) {\n    if (!callback || typeof callback !== 'function') {\n        return result;\n    }\n\n    callback(null, result);\n};\n\nAWS.CloudFront.Signer = inherit({\n    /**\n     * A signer object can be used to generate signed URLs and cookies for granting\n     * access to content on restricted CloudFront distributions.\n     *\n     * @see http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html\n     *\n     * @param keyPairId [String]    (Required) The ID of the CloudFront key pair\n     *                              being used.\n     * @param privateKey [String]   (Required) A private key in RSA format.\n     */\n    constructor: function Signer(keyPairId, privateKey) {\n        if (keyPairId === void 0 || privateKey === void 0) {\n            throw new Error('A key pair ID and private key are required');\n        }\n\n        this.keyPairId = keyPairId;\n        this.privateKey = privateKey;\n    },\n\n    /**\n     * Create a signed Amazon CloudFront Cookie.\n     *\n     * @param options [Object]            The options to create a signed cookie.\n     * @option options url [String]     The URL to which the signature will grant\n     *                                  access. Required unless you pass in a full\n     *                                  policy.\n     * @option options expires [Number] A Unix UTC timestamp indicating when the\n     *                                  signature should expire. Required unless you\n     *                                  pass in a full policy.\n     * @option options policy [String]  A CloudFront JSON policy. Required unless\n     *                                  you pass in a url and an expiry time.\n     *\n     * @param cb [Function] if a callback is provided, this function will\n     *   pass the hash as the second parameter (after the error parameter) to\n     *   the callback function.\n     *\n     * @return [Object] if called synchronously (with no callback), returns the\n     *   signed cookie parameters.\n     * @return [null] nothing is returned if a callback is provided.\n     */\n    getSignedCookie: function (options, cb) {\n        var signatureHash = 'policy' in options\n            ? signWithCustomPolicy(options.policy, this.keyPairId, this.privateKey)\n            : signWithCannedPolicy(options.url, options.expires, this.keyPairId, this.privateKey);\n\n        var cookieHash = {};\n        for (var key in signatureHash) {\n            if (Object.prototype.hasOwnProperty.call(signatureHash, key)) {\n                cookieHash['CloudFront-' + key] = signatureHash[key];\n            }\n        }\n\n        return handleSuccess(cookieHash, cb);\n    },\n\n    /**\n     * Create a signed Amazon CloudFront URL.\n     *\n     * Keep in mind that URLs meant for use in media/flash players may have\n     * different requirements for URL formats (e.g. some require that the\n     * extension be removed, some require the file name to be prefixed\n     * - mp4:<path>, some require you to add \"/cfx/st\" into your URL).\n     *\n     * @param options [Object]          The options to create a signed URL.\n     * @option options url [String]     The URL to which the signature will grant\n     *                                  access. Any query params included with\n     *                                  the URL should be encoded. Required.\n     * @option options expires [Number] A Unix UTC timestamp indicating when the\n     *                                  signature should expire. Required unless you\n     *                                  pass in a full policy.\n     * @option options policy [String]  A CloudFront JSON policy. Required unless\n     *                                  you pass in a url and an expiry time.\n     *\n     * @param cb [Function] if a callback is provided, this function will\n     *   pass the URL as the second parameter (after the error parameter) to\n     *   the callback function.\n     *\n     * @return [String] if called synchronously (with no callback), returns the\n     *   signed URL.\n     * @return [null] nothing is returned if a callback is provided.\n     */\n    getSignedUrl: function (options, cb) {\n        try {\n            var resource = getResource(options.url);\n        } catch (err) {\n            return handleError(err, cb);\n        }\n\n        var parsedUrl = url.parse(options.url, true),\n            signatureHash = Object.prototype.hasOwnProperty.call(options, 'policy')\n                ? signWithCustomPolicy(options.policy, this.keyPairId, this.privateKey)\n                : signWithCannedPolicy(resource, options.expires, this.keyPairId, this.privateKey);\n\n        parsedUrl.search = null;\n        for (var key in signatureHash) {\n            if (Object.prototype.hasOwnProperty.call(signatureHash, key)) {\n                parsedUrl.query[key] = signatureHash[key];\n            }\n        }\n\n        try {\n            var signedUrl = determineScheme(options.url) === 'rtmp'\n                    ? getRtmpUrl(url.format(parsedUrl))\n                    : url.format(parsedUrl);\n        } catch (err) {\n            return handleError(err, cb);\n        }\n\n        return handleSuccess(signedUrl, cb);\n    }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.CloudFront.Signer;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cloudwatchevents'] = {};\nAWS.CloudWatchEvents = Service.defineService('cloudwatchevents', ['2014-02-03*', '2015-10-07']);\nObject.defineProperty(apiLoader.services['cloudwatchevents'], '2015-10-07', {\n  get: function get() {\n    var model = require('../apis/events-2015-10-07.min.json');\n    model.paginators = require('../apis/events-2015-10-07.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CloudWatchEvents;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['kms'] = {};\nAWS.KMS = Service.defineService('kms', ['2014-11-01']);\nObject.defineProperty(apiLoader.services['kms'], '2014-11-01', {\n  get: function get() {\n    var model = require('../apis/kms-2014-11-01.min.json');\n    model.paginators = require('../apis/kms-2014-11-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.KMS;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['kinesisvideo'] = {};\nAWS.KinesisVideo = Service.defineService('kinesisvideo', ['2017-09-30']);\nObject.defineProperty(apiLoader.services['kinesisvideo'], '2017-09-30', {\n  get: function get() {\n    var model = require('../apis/kinesisvideo-2017-09-30.min.json');\n    model.paginators = require('../apis/kinesisvideo-2017-09-30.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.KinesisVideo;\n","var Shape = require('./shape');\n\nvar util = require('../util');\nvar property = util.property;\nvar memoizedProperty = util.memoizedProperty;\n\nfunction Operation(name, operation, options) {\n  var self = this;\n  options = options || {};\n\n  property(this, 'name', operation.name || name);\n  property(this, 'api', options.api, false);\n\n  operation.http = operation.http || {};\n  property(this, 'endpoint', operation.endpoint);\n  property(this, 'httpMethod', operation.http.method || 'POST');\n  property(this, 'httpPath', operation.http.requestUri || '/');\n  property(this, 'authtype', operation.authtype || '');\n  property(\n    this,\n    'endpointDiscoveryRequired',\n    operation.endpointdiscovery ?\n      (operation.endpointdiscovery.required ? 'REQUIRED' : 'OPTIONAL') :\n    'NULL'\n  );\n\n  memoizedProperty(this, 'input', function() {\n    if (!operation.input) {\n      return new Shape.create({type: 'structure'}, options);\n    }\n    return Shape.create(operation.input, options);\n  });\n\n  memoizedProperty(this, 'output', function() {\n    if (!operation.output) {\n      return new Shape.create({type: 'structure'}, options);\n    }\n    return Shape.create(operation.output, options);\n  });\n\n  memoizedProperty(this, 'errors', function() {\n    var list = [];\n    if (!operation.errors) return null;\n\n    for (var i = 0; i < operation.errors.length; i++) {\n      list.push(Shape.create(operation.errors[i], options));\n    }\n\n    return list;\n  });\n\n  memoizedProperty(this, 'paginator', function() {\n    return options.api.paginators[name];\n  });\n\n  if (options.documentation) {\n    property(this, 'documentation', operation.documentation);\n    property(this, 'documentationUrl', operation.documentationUrl);\n  }\n\n  // idempotentMembers only tracks top-level input shapes\n  memoizedProperty(this, 'idempotentMembers', function() {\n    var idempotentMembers = [];\n    var input = self.input;\n    var members = input.members;\n    if (!input.members) {\n      return idempotentMembers;\n    }\n    for (var name in members) {\n      if (!members.hasOwnProperty(name)) {\n        continue;\n      }\n      if (members[name].isIdempotent === true) {\n        idempotentMembers.push(name);\n      }\n    }\n    return idempotentMembers;\n  });\n\n  memoizedProperty(this, 'hasEventOutput', function() {\n    var output = self.output;\n    return hasEventStream(output);\n  });\n}\n\nfunction hasEventStream(topLevelShape) {\n  var members = topLevelShape.members;\n  var payload = topLevelShape.payload;\n\n  if (!topLevelShape.members) {\n    return false;\n  }\n\n  if (payload) {\n    var payloadMember = members[payload];\n    return payloadMember.isEventStream;\n  }\n\n  // check if any member is an event stream\n  for (var name in members) {\n    if (!members.hasOwnProperty(name)) {\n      if (members[name].isEventStream === true) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * @api private\n */\nmodule.exports = Operation;\n","module.exports = {\n  //provide realtime clock for performance measurement\n  now: function now() {\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n      return performance.now();\n    }\n    return Date.now();\n  }\n};\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['iot'] = {};\nAWS.Iot = Service.defineService('iot', ['2015-05-28']);\nObject.defineProperty(apiLoader.services['iot'], '2015-05-28', {\n  get: function get() {\n    var model = require('../apis/iot-2015-05-28.min.json');\n    model.paginators = require('../apis/iot-2015-05-28.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.Iot;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['applicationautoscaling'] = {};\nAWS.ApplicationAutoScaling = Service.defineService('applicationautoscaling', ['2016-02-06']);\nObject.defineProperty(apiLoader.services['applicationautoscaling'], '2016-02-06', {\n  get: function get() {\n    var model = require('../apis/application-autoscaling-2016-02-06.min.json');\n    model.paginators = require('../apis/application-autoscaling-2016-02-06.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ApplicationAutoScaling;\n","var util = require('./util');\nvar regionConfig = require('./region_config_data.json');\n\nfunction generateRegionPrefix(region) {\n  if (!region) return null;\n\n  var parts = region.split('-');\n  if (parts.length < 3) return null;\n  return parts.slice(0, parts.length - 2).join('-') + '-*';\n}\n\nfunction derivedKeys(service) {\n  var region = service.config.region;\n  var regionPrefix = generateRegionPrefix(region);\n  var endpointPrefix = service.api.endpointPrefix;\n\n  return [\n    [region, endpointPrefix],\n    [regionPrefix, endpointPrefix],\n    [region, '*'],\n    [regionPrefix, '*'],\n    ['*', endpointPrefix],\n    ['*', '*']\n  ].map(function(item) {\n    return item[0] && item[1] ? item.join('/') : null;\n  });\n}\n\nfunction applyConfig(service, config) {\n  util.each(config, function(key, value) {\n    if (key === 'globalEndpoint') return;\n    if (service.config[key] === undefined || service.config[key] === null) {\n      service.config[key] = value;\n    }\n  });\n}\n\nfunction configureEndpoint(service) {\n  var keys = derivedKeys(service);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!key) continue;\n\n    if (Object.prototype.hasOwnProperty.call(regionConfig.rules, key)) {\n      var config = regionConfig.rules[key];\n      if (typeof config === 'string') {\n        config = regionConfig.patterns[config];\n      }\n\n      // set dualstack endpoint\n      if (service.config.useDualstack && util.isDualstackAvailable(service)) {\n        config = util.copy(config);\n        config.endpoint = config.endpoint.replace(\n          /{service}\\.({region}\\.)?/,\n          '{service}.dualstack.{region}.'\n        );\n      }\n\n      // set global endpoint\n      service.isGlobalEndpoint = !!config.globalEndpoint;\n      if (config.signingRegion) {\n        service.signingRegion = config.signingRegion;\n      }\n\n      // signature version\n      if (!config.signatureVersion) config.signatureVersion = 'v4';\n\n      // merge config\n      applyConfig(service, config);\n      return;\n    }\n  }\n}\n\nfunction getEndpointSuffix(region) {\n  var regionRegexes = {\n    '^(us|eu|ap|sa|ca|me)\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com',\n    '^cn\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com.cn',\n    '^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com',\n    '^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$': 'c2s.ic.gov',\n    '^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$': 'sc2s.sgov.gov'\n  };\n  var defaultSuffix = 'amazonaws.com';\n  var regexes = Object.keys(regionRegexes);\n  for (var i = 0; i < regexes.length; i++) {\n    var regionPattern = RegExp(regexes[i]);\n    var dnsSuffix = regionRegexes[regexes[i]];\n    if (regionPattern.test(region)) return dnsSuffix;\n  }\n  return defaultSuffix;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  configureEndpoint: configureEndpoint,\n  getEndpointSuffix: getEndpointSuffix\n};\n","var AWS = require('../core');\nvar Translator = require('./translator');\nvar DynamoDBSet = require('./set');\n\n/**\n * The document client simplifies working with items in Amazon DynamoDB\n * by abstracting away the notion of attribute values. This abstraction\n * annotates native JavaScript types supplied as input parameters, as well\n * as converts annotated response data to native JavaScript types.\n *\n * ## Marshalling Input and Unmarshalling Response Data\n *\n * The document client affords developers the use of native JavaScript types\n * instead of `AttributeValue`s to simplify the JavaScript development\n * experience with Amazon DynamoDB. JavaScript objects passed in as parameters\n * are marshalled into `AttributeValue` shapes required by Amazon DynamoDB.\n * Responses from DynamoDB are unmarshalled into plain JavaScript objects\n * by the `DocumentClient`. The `DocumentClient`, does not accept\n * `AttributeValue`s in favor of native JavaScript types.\n *\n * |                             JavaScript Type                            | DynamoDB AttributeValue |\n * |:----------------------------------------------------------------------:|-------------------------|\n * | String                                                                 | S                       |\n * | Number                                                                 | N                       |\n * | Boolean                                                                | BOOL                    |\n * | null                                                                   | NULL                    |\n * | Array                                                                  | L                       |\n * | Object                                                                 | M                       |\n * | Buffer, File, Blob, ArrayBuffer, DataView, and JavaScript typed arrays | B                       |\n *\n * ## Support for Sets\n *\n * The `DocumentClient` offers a convenient way to create sets from\n * JavaScript Arrays. The type of set is inferred from the first element\n * in the array. DynamoDB supports string, number, and binary sets. To\n * learn more about supported types see the\n * [Amazon DynamoDB Data Model Documentation](http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html)\n * For more information see {AWS.DynamoDB.DocumentClient.createSet}\n *\n */\nAWS.DynamoDB.DocumentClient = AWS.util.inherit({\n\n  /**\n   * Creates a DynamoDB document client with a set of configuration options.\n   *\n   * @option options params [map] An optional map of parameters to bind to every\n   *   request sent by this service object.\n   * @option options service [AWS.DynamoDB] An optional pre-configured instance\n   *  of the AWS.DynamoDB service object to use for requests. The object may\n   *  bound parameters used by the document client.\n   * @option options convertEmptyValues [Boolean] set to true if you would like\n   *  the document client to convert empty values (0-length strings, binary\n   *  buffers, and sets) to be converted to NULL types when persisting to\n   *  DynamoDB.\n   * @option options wrapNumbers [Boolean] Set to true to return numbers as a\n   *  NumberValue object instead of converting them to native JavaScript numbers.\n   *  This allows for the safe round-trip transport of numbers of arbitrary size.\n   * @see AWS.DynamoDB.constructor\n   *\n   */\n  constructor: function DocumentClient(options) {\n    var self = this;\n    self.options = options || {};\n    self.configure(self.options);\n  },\n\n  /**\n   * @api private\n   */\n  configure: function configure(options) {\n    var self = this;\n    self.service = options.service;\n    self.bindServiceObject(options);\n    self.attrValue = options.attrValue =\n      self.service.api.operations.putItem.input.members.Item.value.shape;\n  },\n\n  /**\n   * @api private\n   */\n  bindServiceObject: function bindServiceObject(options) {\n    var self = this;\n    options = options || {};\n\n    if (!self.service) {\n      self.service = new AWS.DynamoDB(options);\n    } else {\n      var config = AWS.util.copy(self.service.config);\n      self.service = new self.service.constructor.__super__(config);\n      self.service.config.params =\n        AWS.util.merge(self.service.config.params || {}, options.params);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  makeServiceRequest: function(operation, params, callback) {\n    var self = this;\n    var request = self.service[operation](params);\n    self.setupRequest(request);\n    self.setupResponse(request);\n    if (typeof callback === 'function') {\n      request.send(callback);\n    }\n    return request;\n  },\n\n  /**\n   * @api private\n   */\n  serviceClientOperationsMap: {\n    batchGet: 'batchGetItem',\n    batchWrite: 'batchWriteItem',\n    delete: 'deleteItem',\n    get: 'getItem',\n    put: 'putItem',\n    query: 'query',\n    scan: 'scan',\n    update: 'updateItem',\n    transactGet: 'transactGetItems',\n    transactWrite: 'transactWriteItems'\n  },\n\n  /**\n   * Returns the attributes of one or more items from one or more tables\n   * by delegating to `AWS.DynamoDB.batchGetItem()`.\n   *\n   * Supply the same parameters as {AWS.DynamoDB.batchGetItem} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.batchGetItem\n   * @example Get items from multiple tables\n   *  var params = {\n   *    RequestItems: {\n   *      'Table-1': {\n   *        Keys: [\n   *          {\n   *             HashKey: 'haskey',\n   *             NumberRangeKey: 1\n   *          }\n   *        ]\n   *      },\n   *      'Table-2': {\n   *        Keys: [\n   *          { foo: 'bar' },\n   *        ]\n   *      }\n   *    }\n   *  };\n   *\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  documentClient.batchGet(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   *\n   */\n  batchGet: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['batchGet'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Puts or deletes multiple items in one or more tables by delegating\n   * to `AWS.DynamoDB.batchWriteItem()`.\n   *\n   * Supply the same parameters as {AWS.DynamoDB.batchWriteItem} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.batchWriteItem\n   * @example Write to and delete from a table\n   *  var params = {\n   *    RequestItems: {\n   *      'Table-1': [\n   *        {\n   *          DeleteRequest: {\n   *            Key: { HashKey: 'someKey' }\n   *          }\n   *        },\n   *        {\n   *          PutRequest: {\n   *            Item: {\n   *              HashKey: 'anotherKey',\n   *              NumAttribute: 1,\n   *              BoolAttribute: true,\n   *              ListAttribute: [1, 'two', false],\n   *              MapAttribute: { foo: 'bar' }\n   *            }\n   *          }\n   *        }\n   *      ]\n   *    }\n   *  };\n   *\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  documentClient.batchWrite(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   *\n   */\n  batchWrite: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['batchWrite'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Deletes a single item in a table by primary key by delegating to\n   * `AWS.DynamoDB.deleteItem()`\n   *\n   * Supply the same parameters as {AWS.DynamoDB.deleteItem} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.deleteItem\n   * @example Delete an item from a table\n   *  var params = {\n   *    TableName : 'Table',\n   *    Key: {\n   *      HashKey: 'hashkey',\n   *      NumberRangeKey: 1\n   *    }\n   *  };\n   *\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  documentClient.delete(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   *\n   */\n  delete: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['delete'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Returns a set of attributes for the item with the given primary key\n   * by delegating to `AWS.DynamoDB.getItem()`.\n   *\n   * Supply the same parameters as {AWS.DynamoDB.getItem} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.getItem\n   * @example Get an item from a table\n   *  var params = {\n   *    TableName : 'Table',\n   *    Key: {\n   *      HashKey: 'hashkey'\n   *    }\n   *  };\n   *\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  documentClient.get(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   *\n   */\n  get: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['get'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Creates a new item, or replaces an old item with a new item by\n   * delegating to `AWS.DynamoDB.putItem()`.\n   *\n   * Supply the same parameters as {AWS.DynamoDB.putItem} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.putItem\n   * @example Create a new item in a table\n   *  var params = {\n   *    TableName : 'Table',\n   *    Item: {\n   *       HashKey: 'haskey',\n   *       NumAttribute: 1,\n   *       BoolAttribute: true,\n   *       ListAttribute: [1, 'two', false],\n   *       MapAttribute: { foo: 'bar'},\n   *       NullAttribute: null\n   *    }\n   *  };\n   *\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  documentClient.put(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   *\n   */\n  put: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['put'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Edits an existing item's attributes, or adds a new item to the table if\n   * it does not already exist by delegating to `AWS.DynamoDB.updateItem()`.\n   *\n   * Supply the same parameters as {AWS.DynamoDB.updateItem} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.updateItem\n   * @example Update an item with expressions\n   *  var params = {\n   *    TableName: 'Table',\n   *    Key: { HashKey : 'hashkey' },\n   *    UpdateExpression: 'set #a = :x + :y',\n   *    ConditionExpression: '#a < :MAX',\n   *    ExpressionAttributeNames: {'#a' : 'Sum'},\n   *    ExpressionAttributeValues: {\n   *      ':x' : 20,\n   *      ':y' : 45,\n   *      ':MAX' : 100,\n   *    }\n   *  };\n   *\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  documentClient.update(params, function(err, data) {\n   *     if (err) console.log(err);\n   *     else console.log(data);\n   *  });\n   *\n   */\n  update: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['update'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Returns one or more items and item attributes by accessing every item\n   * in a table or a secondary index.\n   *\n   * Supply the same parameters as {AWS.DynamoDB.scan} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.scan\n   * @example Scan the table with a filter expression\n   *  var params = {\n   *    TableName : 'Table',\n   *    FilterExpression : 'Year = :this_year',\n   *    ExpressionAttributeValues : {':this_year' : 2015}\n   *  };\n   *\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  documentClient.scan(params, function(err, data) {\n   *     if (err) console.log(err);\n   *     else console.log(data);\n   *  });\n   *\n   */\n  scan: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['scan'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n   /**\n    * Directly access items from a table by primary key or a secondary index.\n    *\n    * Supply the same parameters as {AWS.DynamoDB.query} with\n    * `AttributeValue`s substituted by native JavaScript types.\n    *\n    * @see AWS.DynamoDB.query\n    * @example Query an index\n    *  var params = {\n    *    TableName: 'Table',\n    *    IndexName: 'Index',\n    *    KeyConditionExpression: 'HashKey = :hkey and RangeKey > :rkey',\n    *    ExpressionAttributeValues: {\n    *      ':hkey': 'key',\n    *      ':rkey': 2015\n    *    }\n    *  };\n    *\n    *  var documentClient = new AWS.DynamoDB.DocumentClient();\n    *\n    *  documentClient.query(params, function(err, data) {\n    *     if (err) console.log(err);\n    *     else console.log(data);\n    *  });\n    *\n    */\n  query: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['query'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Synchronous write operation that groups up to 10 action requests\n   *\n   * Supply the same parameters as {AWS.DynamoDB.transactWriteItems} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.transactWriteItems\n   * @example Get items from multiple tables\n   *  var params = {\n   *    TransactItems: [{\n   *      Put: {\n   *        TableName : 'Table0',\n   *        Item: {\n   *          HashKey: 'haskey',\n   *          NumAttribute: 1,\n   *          BoolAttribute: true,\n   *          ListAttribute: [1, 'two', false],\n   *          MapAttribute: { foo: 'bar'},\n   *          NullAttribute: null\n   *        }\n   *      }\n   *    }, {\n   *      Update: {\n   *        TableName: 'Table1',\n   *        Key: { HashKey : 'hashkey' },\n   *        UpdateExpression: 'set #a = :x + :y',\n   *        ConditionExpression: '#a < :MAX',\n   *        ExpressionAttributeNames: {'#a' : 'Sum'},\n   *        ExpressionAttributeValues: {\n   *          ':x' : 20,\n   *          ':y' : 45,\n   *          ':MAX' : 100,\n   *        }\n   *      }\n   *    }]\n   *  };\n   *\n   *  documentClient.transactWrite(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   */\n  transactWrite: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['transactWrite'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Atomically retrieves multiple items from one or more tables (but not from indexes)\n   * in a single account and region.\n   *\n   * Supply the same parameters as {AWS.DynamoDB.transactGetItems} with\n   * `AttributeValue`s substituted by native JavaScript types.\n   *\n   * @see AWS.DynamoDB.transactGetItems\n   * @example Get items from multiple tables\n   *  var params = {\n   *    TransactItems: [{\n   *      Get: {\n   *        TableName : 'Table0',\n   *        Key: {\n   *          HashKey: 'hashkey0'\n   *        }\n   *      }\n   *    }, {\n   *      Get: {\n   *        TableName : 'Table1',\n   *        Key: {\n   *          HashKey: 'hashkey1'\n   *        }\n   *      }\n   *    }]\n   *  };\n   *\n   *  documentClient.transactGet(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   */\n  transactGet: function(params, callback) {\n    var operation = this.serviceClientOperationsMap['transactGet'];\n    return this.makeServiceRequest(operation, params, callback);\n  },\n\n  /**\n   * Creates a set of elements inferring the type of set from\n   * the type of the first element. Amazon DynamoDB currently supports\n   * the number sets, string sets, and binary sets. For more information\n   * about DynamoDB data types see the documentation on the\n   * [Amazon DynamoDB Data Model](http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html#DataModel.DataTypes).\n   *\n   * @param list [Array] Collection to represent your DynamoDB Set\n   * @param options [map]\n   *  * **validate** [Boolean] set to true if you want to validate the type\n   *    of each element in the set. Defaults to `false`.\n   * @example Creating a number set\n   *  var documentClient = new AWS.DynamoDB.DocumentClient();\n   *\n   *  var params = {\n   *    Item: {\n   *      hashkey: 'hashkey'\n   *      numbers: documentClient.createSet([1, 2, 3]);\n   *    }\n   *  };\n   *\n   *  documentClient.put(params, function(err, data) {\n   *    if (err) console.log(err);\n   *    else console.log(data);\n   *  });\n   *\n   */\n  createSet: function(list, options) {\n    options = options || {};\n    return new DynamoDBSet(list, options);\n  },\n\n  /**\n   * @api private\n   */\n  getTranslator: function() {\n    return new Translator(this.options);\n  },\n\n  /**\n   * @api private\n   */\n  setupRequest: function setupRequest(request) {\n    var self = this;\n    var translator = self.getTranslator();\n    var operation = request.operation;\n    var inputShape = request.service.api.operations[operation].input;\n    request._events.validate.unshift(function(req) {\n      req.rawParams = AWS.util.copy(req.params);\n      req.params = translator.translateInput(req.rawParams, inputShape);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  setupResponse: function setupResponse(request) {\n    var self = this;\n    var translator = self.getTranslator();\n    var outputShape = self.service.api.operations[request.operation].output;\n    request.on('extractData', function(response) {\n      response.data = translator.translateOutput(response.data, outputShape);\n    });\n\n    var response = request.response;\n    response.nextPage = function(cb) {\n      var resp = this;\n      var req = resp.request;\n      var config;\n      var service = req.service;\n      var operation = req.operation;\n      try {\n        config = service.paginationConfig(operation, true);\n      } catch (e) { resp.error = e; }\n\n      if (!resp.hasNextPage()) {\n        if (cb) cb(resp.error, null);\n        else if (resp.error) throw resp.error;\n        return null;\n      }\n\n      var params = AWS.util.copy(req.rawParams);\n      if (!resp.nextPageTokens) {\n        return cb ? cb(null, null) : null;\n      } else {\n        var inputTokens = config.inputToken;\n        if (typeof inputTokens === 'string') inputTokens = [inputTokens];\n        for (var i = 0; i < inputTokens.length; i++) {\n          params[inputTokens[i]] = resp.nextPageTokens[i];\n        }\n        return self[operation](params, cb);\n      }\n    };\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.DynamoDB.DocumentClient;\n","var util = require('../core').util;\n\nfunction typeOf(data) {\n  if (data === null && typeof data === 'object') {\n    return 'null';\n  } else if (data !== undefined && isBinary(data)) {\n    return 'Binary';\n  } else if (data !== undefined && data.constructor) {\n    return data.wrapperName || util.typeName(data.constructor);\n  } else if (data !== undefined && typeof data === 'object') {\n    // this object is the result of Object.create(null), hence the absence of a\n    // defined constructor\n    return 'Object';\n  } else {\n    return 'undefined';\n  }\n}\n\nfunction isBinary(data) {\n  var types = [\n    'Buffer', 'File', 'Blob', 'ArrayBuffer', 'DataView',\n    'Int8Array', 'Uint8Array', 'Uint8ClampedArray',\n    'Int16Array', 'Uint16Array', 'Int32Array', 'Uint32Array',\n    'Float32Array', 'Float64Array'\n  ];\n  if (util.isNode()) {\n    var Stream = util.stream.Stream;\n    if (util.Buffer.isBuffer(data) || data instanceof Stream) {\n      return true;\n    }\n  }\n\n  for (var i = 0; i < types.length; i++) {\n    if (data !== undefined && data.constructor) {\n      if (util.isType(data, types[i])) return true;\n      if (util.typeName(data.constructor) === types[i]) return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  typeOf: typeOf,\n  isBinary: isBinary\n};\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['ec2'] = {};\nAWS.EC2 = Service.defineService('ec2', ['2013-06-15*', '2013-10-15*', '2014-02-01*', '2014-05-01*', '2014-06-15*', '2014-09-01*', '2014-10-01*', '2015-03-01*', '2015-04-15*', '2015-10-01*', '2016-04-01*', '2016-09-15*', '2016-11-15']);\nrequire('../lib/services/ec2');\nObject.defineProperty(apiLoader.services['ec2'], '2016-11-15', {\n  get: function get() {\n    var model = require('../apis/ec2-2016-11-15.min.json');\n    model.paginators = require('../apis/ec2-2016-11-15.paginators.json').pagination;\n    model.waiters = require('../apis/ec2-2016-11-15.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.EC2;\n","var Int64 = require('./int64').Int64;\n\nvar splitMessage = require('./split-message').splitMessage;\n\nvar BOOLEAN_TAG = 'boolean';\nvar BYTE_TAG = 'byte';\nvar SHORT_TAG = 'short';\nvar INT_TAG = 'integer';\nvar LONG_TAG = 'long';\nvar BINARY_TAG = 'binary';\nvar STRING_TAG = 'string';\nvar TIMESTAMP_TAG = 'timestamp';\nvar UUID_TAG = 'uuid';\n\n/**\n * @api private\n *\n * @param {Buffer} headers\n */\nfunction parseHeaders(headers) {\n    var out = {};\n    var position = 0;\n    while (position < headers.length) {\n        var nameLength = headers.readUInt8(position++);\n        var name = headers.slice(position, position + nameLength).toString();\n        position += nameLength;\n        switch (headers.readUInt8(position++)) {\n            case 0 /* boolTrue */:\n                out[name] = {\n                    type: BOOLEAN_TAG,\n                    value: true\n                };\n                break;\n            case 1 /* boolFalse */:\n                out[name] = {\n                    type: BOOLEAN_TAG,\n                    value: false\n                };\n                break;\n            case 2 /* byte */:\n                out[name] = {\n                    type: BYTE_TAG,\n                    value: headers.readInt8(position++)\n                };\n                break;\n            case 3 /* short */:\n                out[name] = {\n                    type: SHORT_TAG,\n                    value: headers.readInt16BE(position)\n                };\n                position += 2;\n                break;\n            case 4 /* integer */:\n                out[name] = {\n                    type: INT_TAG,\n                    value: headers.readInt32BE(position)\n                };\n                position += 4;\n                break;\n            case 5 /* long */:\n                out[name] = {\n                    type: LONG_TAG,\n                    value: new Int64(headers.slice(position, position + 8))\n                };\n                position += 8;\n                break;\n            case 6 /* byteArray */:\n                var binaryLength = headers.readUInt16BE(position);\n                position += 2;\n                out[name] = {\n                    type: BINARY_TAG,\n                    value: headers.slice(position, position + binaryLength)\n                };\n                position += binaryLength;\n                break;\n            case 7 /* string */:\n                var stringLength = headers.readUInt16BE(position);\n                position += 2;\n                out[name] = {\n                    type: STRING_TAG,\n                    value: headers.slice(\n                        position,\n                        position + stringLength\n                    ).toString()\n                };\n                position += stringLength;\n                break;\n            case 8 /* timestamp */:\n                out[name] = {\n                    type: TIMESTAMP_TAG,\n                    value: new Date(\n                        new Int64(headers.slice(position, position + 8))\n                            .valueOf()\n                    )\n                };\n                position += 8;\n                break;\n            case 9 /* uuid */:\n                var uuidChars = headers.slice(position, position + 16)\n                    .toString('hex');\n                position += 16;\n                out[name] = {\n                    type: UUID_TAG,\n                    value: uuidChars.substr(0, 8) + '-' +\n                        uuidChars.substr(8, 4) + '-' +\n                        uuidChars.substr(12, 4) + '-' +\n                        uuidChars.substr(16, 4) + '-' +\n                        uuidChars.substr(20)\n                };\n                break;\n            default:\n                throw new Error('Unrecognized header type tag');\n        }\n    }\n    return out;\n}\n\nfunction parseMessage(message) {\n    var parsed = splitMessage(message);\n    return { headers: parseHeaders(parsed.headers), body: parsed.body };\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    parseMessage: parseMessage\n};\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['elastictranscoder'] = {};\nAWS.ElasticTranscoder = Service.defineService('elastictranscoder', ['2012-09-25']);\nObject.defineProperty(apiLoader.services['elastictranscoder'], '2012-09-25', {\n  get: function get() {\n    var model = require('../apis/elastictranscoder-2012-09-25.min.json');\n    model.paginators = require('../apis/elastictranscoder-2012-09-25.paginators.json').pagination;\n    model.waiters = require('../apis/elastictranscoder-2012-09-25.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ElasticTranscoder;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cur'] = {};\nAWS.CUR = Service.defineService('cur', ['2017-01-06']);\nObject.defineProperty(apiLoader.services['cur'], '2017-01-06', {\n  get: function get() {\n    var model = require('../apis/cur-2017-01-06.min.json');\n    model.paginators = require('../apis/cur-2017-01-06.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CUR;\n","var Hmac = require('./browserHmac');\nvar Md5 = require('./browserMd5');\nvar Sha1 = require('./browserSha1');\nvar Sha256 = require('./browserSha256');\n\n/**\n * @api private\n */\nmodule.exports = exports = {\n    createHash: function createHash(alg) {\n      alg = alg.toLowerCase();\n      if (alg === 'md5') {\n        return new Md5();\n      } else if (alg === 'sha256') {\n        return new Sha256();\n      } else if (alg === 'sha1') {\n        return new Sha1();\n      }\n\n      throw new Error('Hash algorithm ' + alg + ' is not supported in the browser SDK');\n    },\n    createHmac: function createHmac(alg, key) {\n      alg = alg.toLowerCase();\n      if (alg === 'md5') {\n        return new Hmac(Md5, key);\n      } else if (alg === 'sha256') {\n        return new Hmac(Sha256, key);\n      } else if (alg === 'sha1') {\n        return new Hmac(Sha1, key);\n      }\n\n      throw new Error('HMAC algorithm ' + alg + ' is not supported in the browser SDK');\n    },\n    createSign: function() {\n      throw new Error('createSign is not implemented in the browser');\n    }\n  };\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['marketplacecommerceanalytics'] = {};\nAWS.MarketplaceCommerceAnalytics = Service.defineService('marketplacecommerceanalytics', ['2015-07-01']);\nObject.defineProperty(apiLoader.services['marketplacecommerceanalytics'], '2015-07-01', {\n  get: function get() {\n    var model = require('../apis/marketplacecommerceanalytics-2015-07-01.min.json');\n    model.paginators = require('../apis/marketplacecommerceanalytics-2015-07-01.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.MarketplaceCommerceAnalytics;\n","var AWS = require('../core');\nrequire('../rds/signer');\n /**\n  * @api private\n  */\n var crossRegionOperations = ['copyDBSnapshot', 'createDBInstanceReadReplica', 'createDBCluster', 'copyDBClusterSnapshot'];\n\n AWS.util.update(AWS.RDS.prototype, {\n   /**\n    * @api private\n    */\n   setupRequestListeners: function setupRequestListeners(request) {\n     if (crossRegionOperations.indexOf(request.operation) !== -1 &&\n         request.params.SourceRegion) {\n       request.params = AWS.util.copy(request.params);\n       if (request.params.PreSignedUrl ||\n           request.params.SourceRegion === this.config.region) {\n         delete request.params.SourceRegion;\n       } else {\n         var doesParamValidation = !!this.config.paramValidation;\n         // remove the validate parameters listener so we can re-add it after we build the URL\n         if (doesParamValidation) {\n           request.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n         }\n         request.onAsync('validate', this.buildCrossRegionPresignedUrl);\n         if (doesParamValidation) {\n           request.addListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n         }\n       }\n     }\n   },\n\n   /**\n    * @api private\n    */\n   buildCrossRegionPresignedUrl: function buildCrossRegionPresignedUrl(req, done) {\n     var config = AWS.util.copy(req.service.config);\n     config.region = req.params.SourceRegion;\n     delete req.params.SourceRegion;\n     delete config.endpoint;\n     // relevant params for the operation will already be in req.params\n     delete config.params;\n     config.signatureVersion = 'v4';\n     var destinationRegion = req.service.config.region;\n\n     var svc = new req.service.constructor(config);\n     var newReq = svc[req.operation](AWS.util.copy(req.params));\n     newReq.on('build', function addDestinationRegionParam(request) {\n       var httpRequest = request.httpRequest;\n       httpRequest.params.DestinationRegion = destinationRegion;\n       httpRequest.body = AWS.util.queryParamsToString(httpRequest.params);\n     });\n     newReq.presign(function(err, url) {\n       if (err) done(err);\n       else {\n         req.params.PreSignedUrl = url;\n         done();\n       }\n     });\n   }\n });\n","var Collection = require('./collection');\nvar Operation = require('./operation');\nvar Shape = require('./shape');\nvar Paginator = require('./paginator');\nvar ResourceWaiter = require('./resource_waiter');\nvar metadata = require('../../apis/metadata.json');\n\nvar util = require('../util');\nvar property = util.property;\nvar memoizedProperty = util.memoizedProperty;\n\nfunction Api(api, options) {\n  var self = this;\n  api = api || {};\n  options = options || {};\n  options.api = this;\n\n  api.metadata = api.metadata || {};\n\n  var serviceIdentifier = options.serviceIdentifier;\n  delete options.serviceIdentifier;\n\n  property(this, 'isApi', true, false);\n  property(this, 'apiVersion', api.metadata.apiVersion);\n  property(this, 'endpointPrefix', api.metadata.endpointPrefix);\n  property(this, 'signingName', api.metadata.signingName);\n  property(this, 'globalEndpoint', api.metadata.globalEndpoint);\n  property(this, 'signatureVersion', api.metadata.signatureVersion);\n  property(this, 'jsonVersion', api.metadata.jsonVersion);\n  property(this, 'targetPrefix', api.metadata.targetPrefix);\n  property(this, 'protocol', api.metadata.protocol);\n  property(this, 'timestampFormat', api.metadata.timestampFormat);\n  property(this, 'xmlNamespaceUri', api.metadata.xmlNamespace);\n  property(this, 'abbreviation', api.metadata.serviceAbbreviation);\n  property(this, 'fullName', api.metadata.serviceFullName);\n  property(this, 'serviceId', api.metadata.serviceId);\n  if (serviceIdentifier && metadata[serviceIdentifier]) {\n      property(this, 'xmlNoDefaultLists', metadata[serviceIdentifier].xmlNoDefaultLists, false);\n  }\n\n  memoizedProperty(this, 'className', function() {\n    var name = api.metadata.serviceAbbreviation || api.metadata.serviceFullName;\n    if (!name) return null;\n\n    name = name.replace(/^Amazon|AWS\\s*|\\(.*|\\s+|\\W+/g, '');\n    if (name === 'ElasticLoadBalancing') name = 'ELB';\n    return name;\n  });\n\n  function addEndpointOperation(name, operation) {\n    if (operation.endpointoperation === true) {\n      property(self, 'endpointOperation', util.string.lowerFirst(name));\n    }\n    if (operation.endpointdiscovery && !self.hasRequiredEndpointDiscovery) {\n      property(\n        self,\n        'hasRequiredEndpointDiscovery',\n        operation.endpointdiscovery.required === true\n      );\n    }\n  }\n\n  property(this, 'operations', new Collection(api.operations, options, function(name, operation) {\n    return new Operation(name, operation, options);\n  }, util.string.lowerFirst, addEndpointOperation));\n\n  property(this, 'shapes', new Collection(api.shapes, options, function(name, shape) {\n    return Shape.create(shape, options);\n  }));\n\n  property(this, 'paginators', new Collection(api.paginators, options, function(name, paginator) {\n    return new Paginator(name, paginator, options);\n  }));\n\n  property(this, 'waiters', new Collection(api.waiters, options, function(name, waiter) {\n    return new ResourceWaiter(name, waiter, options);\n  }, util.string.lowerFirst));\n\n  if (options.documentation) {\n    property(this, 'documentation', api.documentation);\n    property(this, 'documentationUrl', api.documentationUrl);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = Api;\n","/**\n * Takes in a buffer of event messages and splits them into individual messages.\n * @param {Buffer} buffer\n * @api private\n */\nfunction eventMessageChunker(buffer) {\n    /** @type Buffer[] */\n    var messages = [];\n    var offset = 0;\n\n    while (offset < buffer.length) {\n        var totalLength = buffer.readInt32BE(offset);\n\n        // create new buffer for individual message (shares memory with original)\n        var message = buffer.slice(offset, totalLength + offset);\n        // increment offset to it starts at the next message\n        offset += totalLength;\n\n        messages.push(message);\n    }\n\n    return messages;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    eventMessageChunker: eventMessageChunker\n};\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['codedeploy'] = {};\nAWS.CodeDeploy = Service.defineService('codedeploy', ['2014-10-06']);\nObject.defineProperty(apiLoader.services['codedeploy'], '2014-10-06', {\n  get: function get() {\n    var model = require('../apis/codedeploy-2014-10-06.min.json');\n    model.paginators = require('../apis/codedeploy-2014-10-06.paginators.json').pagination;\n    model.waiters = require('../apis/codedeploy-2014-10-06.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CodeDeploy;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['sts'] = {};\nAWS.STS = Service.defineService('sts', ['2011-06-15']);\nrequire('../lib/services/sts');\nObject.defineProperty(apiLoader.services['sts'], '2011-06-15', {\n  get: function get() {\n    var model = require('../apis/sts-2011-06-15.min.json');\n    model.paginators = require('../apis/sts-2011-06-15.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.STS;\n","var AWS = require('./core');\n\n/**\n * Represents your AWS security credentials, specifically the\n * {accessKeyId}, {secretAccessKey}, and optional {sessionToken}.\n * Creating a `Credentials` object allows you to pass around your\n * security information to configuration and service objects.\n *\n * Note that this class typically does not need to be constructed manually,\n * as the {AWS.Config} and {AWS.Service} classes both accept simple\n * options hashes with the three keys. These structures will be converted\n * into Credentials objects automatically.\n *\n * ## Expiring and Refreshing Credentials\n *\n * Occasionally credentials can expire in the middle of a long-running\n * application. In this case, the SDK will automatically attempt to\n * refresh the credentials from the storage location if the Credentials\n * class implements the {refresh} method.\n *\n * If you are implementing a credential storage location, you\n * will want to create a subclass of the `Credentials` class and\n * override the {refresh} method. This method allows credentials to be\n * retrieved from the backing store, be it a file system, database, or\n * some network storage. The method should reset the credential attributes\n * on the object.\n *\n * @!attribute expired\n *   @return [Boolean] whether the credentials have been expired and\n *     require a refresh. Used in conjunction with {expireTime}.\n * @!attribute expireTime\n *   @return [Date] a time when credentials should be considered expired. Used\n *     in conjunction with {expired}.\n * @!attribute accessKeyId\n *   @return [String] the AWS access key ID\n * @!attribute secretAccessKey\n *   @return [String] the AWS secret access key\n * @!attribute sessionToken\n *   @return [String] an optional AWS session token\n */\nAWS.Credentials = AWS.util.inherit({\n  /**\n   * A credentials object can be created using positional arguments or an options\n   * hash.\n   *\n   * @overload AWS.Credentials(accessKeyId, secretAccessKey, sessionToken=null)\n   *   Creates a Credentials object with a given set of credential information\n   *   as positional arguments.\n   *   @param accessKeyId [String] the AWS access key ID\n   *   @param secretAccessKey [String] the AWS secret access key\n   *   @param sessionToken [String] the optional AWS session token\n   *   @example Create a credentials object with AWS credentials\n   *     var creds = new AWS.Credentials('akid', 'secret', 'session');\n   * @overload AWS.Credentials(options)\n   *   Creates a Credentials object with a given set of credential information\n   *   as an options hash.\n   *   @option options accessKeyId [String] the AWS access key ID\n   *   @option options secretAccessKey [String] the AWS secret access key\n   *   @option options sessionToken [String] the optional AWS session token\n   *   @example Create a credentials object with AWS credentials\n   *     var creds = new AWS.Credentials({\n   *       accessKeyId: 'akid', secretAccessKey: 'secret', sessionToken: 'session'\n   *     });\n   */\n  constructor: function Credentials() {\n    // hide secretAccessKey from being displayed with util.inspect\n    AWS.util.hideProperties(this, ['secretAccessKey']);\n\n    this.expired = false;\n    this.expireTime = null;\n    this.refreshCallbacks = [];\n    if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      var creds = arguments[0].credentials || arguments[0];\n      this.accessKeyId = creds.accessKeyId;\n      this.secretAccessKey = creds.secretAccessKey;\n      this.sessionToken = creds.sessionToken;\n    } else {\n      this.accessKeyId = arguments[0];\n      this.secretAccessKey = arguments[1];\n      this.sessionToken = arguments[2];\n    }\n  },\n\n  /**\n   * @return [Integer] the number of seconds before {expireTime} during which\n   *   the credentials will be considered expired.\n   */\n  expiryWindow: 15,\n\n  /**\n   * @return [Boolean] whether the credentials object should call {refresh}\n   * @note Subclasses should override this method to provide custom refresh\n   *   logic.\n   */\n  needsRefresh: function needsRefresh() {\n    var currentTime = AWS.util.date.getDate().getTime();\n    var adjustedTime = new Date(currentTime + this.expiryWindow * 1000);\n\n    if (this.expireTime && adjustedTime > this.expireTime) {\n      return true;\n    } else {\n      return this.expired || !this.accessKeyId || !this.secretAccessKey;\n    }\n  },\n\n  /**\n   * Gets the existing credentials, refreshing them if they are not yet loaded\n   * or have expired. Users should call this method before using {refresh},\n   * as this will not attempt to reload credentials when they are already\n   * loaded into the object.\n   *\n   * @callback callback function(err)\n   *   When this callback is called with no error, it means either credentials\n   *   do not need to be refreshed or refreshed credentials information has\n   *   been loaded into the object (as the `accessKeyId`, `secretAccessKey`,\n   *   and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   */\n  get: function get(callback) {\n    var self = this;\n    if (this.needsRefresh()) {\n      this.refresh(function(err) {\n        if (!err) self.expired = false; // reset expired flag\n        if (callback) callback(err);\n      });\n    } else if (callback) {\n      callback();\n    }\n  },\n\n  /**\n   * @!method  getPromise()\n   *   Returns a 'thenable' promise.\n   *   Gets the existing credentials, refreshing them if they are not yet loaded\n   *   or have expired. Users should call this method before using {refresh},\n   *   as this will not attempt to reload credentials when they are already\n   *   loaded into the object.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function()\n   *     Called if the promise is fulfilled. When this callback is called, it\n   *     means either credentials do not need to be refreshed or refreshed\n   *     credentials information has been loaded into the object (as the\n   *     `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] if an error occurred, this value will be filled\n   *   @return [Promise] A promise that represents the state of the `get` call.\n   *   @example Calling the `getPromise` method.\n   *     var promise = credProvider.getPromise();\n   *     promise.then(function() { ... }, function(err) { ... });\n   */\n\n  /**\n   * @!method  refreshPromise()\n   *   Returns a 'thenable' promise.\n   *   Refreshes the credentials. Users should call {get} before attempting\n   *   to forcibly refresh credentials.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function()\n   *     Called if the promise is fulfilled. When this callback is called, it\n   *     means refreshed credentials information has been loaded into the object\n   *     (as the `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] if an error occurred, this value will be filled\n   *   @return [Promise] A promise that represents the state of the `refresh` call.\n   *   @example Calling the `refreshPromise` method.\n   *     var promise = credProvider.refreshPromise();\n   *     promise.then(function() { ... }, function(err) { ... });\n   */\n\n  /**\n   * Refreshes the credentials. Users should call {get} before attempting\n   * to forcibly refresh credentials.\n   *\n   * @callback callback function(err)\n   *   When this callback is called with no error, it means refreshed\n   *   credentials information has been loaded into the object (as the\n   *   `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @note Subclasses should override this class to reset the\n   *   {accessKeyId}, {secretAccessKey} and optional {sessionToken}\n   *   on the credentials object and then call the callback with\n   *   any error information.\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.expired = false;\n    callback();\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  coalesceRefresh: function coalesceRefresh(callback, sync) {\n    var self = this;\n    if (self.refreshCallbacks.push(callback) === 1) {\n      self.load(function onLoad(err) {\n        AWS.util.arrayEach(self.refreshCallbacks, function(callback) {\n          if (sync) {\n            callback(err);\n          } else {\n            // callback could throw, so defer to ensure all callbacks are notified\n            AWS.util.defer(function () {\n              callback(err);\n            });\n          }\n        });\n        self.refreshCallbacks.length = 0;\n      });\n    }\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    callback();\n  }\n});\n\n/**\n * @api private\n */\nAWS.Credentials.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.getPromise = AWS.util.promisifyMethod('get', PromiseDependency);\n  this.prototype.refreshPromise = AWS.util.promisifyMethod('refresh', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.Credentials.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.getPromise;\n  delete this.prototype.refreshPromise;\n};\n\nAWS.util.addPromises(AWS.Credentials);\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['sqs'] = {};\nAWS.SQS = Service.defineService('sqs', ['2012-11-05']);\nrequire('../lib/services/sqs');\nObject.defineProperty(apiLoader.services['sqs'], '2012-11-05', {\n  get: function get() {\n    var model = require('../apis/sqs-2012-11-05.min.json');\n    model.paginators = require('../apis/sqs-2012-11-05.paginators.json').pagination;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SQS;\n","function AcceptorStateMachine(states, state) {\n  this.currentState = state || null;\n  this.states = states || {};\n}\n\nAcceptorStateMachine.prototype.runTo = function runTo(finalState, done, bindObject, inputError) {\n  if (typeof finalState === 'function') {\n    inputError = bindObject; bindObject = done;\n    done = finalState; finalState = null;\n  }\n\n  var self = this;\n  var state = self.states[self.currentState];\n  state.fn.call(bindObject || self, inputError, function(err) {\n    if (err) {\n      if (state.fail) self.currentState = state.fail;\n      else return done ? done.call(bindObject, err) : null;\n    } else {\n      if (state.accept) self.currentState = state.accept;\n      else return done ? done.call(bindObject) : null;\n    }\n    if (self.currentState === finalState) {\n      return done ? done.call(bindObject, err) : null;\n    }\n\n    self.runTo(finalState, done, bindObject, err);\n  });\n};\n\nAcceptorStateMachine.prototype.addState = function addState(name, acceptState, failState, fn) {\n  if (typeof acceptState === 'function') {\n    fn = acceptState; acceptState = null; failState = null;\n  } else if (typeof failState === 'function') {\n    fn = failState; failState = null;\n  }\n\n  if (!this.currentState) this.currentState = name;\n  this.states[name] = { accept: acceptState, fail: failState, fn: fn };\n  return this;\n};\n\n/**\n * @api private\n */\nmodule.exports = AcceptorStateMachine;\n","var util = require('../util');\nvar Rest = require('./rest');\nvar Json = require('./json');\nvar JsonBuilder = require('../json/builder');\nvar JsonParser = require('../json/parser');\n\nfunction populateBody(req) {\n  var builder = new JsonBuilder();\n  var input = req.service.api.operations[req.operation].input;\n\n  if (input.payload) {\n    var params = {};\n    var payloadShape = input.members[input.payload];\n    params = req.params[input.payload];\n    if (params === undefined) return;\n\n    if (payloadShape.type === 'structure') {\n      req.httpRequest.body = builder.build(params, payloadShape);\n      applyContentTypeHeader(req);\n    } else { // non-JSON payload\n      req.httpRequest.body = params;\n      if (payloadShape.type === 'binary' || payloadShape.isStreaming) {\n        applyContentTypeHeader(req, true);\n      }\n    }\n  } else {\n    var body = builder.build(req.params, input);\n    if (body !== '{}' || req.httpRequest.method !== 'GET') { //don't send empty body for GET method\n      req.httpRequest.body = body;\n    }\n    applyContentTypeHeader(req);\n  }\n}\n\nfunction applyContentTypeHeader(req, isBinary) {\n  var operation = req.service.api.operations[req.operation];\n  var input = operation.input;\n\n  if (!req.httpRequest.headers['Content-Type']) {\n    var type = isBinary ? 'binary/octet-stream' : 'application/json';\n    req.httpRequest.headers['Content-Type'] = type;\n  }\n}\n\nfunction buildRequest(req) {\n  Rest.buildRequest(req);\n\n  // never send body payload on HEAD/DELETE\n  if (['HEAD', 'DELETE'].indexOf(req.httpRequest.method) < 0) {\n    populateBody(req);\n  }\n}\n\nfunction extractError(resp) {\n  Json.extractError(resp);\n}\n\nfunction extractData(resp) {\n  Rest.extractData(resp);\n\n  var req = resp.request;\n  var operation = req.service.api.operations[req.operation];\n  var rules = req.service.api.operations[req.operation].output || {};\n  var parser;\n  var hasEventOutput = operation.hasEventOutput;\n\n  if (rules.payload) {\n    var payloadMember = rules.members[rules.payload];\n    var body = resp.httpResponse.body;\n    if (payloadMember.isEventStream) {\n      parser = new JsonParser();\n      resp.data[payload] = util.createEventStream(\n        AWS.HttpClient.streamsApiVersion === 2 ? resp.httpResponse.stream : body,\n        parser,\n        payloadMember\n      );\n    } else if (payloadMember.type === 'structure' || payloadMember.type === 'list') {\n      var parser = new JsonParser();\n      resp.data[rules.payload] = parser.parse(body, payloadMember);\n    } else if (payloadMember.type === 'binary' || payloadMember.isStreaming) {\n      resp.data[rules.payload] = body;\n    } else {\n      resp.data[rules.payload] = payloadMember.toType(body);\n    }\n  } else {\n    var data = resp.data;\n    Json.extractData(resp);\n    resp.data = util.merge(data, resp.data);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['elasticache'] = {};\nAWS.ElastiCache = Service.defineService('elasticache', ['2012-11-15*', '2014-03-24*', '2014-07-15*', '2014-09-30*', '2015-02-02']);\nObject.defineProperty(apiLoader.services['elasticache'], '2015-02-02', {\n  get: function get() {\n    var model = require('../apis/elasticache-2015-02-02.min.json');\n    model.paginators = require('../apis/elasticache-2015-02-02.paginators.json').pagination;\n    model.waiters = require('../apis/elasticache-2015-02-02.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ElastiCache;\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['elasticbeanstalk'] = {};\nAWS.ElasticBeanstalk = Service.defineService('elasticbeanstalk', ['2010-12-01']);\nObject.defineProperty(apiLoader.services['elasticbeanstalk'], '2010-12-01', {\n  get: function get() {\n    var model = require('../apis/elasticbeanstalk-2010-12-01.min.json');\n    model.paginators = require('../apis/elasticbeanstalk-2010-12-01.paginators.json').pagination;\n    model.waiters = require('../apis/elasticbeanstalk-2010-12-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.ElasticBeanstalk;\n","var hashUtils = require('./browserHashUtils');\n\n/**\n * @api private\n */\nfunction Hmac(hashCtor, secret) {\n    this.hash = new hashCtor();\n    this.outer = new hashCtor();\n\n    var inner = bufferFromSecret(hashCtor, secret);\n    var outer = new Uint8Array(hashCtor.BLOCK_SIZE);\n    outer.set(inner);\n\n    for (var i = 0; i < hashCtor.BLOCK_SIZE; i++) {\n        inner[i] ^= 0x36;\n        outer[i] ^= 0x5c;\n    }\n\n    this.hash.update(inner);\n    this.outer.update(outer);\n\n    // Zero out the copied key buffer.\n    for (var i = 0; i < inner.byteLength; i++) {\n        inner[i] = 0;\n    }\n}\n\n/**\n * @api private\n */\nmodule.exports = exports = Hmac;\n\nHmac.prototype.update = function (toHash) {\n    if (hashUtils.isEmptyData(toHash) || this.error) {\n        return this;\n    }\n\n    try {\n        this.hash.update(hashUtils.convertToBuffer(toHash));\n    } catch (e) {\n        this.error = e;\n    }\n\n    return this;\n};\n\nHmac.prototype.digest = function (encoding) {\n    if (!this.outer.finished) {\n        this.outer.update(this.hash.digest());\n    }\n\n    return this.outer.digest(encoding);\n};\n\nfunction bufferFromSecret(hashCtor, secret) {\n    var input = hashUtils.convertToBuffer(secret);\n    if (input.byteLength > hashCtor.BLOCK_SIZE) {\n        var bufferHash = new hashCtor;\n        bufferHash.update(input);\n        input = bufferHash.digest();\n    }\n    var buffer = new Uint8Array(hashCtor.BLOCK_SIZE);\n    buffer.set(input);\n    return buffer;\n}\n","require('../lib/node_loader');\nvar AWS = require('../lib/core');\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['ses'] = {};\nAWS.SES = Service.defineService('ses', ['2010-12-01']);\nObject.defineProperty(apiLoader.services['ses'], '2010-12-01', {\n  get: function get() {\n    var model = require('../apis/email-2010-12-01.min.json');\n    model.paginators = require('../apis/email-2010-12-01.paginators.json').pagination;\n    model.waiters = require('../apis/email-2010-12-01.waiters2.json').waiters;\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.SES;\n"],"sourceRoot":""}